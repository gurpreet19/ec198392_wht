CREATE OR REPLACE PACKAGE ec_class_db_mapping IS
------------------------------------------------------------------------------------
-- Package: ec_class_db_mapping
-- Generated by EC_GENERATE.

-- DO NOT MODIFY THIS PACKAGE! Changes will be lost when the package is regenerated.
-- Packages named pck_<component> will hold all manual written common code.
-- Packages named <sysnam>_<component> will hold all code not beeing common.
------------------------------------------------------------------------------------

------------------------------------------------------------------------------------
FUNCTION db_object_type(
         p_class_name VARCHAR2) RETURN CLASS_DB_MAPPING.DB_OBJECT_TYPE%TYPE ;
------------------------------------------------------------------------------------
FUNCTION db_object_owner(
         p_class_name VARCHAR2) RETURN CLASS_DB_MAPPING.DB_OBJECT_OWNER%TYPE ;
------------------------------------------------------------------------------------
FUNCTION db_object_name(
         p_class_name VARCHAR2) RETURN CLASS_DB_MAPPING.DB_OBJECT_NAME%TYPE ;
------------------------------------------------------------------------------------
FUNCTION db_object_attribute(
         p_class_name VARCHAR2) RETURN CLASS_DB_MAPPING.DB_OBJECT_ATTRIBUTE%TYPE ;
------------------------------------------------------------------------------------
FUNCTION db_where_condition(
         p_class_name VARCHAR2) RETURN CLASS_DB_MAPPING.DB_WHERE_CONDITION%TYPE ;
------------------------------------------------------------------------------------
FUNCTION record_status(
         p_class_name VARCHAR2) RETURN CLASS_DB_MAPPING.RECORD_STATUS%TYPE ;
------------------------------------------------------------------------------------
FUNCTION approval_state(
         p_class_name VARCHAR2) RETURN CLASS_DB_MAPPING.APPROVAL_STATE%TYPE ;
------------------------------------------------------------------------------------
FUNCTION approval_by(
         p_class_name VARCHAR2) RETURN CLASS_DB_MAPPING.APPROVAL_BY%TYPE ;
------------------------------------------------------------------------------------
FUNCTION approval_date(
         p_class_name VARCHAR2) RETURN CLASS_DB_MAPPING.APPROVAL_DATE%TYPE ;
------------------------------------------------------------------------------------
FUNCTION rec_id(
         p_class_name VARCHAR2) RETURN CLASS_DB_MAPPING.REC_ID%TYPE ;
------------------------------------------------------------------------------------
FUNCTION row_by_pk (
         p_class_name VARCHAR2) RETURN CLASS_DB_MAPPING%ROWTYPE;

END ec_class_db_mapping;
/
CREATE OR REPLACE PACKAGE BODY ec_class_db_mapping IS
------------------------------------------------------------------------------------
-- Package body: ec_class_db_mapping
-- Generated by EC_GENERATE.
------------------------------------------------------------------------------------















------------------------------------------------------------------------------------
FUNCTION db_object_type(
         p_class_name VARCHAR2)
RETURN CLASS_DB_MAPPING.DB_OBJECT_TYPE%TYPE  IS
   v_return_val CLASS_DB_MAPPING.DB_OBJECT_TYPE%TYPE ;
   CURSOR c_col_val IS
   SELECT db_object_type col
   FROM CLASS_DB_MAPPING
WHERE class_name = p_class_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END db_object_type;

------------------------------------------------------------------------------------
FUNCTION db_object_owner(
         p_class_name VARCHAR2)
RETURN CLASS_DB_MAPPING.DB_OBJECT_OWNER%TYPE  IS
   v_return_val CLASS_DB_MAPPING.DB_OBJECT_OWNER%TYPE ;
   CURSOR c_col_val IS
   SELECT db_object_owner col
   FROM CLASS_DB_MAPPING
WHERE class_name = p_class_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END db_object_owner;

------------------------------------------------------------------------------------
FUNCTION db_object_name(
         p_class_name VARCHAR2)
RETURN CLASS_DB_MAPPING.DB_OBJECT_NAME%TYPE  IS
   v_return_val CLASS_DB_MAPPING.DB_OBJECT_NAME%TYPE ;
   CURSOR c_col_val IS
   SELECT db_object_name col
   FROM CLASS_DB_MAPPING
WHERE class_name = p_class_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END db_object_name;

------------------------------------------------------------------------------------
FUNCTION db_object_attribute(
         p_class_name VARCHAR2)
RETURN CLASS_DB_MAPPING.DB_OBJECT_ATTRIBUTE%TYPE  IS
   v_return_val CLASS_DB_MAPPING.DB_OBJECT_ATTRIBUTE%TYPE ;
   CURSOR c_col_val IS
   SELECT db_object_attribute col
   FROM CLASS_DB_MAPPING
WHERE class_name = p_class_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END db_object_attribute;

------------------------------------------------------------------------------------
FUNCTION db_where_condition(
         p_class_name VARCHAR2)
RETURN CLASS_DB_MAPPING.DB_WHERE_CONDITION%TYPE  IS
   v_return_val CLASS_DB_MAPPING.DB_WHERE_CONDITION%TYPE ;
   CURSOR c_col_val IS
   SELECT db_where_condition col
   FROM CLASS_DB_MAPPING
WHERE class_name = p_class_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END db_where_condition;

------------------------------------------------------------------------------------
FUNCTION record_status(
         p_class_name VARCHAR2)
RETURN CLASS_DB_MAPPING.RECORD_STATUS%TYPE  IS
   v_return_val CLASS_DB_MAPPING.RECORD_STATUS%TYPE ;
   CURSOR c_col_val IS
   SELECT record_status col
   FROM CLASS_DB_MAPPING
WHERE class_name = p_class_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END record_status;

------------------------------------------------------------------------------------
FUNCTION approval_state(
         p_class_name VARCHAR2)
RETURN CLASS_DB_MAPPING.APPROVAL_STATE%TYPE  IS
   v_return_val CLASS_DB_MAPPING.APPROVAL_STATE%TYPE ;
   CURSOR c_col_val IS
   SELECT approval_state col
   FROM CLASS_DB_MAPPING
WHERE class_name = p_class_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END approval_state;

------------------------------------------------------------------------------------
FUNCTION approval_by(
         p_class_name VARCHAR2)
RETURN CLASS_DB_MAPPING.APPROVAL_BY%TYPE  IS
   v_return_val CLASS_DB_MAPPING.APPROVAL_BY%TYPE ;
   CURSOR c_col_val IS
   SELECT approval_by col
   FROM CLASS_DB_MAPPING
WHERE class_name = p_class_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END approval_by;

------------------------------------------------------------------------------------
FUNCTION approval_date(
         p_class_name VARCHAR2)
RETURN CLASS_DB_MAPPING.APPROVAL_DATE%TYPE  IS
   v_return_val CLASS_DB_MAPPING.APPROVAL_DATE%TYPE ;
   CURSOR c_col_val IS
   SELECT approval_date col
   FROM CLASS_DB_MAPPING
WHERE class_name = p_class_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END approval_date;

------------------------------------------------------------------------------------
FUNCTION rec_id(
         p_class_name VARCHAR2)
RETURN CLASS_DB_MAPPING.REC_ID%TYPE  IS
   v_return_val CLASS_DB_MAPPING.REC_ID%TYPE ;
   CURSOR c_col_val IS
   SELECT rec_id col
   FROM CLASS_DB_MAPPING
WHERE class_name = p_class_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END rec_id;


------------------------------------------------------------------------------------
FUNCTION row_by_pk (
         p_class_name VARCHAR2)
RETURN CLASS_DB_MAPPING%ROWTYPE IS
   v_return_rec CLASS_DB_MAPPING%ROWTYPE;
   CURSOR c_read_row IS
   SELECT *
   FROM CLASS_DB_MAPPING
WHERE class_name = p_class_name;
BEGIN
   FOR cur_rec IN c_read_row LOOP
      v_return_rec := cur_rec;
   END LOOP;
   RETURN v_return_rec;
END row_by_pk;



END ec_class_db_mapping;
/
