CREATE OR REPLACE PACKAGE ec_class IS
------------------------------------------------------------------------------------
-- Package: ec_class
-- Generated by EC_GENERATE.

-- DO NOT MODIFY THIS PACKAGE! Changes will be lost when the package is regenerated.
-- Packages named pck_<component> will hold all manual written common code.
-- Packages named <sysnam>_<component> will hold all code not beeing common.
------------------------------------------------------------------------------------

------------------------------------------------------------------------------------
FUNCTION super_class(
         p_class_name VARCHAR2) RETURN CLASS.SUPER_CLASS%TYPE ;
------------------------------------------------------------------------------------
FUNCTION class_type(
         p_class_name VARCHAR2) RETURN CLASS.CLASS_TYPE%TYPE ;
------------------------------------------------------------------------------------
FUNCTION app_space_code(
         p_class_name VARCHAR2) RETURN CLASS.APP_SPACE_CODE%TYPE ;
------------------------------------------------------------------------------------
FUNCTION time_scope_code(
         p_class_name VARCHAR2) RETURN CLASS.TIME_SCOPE_CODE%TYPE ;
------------------------------------------------------------------------------------
FUNCTION owner_class_name(
         p_class_name VARCHAR2) RETURN CLASS.OWNER_CLASS_NAME%TYPE ;
------------------------------------------------------------------------------------
FUNCTION class_short_code(
         p_class_name VARCHAR2) RETURN CLASS.CLASS_SHORT_CODE%TYPE ;
------------------------------------------------------------------------------------
FUNCTION class_version(
         p_class_name VARCHAR2) RETURN CLASS.CLASS_VERSION%TYPE ;
------------------------------------------------------------------------------------
FUNCTION label(
         p_class_name VARCHAR2) RETURN CLASS.LABEL%TYPE ;
------------------------------------------------------------------------------------
FUNCTION ensure_rev_text_on_upd(
         p_class_name VARCHAR2) RETURN CLASS.ENSURE_REV_TEXT_ON_UPD%TYPE ;
------------------------------------------------------------------------------------
FUNCTION read_only_ind(
         p_class_name VARCHAR2) RETURN CLASS.READ_ONLY_IND%TYPE ;
------------------------------------------------------------------------------------
FUNCTION include_in_validation(
         p_class_name VARCHAR2) RETURN CLASS.INCLUDE_IN_VALIDATION%TYPE ;
------------------------------------------------------------------------------------
FUNCTION journal_rule_db_syntax(
         p_class_name VARCHAR2) RETURN CLASS.JOURNAL_RULE_DB_SYNTAX%TYPE ;
------------------------------------------------------------------------------------
FUNCTION calc_mapping_syntax(
         p_class_name VARCHAR2) RETURN CLASS.CALC_MAPPING_SYNTAX%TYPE ;
------------------------------------------------------------------------------------
FUNCTION lock_rule(
         p_class_name VARCHAR2) RETURN CLASS.LOCK_RULE%TYPE ;
------------------------------------------------------------------------------------
FUNCTION lock_ind(
         p_class_name VARCHAR2) RETURN CLASS.LOCK_IND%TYPE ;
------------------------------------------------------------------------------------
FUNCTION access_control_ind(
         p_class_name VARCHAR2) RETURN CLASS.ACCESS_CONTROL_IND%TYPE ;
------------------------------------------------------------------------------------
FUNCTION approval_ind(
         p_class_name VARCHAR2) RETURN CLASS.APPROVAL_IND%TYPE ;
------------------------------------------------------------------------------------
FUNCTION skip_trg_check_ind(
         p_class_name VARCHAR2) RETURN CLASS.SKIP_TRG_CHECK_IND%TYPE ;
------------------------------------------------------------------------------------
FUNCTION include_webservice(
         p_class_name VARCHAR2) RETURN CLASS.INCLUDE_WEBSERVICE%TYPE ;
------------------------------------------------------------------------------------
FUNCTION create_ev_ind(
         p_class_name VARCHAR2) RETURN CLASS.CREATE_EV_IND%TYPE ;
------------------------------------------------------------------------------------
FUNCTION description(
         p_class_name VARCHAR2) RETURN CLASS.DESCRIPTION%TYPE ;
------------------------------------------------------------------------------------
FUNCTION record_status(
         p_class_name VARCHAR2) RETURN CLASS.RECORD_STATUS%TYPE ;
------------------------------------------------------------------------------------
FUNCTION approval_state(
         p_class_name VARCHAR2) RETURN CLASS.APPROVAL_STATE%TYPE ;
------------------------------------------------------------------------------------
FUNCTION approval_by(
         p_class_name VARCHAR2) RETURN CLASS.APPROVAL_BY%TYPE ;
------------------------------------------------------------------------------------
FUNCTION approval_date(
         p_class_name VARCHAR2) RETURN CLASS.APPROVAL_DATE%TYPE ;
------------------------------------------------------------------------------------
FUNCTION rec_id(
         p_class_name VARCHAR2) RETURN CLASS.REC_ID%TYPE ;
------------------------------------------------------------------------------------
FUNCTION row_by_pk (
         p_class_name VARCHAR2) RETURN CLASS%ROWTYPE;

END ec_class;
/
CREATE OR REPLACE PACKAGE BODY ec_class IS
------------------------------------------------------------------------------------
-- Package body: ec_class
-- Generated by EC_GENERATE.
------------------------------------------------------------------------------------















------------------------------------------------------------------------------------
FUNCTION super_class(
         p_class_name VARCHAR2)
RETURN CLASS.SUPER_CLASS%TYPE  IS
   v_return_val CLASS.SUPER_CLASS%TYPE ;
   CURSOR c_col_val IS
   SELECT super_class col
   FROM CLASS
WHERE class_name = p_class_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END super_class;

------------------------------------------------------------------------------------
FUNCTION class_type(
         p_class_name VARCHAR2)
RETURN CLASS.CLASS_TYPE%TYPE  IS
   v_return_val CLASS.CLASS_TYPE%TYPE ;
   CURSOR c_col_val IS
   SELECT class_type col
   FROM CLASS
WHERE class_name = p_class_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END class_type;

------------------------------------------------------------------------------------
FUNCTION app_space_code(
         p_class_name VARCHAR2)
RETURN CLASS.APP_SPACE_CODE%TYPE  IS
   v_return_val CLASS.APP_SPACE_CODE%TYPE ;
   CURSOR c_col_val IS
   SELECT app_space_code col
   FROM CLASS
WHERE class_name = p_class_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END app_space_code;

------------------------------------------------------------------------------------
FUNCTION time_scope_code(
         p_class_name VARCHAR2)
RETURN CLASS.TIME_SCOPE_CODE%TYPE  IS
   v_return_val CLASS.TIME_SCOPE_CODE%TYPE ;
   CURSOR c_col_val IS
   SELECT time_scope_code col
   FROM CLASS
WHERE class_name = p_class_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END time_scope_code;

------------------------------------------------------------------------------------
FUNCTION owner_class_name(
         p_class_name VARCHAR2)
RETURN CLASS.OWNER_CLASS_NAME%TYPE  IS
   v_return_val CLASS.OWNER_CLASS_NAME%TYPE ;
   CURSOR c_col_val IS
   SELECT owner_class_name col
   FROM CLASS
WHERE class_name = p_class_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END owner_class_name;

------------------------------------------------------------------------------------
FUNCTION class_short_code(
         p_class_name VARCHAR2)
RETURN CLASS.CLASS_SHORT_CODE%TYPE  IS
   v_return_val CLASS.CLASS_SHORT_CODE%TYPE ;
   CURSOR c_col_val IS
   SELECT class_short_code col
   FROM CLASS
WHERE class_name = p_class_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END class_short_code;

------------------------------------------------------------------------------------
FUNCTION class_version(
         p_class_name VARCHAR2)
RETURN CLASS.CLASS_VERSION%TYPE  IS
   v_return_val CLASS.CLASS_VERSION%TYPE ;
   CURSOR c_col_val IS
   SELECT class_version col
   FROM CLASS
WHERE class_name = p_class_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END class_version;

------------------------------------------------------------------------------------
FUNCTION label(
         p_class_name VARCHAR2)
RETURN CLASS.LABEL%TYPE  IS
   v_return_val CLASS.LABEL%TYPE ;
   CURSOR c_col_val IS
   SELECT label col
   FROM CLASS
WHERE class_name = p_class_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END label;

------------------------------------------------------------------------------------
FUNCTION ensure_rev_text_on_upd(
         p_class_name VARCHAR2)
RETURN CLASS.ENSURE_REV_TEXT_ON_UPD%TYPE  IS
   v_return_val CLASS.ENSURE_REV_TEXT_ON_UPD%TYPE ;
   CURSOR c_col_val IS
   SELECT ensure_rev_text_on_upd col
   FROM CLASS
WHERE class_name = p_class_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END ensure_rev_text_on_upd;

------------------------------------------------------------------------------------
FUNCTION read_only_ind(
         p_class_name VARCHAR2)
RETURN CLASS.READ_ONLY_IND%TYPE  IS
   v_return_val CLASS.READ_ONLY_IND%TYPE ;
   CURSOR c_col_val IS
   SELECT read_only_ind col
   FROM CLASS
WHERE class_name = p_class_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END read_only_ind;

------------------------------------------------------------------------------------
FUNCTION include_in_validation(
         p_class_name VARCHAR2)
RETURN CLASS.INCLUDE_IN_VALIDATION%TYPE  IS
   v_return_val CLASS.INCLUDE_IN_VALIDATION%TYPE ;
   CURSOR c_col_val IS
   SELECT include_in_validation col
   FROM CLASS
WHERE class_name = p_class_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END include_in_validation;

------------------------------------------------------------------------------------
FUNCTION journal_rule_db_syntax(
         p_class_name VARCHAR2)
RETURN CLASS.JOURNAL_RULE_DB_SYNTAX%TYPE  IS
   v_return_val CLASS.JOURNAL_RULE_DB_SYNTAX%TYPE ;
   CURSOR c_col_val IS
   SELECT journal_rule_db_syntax col
   FROM CLASS
WHERE class_name = p_class_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END journal_rule_db_syntax;

------------------------------------------------------------------------------------
FUNCTION calc_mapping_syntax(
         p_class_name VARCHAR2)
RETURN CLASS.CALC_MAPPING_SYNTAX%TYPE  IS
   v_return_val CLASS.CALC_MAPPING_SYNTAX%TYPE ;
   CURSOR c_col_val IS
   SELECT calc_mapping_syntax col
   FROM CLASS
WHERE class_name = p_class_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END calc_mapping_syntax;

------------------------------------------------------------------------------------
FUNCTION lock_rule(
         p_class_name VARCHAR2)
RETURN CLASS.LOCK_RULE%TYPE  IS
   v_return_val CLASS.LOCK_RULE%TYPE ;
   CURSOR c_col_val IS
   SELECT lock_rule col
   FROM CLASS
WHERE class_name = p_class_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END lock_rule;

------------------------------------------------------------------------------------
FUNCTION lock_ind(
         p_class_name VARCHAR2)
RETURN CLASS.LOCK_IND%TYPE  IS
   v_return_val CLASS.LOCK_IND%TYPE ;
   CURSOR c_col_val IS
   SELECT lock_ind col
   FROM CLASS
WHERE class_name = p_class_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END lock_ind;

------------------------------------------------------------------------------------
FUNCTION access_control_ind(
         p_class_name VARCHAR2)
RETURN CLASS.ACCESS_CONTROL_IND%TYPE  IS
   v_return_val CLASS.ACCESS_CONTROL_IND%TYPE ;
   CURSOR c_col_val IS
   SELECT access_control_ind col
   FROM CLASS
WHERE class_name = p_class_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END access_control_ind;

------------------------------------------------------------------------------------
FUNCTION approval_ind(
         p_class_name VARCHAR2)
RETURN CLASS.APPROVAL_IND%TYPE  IS
   v_return_val CLASS.APPROVAL_IND%TYPE ;
   CURSOR c_col_val IS
   SELECT approval_ind col
   FROM CLASS
WHERE class_name = p_class_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END approval_ind;

------------------------------------------------------------------------------------
FUNCTION skip_trg_check_ind(
         p_class_name VARCHAR2)
RETURN CLASS.SKIP_TRG_CHECK_IND%TYPE  IS
   v_return_val CLASS.SKIP_TRG_CHECK_IND%TYPE ;
   CURSOR c_col_val IS
   SELECT skip_trg_check_ind col
   FROM CLASS
WHERE class_name = p_class_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END skip_trg_check_ind;

------------------------------------------------------------------------------------
FUNCTION include_webservice(
         p_class_name VARCHAR2)
RETURN CLASS.INCLUDE_WEBSERVICE%TYPE  IS
   v_return_val CLASS.INCLUDE_WEBSERVICE%TYPE ;
   CURSOR c_col_val IS
   SELECT include_webservice col
   FROM CLASS
WHERE class_name = p_class_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END include_webservice;

------------------------------------------------------------------------------------
FUNCTION create_ev_ind(
         p_class_name VARCHAR2)
RETURN CLASS.CREATE_EV_IND%TYPE  IS
   v_return_val CLASS.CREATE_EV_IND%TYPE ;
   CURSOR c_col_val IS
   SELECT create_ev_ind col
   FROM CLASS
WHERE class_name = p_class_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END create_ev_ind;

------------------------------------------------------------------------------------
FUNCTION description(
         p_class_name VARCHAR2)
RETURN CLASS.DESCRIPTION%TYPE  IS
   v_return_val CLASS.DESCRIPTION%TYPE ;
   CURSOR c_col_val IS
   SELECT description col
   FROM CLASS
WHERE class_name = p_class_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END description;

------------------------------------------------------------------------------------
FUNCTION record_status(
         p_class_name VARCHAR2)
RETURN CLASS.RECORD_STATUS%TYPE  IS
   v_return_val CLASS.RECORD_STATUS%TYPE ;
   CURSOR c_col_val IS
   SELECT record_status col
   FROM CLASS
WHERE class_name = p_class_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END record_status;

------------------------------------------------------------------------------------
FUNCTION approval_state(
         p_class_name VARCHAR2)
RETURN CLASS.APPROVAL_STATE%TYPE  IS
   v_return_val CLASS.APPROVAL_STATE%TYPE ;
   CURSOR c_col_val IS
   SELECT approval_state col
   FROM CLASS
WHERE class_name = p_class_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END approval_state;

------------------------------------------------------------------------------------
FUNCTION approval_by(
         p_class_name VARCHAR2)
RETURN CLASS.APPROVAL_BY%TYPE  IS
   v_return_val CLASS.APPROVAL_BY%TYPE ;
   CURSOR c_col_val IS
   SELECT approval_by col
   FROM CLASS
WHERE class_name = p_class_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END approval_by;

------------------------------------------------------------------------------------
FUNCTION approval_date(
         p_class_name VARCHAR2)
RETURN CLASS.APPROVAL_DATE%TYPE  IS
   v_return_val CLASS.APPROVAL_DATE%TYPE ;
   CURSOR c_col_val IS
   SELECT approval_date col
   FROM CLASS
WHERE class_name = p_class_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END approval_date;

------------------------------------------------------------------------------------
FUNCTION rec_id(
         p_class_name VARCHAR2)
RETURN CLASS.REC_ID%TYPE  IS
   v_return_val CLASS.REC_ID%TYPE ;
   CURSOR c_col_val IS
   SELECT rec_id col
   FROM CLASS
WHERE class_name = p_class_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END rec_id;


------------------------------------------------------------------------------------
FUNCTION row_by_pk (
         p_class_name VARCHAR2)
RETURN CLASS%ROWTYPE IS
   v_return_rec CLASS%ROWTYPE;
   CURSOR c_read_row IS
   SELECT *
   FROM CLASS
WHERE class_name = p_class_name;
BEGIN
   FOR cur_rec IN c_read_row LOOP
      v_return_rec := cur_rec;
   END LOOP;
   RETURN v_return_rec;
END row_by_pk;



END ec_class;
/
