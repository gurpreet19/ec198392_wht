DECLARE
   HASENTRY NUMBER;
     sqlQuery clob:='UPDATE STRM_SET_LIST_JN SET BALANCING_USAGE = ''PO.0124'' WHERE BALANCING_FLAG = ''Y''';
BEGIN
SELECT COUNT(*) INTO HASENTRY FROM USER_TRIGGERS 
		WHERE TRIGGER_NAME = 'IU_STRM_SET_LIST_JN'; 
		IF HASENTRY > 0 THEN 
		EXECUTE IMMEDIATE 'ALTER TRIGGER IU_STRM_SET_LIST_JN DISABLE';
		END IF;
		
     EXECUTE IMMEDIATE sqlQuery;
	 
	  SELECT COUNT(*) INTO HASENTRY FROM USER_TRIGGERS 
		WHERE TRIGGER_NAME = 'IU_STRM_SET_LIST_JN'; 
		IF HASENTRY > 0 THEN 
		EXECUTE IMMEDIATE 'ALTER TRIGGER IU_STRM_SET_LIST_JN ENABLE';
		END IF;
		
     dbms_output.put_line('SUCCESS: ' || sqlQuery);
     dbms_output.put_line('No of Rows Updated:' || sql%rowcount);
     EXCEPTION
        WHEN OTHERS THEN
		IF HASENTRY > 0 THEN 
		EXECUTE IMMEDIATE 'ALTER TRIGGER IU_STRM_SET_LIST_JN ENABLE';
		END IF;
         --UPDATE_MILESTONE_WITH_ERROR('post_data_model');
         raise_application_error(-20000, 'ERROR: Some Other fatal error occured' || SQLERRM);
 END;
--~^UTDELIM^~--