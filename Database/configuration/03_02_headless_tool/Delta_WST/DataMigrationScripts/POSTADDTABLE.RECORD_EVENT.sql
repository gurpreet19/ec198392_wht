
-- move records from MISMEASUREMENT_EVENT to RECORD_EVENT
DECLARE
HASENTRY NUMBER;
BEGIN
SELECT COUNT(*) INTO HASENTRY FROM USER_TRIGGERS 
                        WHERE TRIGGER_NAME = 'IU_RECORD_EVENT'; 
                        IF HASENTRY > 0 THEN 
                        EXECUTE IMMEDIATE 'ALTER TRIGGER IU_RECORD_EVENT DISABLE';
                        END IF;

	INSERT INTO RECORD_EVENT (APPROVAL_BY,  APPROVAL_DATE,  APPROVAL_STATE,  CLASS_NAME,  CLOSED_IND,  CREATED_BY,  CREATED_DATE,  DATE_1,  DATE_2,  DATE_3,  DATE_4,  DATE_5,  DESCRIPTION,  EVENT_NO,  FROM_DATE,  LAST_UPDATED_BY,  LAST_UPDATED_DATE,  RECORD_STATUS,  REC_ID,  REV_NO,  REV_TEXT,  TEXT_1,  TEXT_10,  TEXT_11,  TEXT_12,  TEXT_13,  TEXT_14,  TEXT_15,  TEXT_2,  TEXT_3,  TEXT_4,  TEXT_5,  TEXT_6,  TEXT_7,  TEXT_8,  TEXT_9,  TO_DATE,  VALUE_1,  VALUE_10,  VALUE_11,  VALUE_12,  VALUE_13,  VALUE_14,  VALUE_15,  VALUE_16,  VALUE_17,  VALUE_18,  VALUE_19,  VALUE_2,  VALUE_20,  VALUE_21,  VALUE_22,  VALUE_23,  VALUE_24,  VALUE_25,  VALUE_26,  VALUE_27,  VALUE_28,  VALUE_29,  VALUE_3,  VALUE_30,  VALUE_4,  VALUE_5,  VALUE_6,  VALUE_7,  VALUE_8,  VALUE_9) 
	SELECT APPROVAL_BY,  APPROVAL_DATE,  APPROVAL_STATE,  CLASS_NAME,  CLOSED_IND,  CREATED_BY,  CREATED_DATE,  DATE_1,  DATE_2,  DATE_3,  DATE_4,  DATE_5,  DESCRIPTION,  EVENT_NO,  FROM_DATE,  LAST_UPDATED_BY,  LAST_UPDATED_DATE,  RECORD_STATUS,  REC_ID,  REV_NO,  REV_TEXT,  TEXT_1,  TEXT_10,  TEXT_11,  TEXT_12,  TEXT_13,  TEXT_14,  TEXT_15,  TEXT_2,  TEXT_3,  TEXT_4,  TEXT_5,  TEXT_6,  TEXT_7,  TEXT_8,  TEXT_9,  TO_DATE,  VALUE_1,  VALUE_10,  VALUE_11,  VALUE_12,  VALUE_13,  VALUE_14,  VALUE_15,  VALUE_16,  VALUE_17,  VALUE_18,  VALUE_19,  VALUE_2,  VALUE_20,  VALUE_21,  VALUE_22,  VALUE_23,  VALUE_24,  VALUE_25,  VALUE_26,  VALUE_27,  VALUE_28,  VALUE_29,  VALUE_3,  VALUE_30,  VALUE_4,  VALUE_5,  VALUE_6,  VALUE_7,  VALUE_8,  VALUE_9
	FROM MISMEASUREMENT_EVENT;
	
	UPDATE ASSIGN_ID SET MAX_ID = (SELECT MAX(EVENT_NO) FROM RECORD_EVENT) WHERE TABLENAME = 'RECORD_EVENT';
	
	UPDATE RECORD_EVENT SET CLASS_NAME = 'MISMEASUREMENT_EVENT' WHERE CLASS_NAME IS NULL;

IF HASENTRY > 0 THEN 
                        EXECUTE IMMEDIATE 'ALTER TRIGGER IU_RECORD_EVENT ENABLE';
                        END IF;
						
EXCEPTION  WHEN OTHERS THEN
       IF HASENTRY > 0 THEN 
           EXECUTE IMMEDIATE 'ALTER TRIGGER IU_RECORD_EVENT ENABLE';
       END IF;
 raise_application_error(-20000,'ERROR: Some Other fatal error occured :- '||SQLERRM);
END;
--~^UTDELIM^~--