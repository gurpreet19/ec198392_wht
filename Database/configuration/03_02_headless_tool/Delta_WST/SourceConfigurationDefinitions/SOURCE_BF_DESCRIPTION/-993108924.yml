!!com.ec.upgrade.ecconfig.model.ConfigurationItemGroup
fileName: '-993108924'
keys:
  BF_DESCRIPTION_NO: CO.1041
  DATA_LEVEL: 0.0
  T: BF_DESCRIPTION
parentKeys: {}
properties:
  BF_DESCRIPTION_NO: CO.1041
  BUSINESS_FUNCTION_NO: (SELECT BUSINESS_FUNCTION_NO FROM BUSINESS_FUNCTION WHERE URL ='/com.ec.frmw.bs.calc.screens/global_attribute' )
  DATA_LEVEL: 0.0
  DESCRIPTION: |
    <p>The Global Attributes screen is used to view and define global attributes for the calculation engine. Global attributes are system and/or parameter values that the calculation can access.</p>

    <p>There are three main types of global attributes:</p>
    <p>
    <ul>
    <li>
    <p>Pre&ndash;defined calculation parameters:</p>
    <p>This is a fixed, predefined list of parameters that are common to all calculations. This includes basic parameters like calculation start and end dates and times. These are listed in the System Defined Attributes list.</p>
    </li>
    <li>
    <p>System Reference Values:</p>
    <p>System reference values are global, system&ndash;wide constants defined as attributes on the SYSTEM_REF_VALUE class and given values in the BF <em>Maintain System </em><em>Reference Value (CO.0151)</em>. It is possible to use these global constants in calculations by defining global attributes for them in the System Reference Values Attributes list. These can be used for various values but one typical example is base conditions, quality information etc that is configured at a system level independent of different objects.</p>
    </li>
    <li>
    <p>Pre&ndash;EC10 Calculation Job Pass parameters.</p>
    <p>These are only included for backwards compatibility reasons, and replaces the special &ldquo;calc mapping syntax&rdquo; previously used on attributes of the ALLOC_JOB_PASS class. These are defined in the EC Code ALLOC_JOB_PASS_ATTRIBUTE, and will be listed in the System Defined Attributes list. The most common example is the <em>Method </em>attribute on calculation job passes.</p>
    </li>
    </ul>
    </p>
related: {}
