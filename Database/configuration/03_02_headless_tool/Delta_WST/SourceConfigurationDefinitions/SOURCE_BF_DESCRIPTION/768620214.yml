!!com.ec.upgrade.ecconfig.model.ConfigurationItemGroup
fileName: '768620214'
keys:
  BF_DESCRIPTION_NO: GD.0054
  DATA_LEVEL: 0.0
  T: BF_DESCRIPTION
parentKeys: {}
properties:
  BF_DESCRIPTION_NO: GD.0054
  BUSINESS_FUNCTION_NO: (SELECT BUSINESS_FUNCTION_NO FROM BUSINESS_FUNCTION WHERE URL ='/com.ec.tran.gd.screens/capacity_release' )
  DATA_LEVEL: 0.0
  DESCRIPTION: <p>This business function is used to create and maintain capacity release for shippers with transportation contracts on a pipeline.</p><p>Many pipeline operators allow the shippers on the pipeline to release capacity on different location to others. It is up to the shipper to define the terms and condition for the release.</p><p>The capacity release can be prearranged, meaning the deal took place outside the system. But a capacity release can alternatively be made available to shippers for bidding. All bids are recorded in Maintain Capacity Bid&nbsp;(GD.0056).</p><p>In the first data section a user can see all capacity releases for a selected period, Company&nbsp;(Shipper) and Contract&nbsp;(optional). In the bottom part the tabs represent different groups of data associated with the release.</p><p>A capacity release follows a capacity release process where the release status tells the user where the release is at any given point in time. The release statuses available are (Note that these statuses are examples only)<ul style="list-style-type:disc"><li>Provisional &ndash; Not yet submitted. User able to updated the release</li><li>Submitted &ndash; The release is validated and made visible to other users. The release is open</li><li>Awarded &ndash; The release is validated and completed. The release is closed</li><li>Withdrawn &ndash; The release is no longer valid. The release is closed. When a release is recalled it will get this status.</li><li>Rejected &ndash; The release has failed validation. User able to updated release</li><li>Expired &ndash; The release did not get any bids or the bid(s) where not above minimum value.</li></ul></p><p>By pressing the new button, a new capacity release will be created. The first data section will then be made available for input. The release becomes provisional as soon as it is saved. Some validation is done on save, but it is first when the release is submitted that a full validation is done. Based on the details on the release the validation can differ from release to release. If validation fails, the release will be rejected and the validation error can be seen in the status description attribute. The user has to fix the problem and resubmit the release. If it is a prearranged release, the submit process will create the bid. The bid can be seen (and confirmed) in Maintain Capacity Bid (GD.0056).</p><p>The user is only allowed to update or delete a release if it has status provisional or rejected. The exception is the recall/reput tab where the user can change the values after the release is submitted.</p><p>To prevent other users from viewing release before they are submitted, row level security can be used.</p><p>In the Location tab the locations popup can be limited to only show objects of specific interface classes.</P>
related: {}
