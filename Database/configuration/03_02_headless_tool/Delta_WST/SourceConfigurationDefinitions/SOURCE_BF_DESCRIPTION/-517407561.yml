!!com.ec.upgrade.ecconfig.model.ConfigurationItemGroup
fileName: '-517407561'
keys:
  BF_DESCRIPTION_NO: FC.0022
  DATA_LEVEL: 0.0
  T: BF_DESCRIPTION
parentKeys: {}
properties:
  BF_DESCRIPTION_NO: FC.0022
  BUSINESS_FUNCTION_NO: (SELECT BUSINESS_FUNCTION_NO FROM BUSINESS_FUNCTION WHERE URL ='/com.ec.tran.fc.screens/forecast_period_component_recovery_factors/TARGET/NOMINATION_LOCATION/CLASS/FCST_RECOVERY_FACTOR/BF_PROFILE/FC.0022/CLASS_DAY/FCST_RECOVERY_FACTOR_DAY' )
  DATA_LEVEL: 0.0
  DESCRIPTION: <p>This business function is used to enter forecast period factor numbers per component in the system. The screen will have two data sections, one will list all the&nbsp;distinct dates in the selected period. The second data section will display the factors as a crosstab, using SimpleCrossTabTransformer. BREAK_ATTRIBUTE =&nbsp;COMPONENT</p><p>Insert and delete is not supported, so records will be instantiated.</p><p>A component set will hold the sort order for the components (COMP_TRAN_FACTOR). This component set will also be used to do the instantiation.</p><p>By default this screen stores the factor values to a data class where Nomination Location is the owner. The navigator uses a default navigation model where<br />Nomination Location is the target.</p><p>It is possibility to store data on a class which have a different owner than Nomination Location.</p><p>To use this business function to store data on different class than the default one (Nomination Location) the implement project can create a new treeview entry with&nbsp;arguments on the URL. The TARGET argument is used in the navigator and must match the owner for the data class. The CLASS argument is used for the table&nbsp;data section. It is a requirement that the TARGET can be found in a navigation model, and that the target is the owner of the data in the CLASS. The FCST_CLASS&nbsp;argument is used for the navigator to identify which forecast to be used. It could only be FORECAST_TRAN_FC(default) or FORECAST_TRAN_CP.</p><p>The navigation model uses by default TRAN_OPERATIONAL, but a different navigational model can be used by sending the navigational model as an argument&nbsp;from the treeview (argument NAV_MODEL). When using a different navigational model it is important to be aware of the owner of the data class and the target must&nbsp;be the same object.</p><p>The implement project can also create their own classes to store factors which have an alternative owner for this business function.</p><p>Default the From Date and To Date will use normal date format, but the project can also choose to send in a different format on the treeview url, for example<br />MONTH.</p><p>Mandatory arguments which are needed in the url are only CLASS. When using this BF to store factors on a different owner class than the default one we need to&nbsp;send in TARGET as well.</p>
related: {}
