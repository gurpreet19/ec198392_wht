CREATE OR REPLACE PACKAGE BODY ec_class_attribute IS
------------------------------------------------------------------------------------
-- Package body: ec_class_attribute
-- Generated by EC_GENERATE.
------------------------------------------------------------------------------------















------------------------------------------------------------------------------------
FUNCTION name(
         p_class_name VARCHAR2,
         p_attribute_name VARCHAR2)
RETURN CLASS_ATTRIBUTE.NAME%TYPE  IS
   v_return_val CLASS_ATTRIBUTE.NAME%TYPE ;
   CURSOR c_col_val IS
   SELECT name col
   FROM CLASS_ATTRIBUTE
WHERE class_name = p_class_name
AND attribute_name = p_attribute_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END name;

------------------------------------------------------------------------------------
FUNCTION is_key(
         p_class_name VARCHAR2,
         p_attribute_name VARCHAR2)
RETURN CLASS_ATTRIBUTE.IS_KEY%TYPE  IS
   v_return_val CLASS_ATTRIBUTE.IS_KEY%TYPE ;
   CURSOR c_col_val IS
   SELECT is_key col
   FROM CLASS_ATTRIBUTE
WHERE class_name = p_class_name
AND attribute_name = p_attribute_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END is_key;

------------------------------------------------------------------------------------
FUNCTION is_mandatory(
         p_class_name VARCHAR2,
         p_attribute_name VARCHAR2)
RETURN CLASS_ATTRIBUTE.IS_MANDATORY%TYPE  IS
   v_return_val CLASS_ATTRIBUTE.IS_MANDATORY%TYPE ;
   CURSOR c_col_val IS
   SELECT is_mandatory col
   FROM CLASS_ATTRIBUTE
WHERE class_name = p_class_name
AND attribute_name = p_attribute_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END is_mandatory;

------------------------------------------------------------------------------------
FUNCTION context_code(
         p_class_name VARCHAR2,
         p_attribute_name VARCHAR2)
RETURN CLASS_ATTRIBUTE.CONTEXT_CODE%TYPE  IS
   v_return_val CLASS_ATTRIBUTE.CONTEXT_CODE%TYPE ;
   CURSOR c_col_val IS
   SELECT context_code col
   FROM CLASS_ATTRIBUTE
WHERE class_name = p_class_name
AND attribute_name = p_attribute_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END context_code;

------------------------------------------------------------------------------------
FUNCTION data_type(
         p_class_name VARCHAR2,
         p_attribute_name VARCHAR2)
RETURN CLASS_ATTRIBUTE.DATA_TYPE%TYPE  IS
   v_return_val CLASS_ATTRIBUTE.DATA_TYPE%TYPE ;
   CURSOR c_col_val IS
   SELECT data_type col
   FROM CLASS_ATTRIBUTE
WHERE class_name = p_class_name
AND attribute_name = p_attribute_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END data_type;

------------------------------------------------------------------------------------
FUNCTION calc_mapping_syntax(
         p_class_name VARCHAR2,
         p_attribute_name VARCHAR2)
RETURN CLASS_ATTRIBUTE.CALC_MAPPING_SYNTAX%TYPE  IS
   v_return_val CLASS_ATTRIBUTE.CALC_MAPPING_SYNTAX%TYPE ;
   CURSOR c_col_val IS
   SELECT calc_mapping_syntax col
   FROM CLASS_ATTRIBUTE
WHERE class_name = p_class_name
AND attribute_name = p_attribute_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END calc_mapping_syntax;

------------------------------------------------------------------------------------
FUNCTION precision(
         p_class_name VARCHAR2,
         p_attribute_name VARCHAR2)
RETURN CLASS_ATTRIBUTE.PRECISION%TYPE  IS
   v_return_val CLASS_ATTRIBUTE.PRECISION%TYPE ;
   CURSOR c_col_val IS
   SELECT precision col
   FROM CLASS_ATTRIBUTE
WHERE class_name = p_class_name
AND attribute_name = p_attribute_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END precision;

------------------------------------------------------------------------------------
FUNCTION default_value(
         p_class_name VARCHAR2,
         p_attribute_name VARCHAR2)
RETURN CLASS_ATTRIBUTE.DEFAULT_VALUE%TYPE  IS
   v_return_val CLASS_ATTRIBUTE.DEFAULT_VALUE%TYPE ;
   CURSOR c_col_val IS
   SELECT default_value col
   FROM CLASS_ATTRIBUTE
WHERE class_name = p_class_name
AND attribute_name = p_attribute_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END default_value;

------------------------------------------------------------------------------------
FUNCTION default_client_value(
         p_class_name VARCHAR2,
         p_attribute_name VARCHAR2)
RETURN CLASS_ATTRIBUTE.DEFAULT_CLIENT_VALUE%TYPE  IS
   v_return_val CLASS_ATTRIBUTE.DEFAULT_CLIENT_VALUE%TYPE ;
   CURSOR c_col_val IS
   SELECT default_client_value col
   FROM CLASS_ATTRIBUTE
WHERE class_name = p_class_name
AND attribute_name = p_attribute_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END default_client_value;

------------------------------------------------------------------------------------
FUNCTION disabled_ind(
         p_class_name VARCHAR2,
         p_attribute_name VARCHAR2)
RETURN CLASS_ATTRIBUTE.DISABLED_IND%TYPE  IS
   v_return_val CLASS_ATTRIBUTE.DISABLED_IND%TYPE ;
   CURSOR c_col_val IS
   SELECT disabled_ind col
   FROM CLASS_ATTRIBUTE
WHERE class_name = p_class_name
AND attribute_name = p_attribute_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END disabled_ind;

------------------------------------------------------------------------------------
FUNCTION disabled_calc_ind(
         p_class_name VARCHAR2,
         p_attribute_name VARCHAR2)
RETURN CLASS_ATTRIBUTE.DISABLED_CALC_IND%TYPE  IS
   v_return_val CLASS_ATTRIBUTE.DISABLED_CALC_IND%TYPE ;
   CURSOR c_col_val IS
   SELECT disabled_calc_ind col
   FROM CLASS_ATTRIBUTE
WHERE class_name = p_class_name
AND attribute_name = p_attribute_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END disabled_calc_ind;

------------------------------------------------------------------------------------
FUNCTION report_only_ind(
         p_class_name VARCHAR2,
         p_attribute_name VARCHAR2)
RETURN CLASS_ATTRIBUTE.REPORT_ONLY_IND%TYPE  IS
   v_return_val CLASS_ATTRIBUTE.REPORT_ONLY_IND%TYPE ;
   CURSOR c_col_val IS
   SELECT report_only_ind col
   FROM CLASS_ATTRIBUTE
WHERE class_name = p_class_name
AND attribute_name = p_attribute_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END report_only_ind;

------------------------------------------------------------------------------------
FUNCTION description(
         p_class_name VARCHAR2,
         p_attribute_name VARCHAR2)
RETURN CLASS_ATTRIBUTE.DESCRIPTION%TYPE  IS
   v_return_val CLASS_ATTRIBUTE.DESCRIPTION%TYPE ;
   CURSOR c_col_val IS
   SELECT description col
   FROM CLASS_ATTRIBUTE
WHERE class_name = p_class_name
AND attribute_name = p_attribute_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END description;

------------------------------------------------------------------------------------
FUNCTION record_status(
         p_class_name VARCHAR2,
         p_attribute_name VARCHAR2)
RETURN CLASS_ATTRIBUTE.RECORD_STATUS%TYPE  IS
   v_return_val CLASS_ATTRIBUTE.RECORD_STATUS%TYPE ;
   CURSOR c_col_val IS
   SELECT record_status col
   FROM CLASS_ATTRIBUTE
WHERE class_name = p_class_name
AND attribute_name = p_attribute_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END record_status;

------------------------------------------------------------------------------------
FUNCTION approval_state(
         p_class_name VARCHAR2,
         p_attribute_name VARCHAR2)
RETURN CLASS_ATTRIBUTE.APPROVAL_STATE%TYPE  IS
   v_return_val CLASS_ATTRIBUTE.APPROVAL_STATE%TYPE ;
   CURSOR c_col_val IS
   SELECT approval_state col
   FROM CLASS_ATTRIBUTE
WHERE class_name = p_class_name
AND attribute_name = p_attribute_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END approval_state;

------------------------------------------------------------------------------------
FUNCTION approval_by(
         p_class_name VARCHAR2,
         p_attribute_name VARCHAR2)
RETURN CLASS_ATTRIBUTE.APPROVAL_BY%TYPE  IS
   v_return_val CLASS_ATTRIBUTE.APPROVAL_BY%TYPE ;
   CURSOR c_col_val IS
   SELECT approval_by col
   FROM CLASS_ATTRIBUTE
WHERE class_name = p_class_name
AND attribute_name = p_attribute_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END approval_by;

------------------------------------------------------------------------------------
FUNCTION approval_date(
         p_class_name VARCHAR2,
         p_attribute_name VARCHAR2)
RETURN CLASS_ATTRIBUTE.APPROVAL_DATE%TYPE  IS
   v_return_val CLASS_ATTRIBUTE.APPROVAL_DATE%TYPE ;
   CURSOR c_col_val IS
   SELECT approval_date col
   FROM CLASS_ATTRIBUTE
WHERE class_name = p_class_name
AND attribute_name = p_attribute_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END approval_date;

------------------------------------------------------------------------------------
FUNCTION rec_id(
         p_class_name VARCHAR2,
         p_attribute_name VARCHAR2)
RETURN CLASS_ATTRIBUTE.REC_ID%TYPE  IS
   v_return_val CLASS_ATTRIBUTE.REC_ID%TYPE ;
   CURSOR c_col_val IS
   SELECT rec_id col
   FROM CLASS_ATTRIBUTE
WHERE class_name = p_class_name
AND attribute_name = p_attribute_name;
BEGIN
   FOR cur_row IN c_col_val LOOP
      v_return_val := cur_row.col;
   END LOOP;
   RETURN v_return_val;
END rec_id;


------------------------------------------------------------------------------------
FUNCTION row_by_pk (
         p_class_name VARCHAR2,
         p_attribute_name VARCHAR2)
RETURN CLASS_ATTRIBUTE%ROWTYPE IS
   v_return_rec CLASS_ATTRIBUTE%ROWTYPE;
   CURSOR c_read_row IS
   SELECT *
   FROM CLASS_ATTRIBUTE
WHERE class_name = p_class_name
AND attribute_name = p_attribute_name;
BEGIN
   FOR cur_rec IN c_read_row LOOP
      v_return_rec := cur_rec;
   END LOOP;
   RETURN v_return_rec;
END row_by_pk;



END ec_class_attribute;