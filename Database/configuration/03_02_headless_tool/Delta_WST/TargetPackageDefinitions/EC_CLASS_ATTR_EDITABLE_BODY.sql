CREATE OR REPLACE PACKAGE BODY ec_class_attr_editable IS
------------------------------------------------------------------------------------
-- Package body: ec_class_attr_editable
-- Generated by EC_GENERATE.
------------------------------------------------------------------------------------


------------------------------------------------------------------------------------
CURSOR c_equal (
         p_class_name VARCHAR2,
         p_attribute_name VARCHAR2,
         p_daytime DATE) IS
SELECT *
FROM CLASS_ATTR_EDITABLE
WHERE class_name = p_class_name
AND attribute_name = p_attribute_name
AND daytime = p_daytime;

------------------------------------------------------------------------------------
CURSOR c_less_equal (
         p_class_name VARCHAR2,
         p_attribute_name VARCHAR2,
         p_daytime DATE) IS
SELECT *
FROM CLASS_ATTR_EDITABLE
WHERE class_name = p_class_name
AND attribute_name = p_attribute_name
AND daytime =
   (SELECT max(daytime)
   FROM CLASS_ATTR_EDITABLE
WHERE class_name = p_class_name
AND attribute_name = p_attribute_name
AND daytime <= p_daytime);

------------------------------------------------------------------------------------
CURSOR c_less (
         p_class_name VARCHAR2,
         p_attribute_name VARCHAR2,
         p_daytime DATE) IS
SELECT *
FROM CLASS_ATTR_EDITABLE
WHERE class_name = p_class_name
AND attribute_name = p_attribute_name
AND daytime =
   (SELECT max(daytime)
   FROM CLASS_ATTR_EDITABLE
WHERE class_name = p_class_name
AND attribute_name = p_attribute_name
AND daytime < p_daytime);

------------------------------------------------------------------------------------
CURSOR c_greater_equal (
         p_class_name VARCHAR2,
         p_attribute_name VARCHAR2,
         p_daytime DATE) IS
SELECT *
FROM CLASS_ATTR_EDITABLE
WHERE class_name = p_class_name
AND attribute_name = p_attribute_name
AND daytime =
   (SELECT min(daytime)
   FROM CLASS_ATTR_EDITABLE
WHERE class_name = p_class_name
AND attribute_name = p_attribute_name
AND daytime >= p_daytime);

------------------------------------------------------------------------------------
CURSOR c_greater (
         p_class_name VARCHAR2,
         p_attribute_name VARCHAR2,
         p_daytime DATE) IS
SELECT *
FROM CLASS_ATTR_EDITABLE
WHERE class_name = p_class_name
AND attribute_name = p_attribute_name
AND daytime =
   (SELECT min(daytime)
   FROM CLASS_ATTR_EDITABLE
WHERE class_name = p_class_name
AND attribute_name = p_attribute_name
AND daytime > p_daytime);










------------------------------------------------------------------------------------
FUNCTION prev_daytime(
         p_class_name VARCHAR2,
         p_attribute_name VARCHAR2,
         p_daytime DATE,
         p_num_rows NUMBER DEFAULT 1)
RETURN DATE IS
CURSOR c_compute IS
SELECT daytime
FROM class_attr_editable
WHERE class_name = p_class_name
AND attribute_name = p_attribute_name
AND daytime < p_daytime
ORDER BY daytime DESC;
ld_return_val DATE := NULL;
BEGIN
   IF p_num_rows >= 1 THEN
      FOR cur_rec IN c_compute LOOP
         ld_return_val := cur_rec.daytime;
         IF c_compute%ROWCOUNT = p_num_rows THEN
            EXIT;
         END IF;
      END LOOP;
   END IF;
   RETURN ld_return_val;
END prev_daytime;


------------------------------------------------------------------------------------
FUNCTION prev_equal_daytime(
         p_class_name VARCHAR2,
         p_attribute_name VARCHAR2,
         p_daytime DATE,
         p_num_rows NUMBER DEFAULT 1)
RETURN DATE IS
CURSOR c_compute IS
SELECT daytime
FROM class_attr_editable
WHERE class_name = p_class_name
AND attribute_name = p_attribute_name
AND daytime <= p_daytime
ORDER BY daytime DESC;
ld_return_val DATE := NULL;
BEGIN
   IF p_num_rows >= 1 THEN
      FOR cur_rec IN c_compute LOOP
         ld_return_val := cur_rec.daytime;
         IF c_compute%ROWCOUNT = p_num_rows THEN
            EXIT;
         END IF;
      END LOOP;
   END IF;
   RETURN ld_return_val;
END prev_equal_daytime;


------------------------------------------------------------------------------------
FUNCTION next_daytime(
         p_class_name VARCHAR2,
         p_attribute_name VARCHAR2,
         p_daytime DATE,
         p_num_rows NUMBER DEFAULT 1)
RETURN DATE IS
CURSOR c_compute IS
SELECT daytime
FROM class_attr_editable
WHERE class_name = p_class_name
AND attribute_name = p_attribute_name
AND daytime > p_daytime
ORDER BY daytime ASC;
ld_return_val DATE := NULL;
BEGIN
   IF p_num_rows >= 1 THEN
      FOR cur_rec IN c_compute LOOP
         ld_return_val := cur_rec.daytime;
         IF c_compute%ROWCOUNT = p_num_rows THEN
            EXIT;
         END IF;
      END LOOP;
   END IF;
   RETURN ld_return_val;
END next_daytime;


------------------------------------------------------------------------------------
FUNCTION next_equal_daytime(
         p_class_name VARCHAR2,
         p_attribute_name VARCHAR2,
         p_daytime DATE,
         p_num_rows NUMBER DEFAULT 1)
RETURN DATE IS
CURSOR c_compute IS
SELECT daytime
FROM class_attr_editable
WHERE class_name = p_class_name
AND attribute_name = p_attribute_name
AND daytime >= p_daytime
ORDER BY daytime ASC;
ld_return_val DATE := NULL;
BEGIN
   IF p_num_rows >= 1 THEN
      FOR cur_rec IN c_compute LOOP
         ld_return_val := cur_rec.daytime;
         IF c_compute%ROWCOUNT = p_num_rows THEN
            EXIT;
         END IF;
      END LOOP;
   END IF;
   RETURN ld_return_val;
END next_equal_daytime;


------------------------------------------------------------------------------------
FUNCTION row_by_rel_operator (
         p_class_name VARCHAR2,
         p_attribute_name VARCHAR2,
         p_daytime DATE,
         p_compare_oper VARCHAR2 DEFAULT '=')
RETURN CLASS_ATTR_EDITABLE%ROWTYPE  IS
   lr_return_rec CLASS_ATTR_EDITABLE%ROWTYPE;
BEGIN
   IF p_compare_oper = '=' THEN
      FOR cur_row IN c_equal(
         p_class_name,
         p_attribute_name,
         p_daytime) LOOP
         lr_return_rec := cur_row;
      END LOOP;
   ELSIF p_compare_oper IN ('<=','=<') THEN
      FOR cur_row IN c_less_equal(
         p_class_name,
         p_attribute_name,
         p_daytime) LOOP
         lr_return_rec := cur_row;
      END LOOP;
   ELSIF p_compare_oper = '<' THEN
      FOR cur_row IN c_less(
         p_class_name,
         p_attribute_name,
         p_daytime) LOOP
         lr_return_rec := cur_row;
      END LOOP;
   ELSIF p_compare_oper IN ('>=','=>') THEN
      FOR cur_row IN c_greater_equal(
         p_class_name,
         p_attribute_name,
         p_daytime) LOOP
         lr_return_rec := cur_row;
      END LOOP;
   ELSIF p_compare_oper = '>' THEN
      FOR cur_row IN c_greater(
         p_class_name,
         p_attribute_name,
         p_daytime) LOOP
         lr_return_rec := cur_row;
      END LOOP;
   END IF;
   RETURN lr_return_rec;
END row_by_rel_operator;

------------------------------------------------------------------------------------
FUNCTION end_date(
         p_class_name VARCHAR2,
         p_attribute_name VARCHAR2,
         p_daytime DATE,
         p_compare_oper VARCHAR2 DEFAULT '=')
RETURN CLASS_ATTR_EDITABLE.END_DATE%TYPE  IS
   lr_fields CLASS_ATTR_EDITABLE%ROWTYPE;
BEGIN
   lr_fields := row_by_rel_operator(
         p_class_name,
         p_attribute_name,
         p_daytime, p_compare_oper);
   RETURN lr_fields.end_date;
END end_date;

------------------------------------------------------------------------------------
FUNCTION not_editable_ind(
         p_class_name VARCHAR2,
         p_attribute_name VARCHAR2,
         p_daytime DATE,
         p_compare_oper VARCHAR2 DEFAULT '=')
RETURN CLASS_ATTR_EDITABLE.NOT_EDITABLE_IND%TYPE  IS
   lr_fields CLASS_ATTR_EDITABLE%ROWTYPE;
BEGIN
   lr_fields := row_by_rel_operator(
         p_class_name,
         p_attribute_name,
         p_daytime, p_compare_oper);
   RETURN lr_fields.not_editable_ind;
END not_editable_ind;

------------------------------------------------------------------------------------
FUNCTION record_status(
         p_class_name VARCHAR2,
         p_attribute_name VARCHAR2,
         p_daytime DATE,
         p_compare_oper VARCHAR2 DEFAULT '=')
RETURN CLASS_ATTR_EDITABLE.RECORD_STATUS%TYPE  IS
   lr_fields CLASS_ATTR_EDITABLE%ROWTYPE;
BEGIN
   lr_fields := row_by_rel_operator(
         p_class_name,
         p_attribute_name,
         p_daytime, p_compare_oper);
   RETURN lr_fields.record_status;
END record_status;

------------------------------------------------------------------------------------
FUNCTION approval_state(
         p_class_name VARCHAR2,
         p_attribute_name VARCHAR2,
         p_daytime DATE,
         p_compare_oper VARCHAR2 DEFAULT '=')
RETURN CLASS_ATTR_EDITABLE.APPROVAL_STATE%TYPE  IS
   lr_fields CLASS_ATTR_EDITABLE%ROWTYPE;
BEGIN
   lr_fields := row_by_rel_operator(
         p_class_name,
         p_attribute_name,
         p_daytime, p_compare_oper);
   RETURN lr_fields.approval_state;
END approval_state;

------------------------------------------------------------------------------------
FUNCTION approval_by(
         p_class_name VARCHAR2,
         p_attribute_name VARCHAR2,
         p_daytime DATE,
         p_compare_oper VARCHAR2 DEFAULT '=')
RETURN CLASS_ATTR_EDITABLE.APPROVAL_BY%TYPE  IS
   lr_fields CLASS_ATTR_EDITABLE%ROWTYPE;
BEGIN
   lr_fields := row_by_rel_operator(
         p_class_name,
         p_attribute_name,
         p_daytime, p_compare_oper);
   RETURN lr_fields.approval_by;
END approval_by;

------------------------------------------------------------------------------------
FUNCTION approval_date(
         p_class_name VARCHAR2,
         p_attribute_name VARCHAR2,
         p_daytime DATE,
         p_compare_oper VARCHAR2 DEFAULT '=')
RETURN CLASS_ATTR_EDITABLE.APPROVAL_DATE%TYPE  IS
   lr_fields CLASS_ATTR_EDITABLE%ROWTYPE;
BEGIN
   lr_fields := row_by_rel_operator(
         p_class_name,
         p_attribute_name,
         p_daytime, p_compare_oper);
   RETURN lr_fields.approval_date;
END approval_date;

------------------------------------------------------------------------------------
FUNCTION rec_id(
         p_class_name VARCHAR2,
         p_attribute_name VARCHAR2,
         p_daytime DATE,
         p_compare_oper VARCHAR2 DEFAULT '=')
RETURN CLASS_ATTR_EDITABLE.REC_ID%TYPE  IS
   lr_fields CLASS_ATTR_EDITABLE%ROWTYPE;
BEGIN
   lr_fields := row_by_rel_operator(
         p_class_name,
         p_attribute_name,
         p_daytime, p_compare_oper);
   RETURN lr_fields.rec_id;
END rec_id;


------------------------------------------------------------------------------------
FUNCTION row_by_pk (
         p_class_name VARCHAR2,
         p_attribute_name VARCHAR2,
         p_daytime DATE,
         p_compare_oper VARCHAR2 DEFAULT '=')
RETURN CLASS_ATTR_EDITABLE%ROWTYPE IS
BEGIN
   RETURN row_by_rel_operator(
         p_class_name,
         p_attribute_name,
         p_daytime, p_compare_oper);
END row_by_pk;


END ec_class_attr_editable;