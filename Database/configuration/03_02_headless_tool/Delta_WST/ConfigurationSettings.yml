ACCESSCONTROL: !!com.ec.upgrade.ecconfig.model.ConfigurationSettingBundle
  displayText: Access Control
  groups:
    T_BASIS_APPLICATION:
      displayText: Application
      filterCondition: ''
      groupKeyColumn: APP_ID
      keyColumns: APP_ID
      related:
        T_BASIS_ACCESS:
          callableColumns:
          - column: OBJECT_ID
            query: '''(SELECT X.OBJECT_ID FROM T_BASIS_OBJECT X WHERE X.OBJECT_NAME=''''''
              || (SELECT Z.OBJECT_NAME FROM T_BASIS_OBJECT Z WHERE Z.OBJECT_ID = T_BASIS_ACCESS.OBJECT_ID
              AND ROWNUM <2) || '''''' AND X.APP_ID='' || APP_ID || '' AND ROWNUM
              < 2)'''
          dependsOn:
          - T_BASIS_LEVEL
          - T_BASIS_ROLE
          displayText: Basis Access
          filterCondition: ''
          groupKeyColumn: APP_ID
          groupKeyColumnSubQuery: ''
          keyColumns: OBJECT_ID,ROLE_ID,LEVEL_ID,CLASS_NAME,APP_ID
          mapping:
            APP_ID: APP_ID
            OBJECT_ID: OBJECT_ID
          parent: T_BASIS_OBJECT
          selfReferencingColumns: ''
          specialColumns: ''
        T_BASIS_OBJECT:
          displayText: Basis Object
          filterCondition: ''
          groupKeyColumn: APP_ID
          groupKeyColumnSubQuery: ''
          keyColumns: OBJECT_NAME,APP_ID
          mapping:
            APP_ID: APP_ID
          parent: T_BASIS_APPLICATION
        T_BASIS_OBJECT_PARTITION:
          callableColumns:
          - column: T_BASIS_ACCESS_ID
            query: (SELECT '( SELECT T_BASIS_ACCESS_ID FROM T_BASIS_ACCESS WHERE CLASS_NAME ' || (CASE WHEN CLASS_NAME IS NULL THEN 'IS NULL' ELSE '=''' || CLASS_NAME ||'''' END)|| ' AND ROLE_ID '|| (CASE WHEN ROLE_ID IS NULL THEN 'IS NULL' ELSE '=''' || ROLE_ID ||'''' END)|| ' AND OBJECT_ID '|| (CASE WHEN OBJECT_ID IS NULL THEN 'IS NULL' ELSE '=''' || OBJECT_ID ||'''' END)|| ' AND LEVEL_ID '|| (CASE WHEN LEVEL_ID IS NULL THEN 'IS NULL' ELSE '=''' || LEVEL_ID ||'''' END)|| ' AND APP_ID '|| (CASE WHEN APP_ID IS NULL THEN 'IS NULL' ELSE '=''' || APP_ID ||'''' END)|| ' )' T_BASIS_ACCESS_ID FROM T_BASIS_ACCESS WHERE T_BASIS_ACCESS_ID = T_BASIS_OBJECT_PARTITION.T_BASIS_ACCESS_ID)
          - column: ATTRIBUTE_TEXT
            query: '(CASE WHEN OPERATOR = ''ALL'' THEN NULL  WHEN OPERATOR = ''IN''
              AND ATTRIBUTE_TEXT IS NULL THEN    ''ERROR: OPERATOR IS IN AND ATTRIBUTE_TEXT
              IS NULL'' WHEN ATTRIBUTE_TEXT IS NULL THEN    ''ERROR: ATTRIBUTE_TEXT
              IS NULL''  WHEN (LENGTH(ATTRIBUTE_TEXT)-1)/35 = 1 THEN    ''''''(''''''''''''
              || ECDP_OBJECTS.GETOBJIDFROMCODE('''''' || ECDP_OBJECTS.GETOBJCLASSNAME(SUBSTR(ATTRIBUTE_TEXT,
              3, 32)) || '''''','''''' || ECDP_OBJECTS.GETOBJCODE(SUBSTR(ATTRIBUTE_TEXT,
              3, 32)) ||'''''') || '''''''''''')''''''  WHEN (LENGTH(ATTRIBUTE_TEXT)-1)/35
              = 2 THEN   ''''''('''''''''''' || ECDP_OBJECTS.GETOBJIDFROMCODE(''''''
              || ECDP_OBJECTS.GETOBJCLASSNAME(SUBSTR(ATTRIBUTE_TEXT, 3,      32))
              || '''''','''''' || ECDP_OBJECTS.GETOBJCODE(SUBSTR(ATTRIBUTE_TEXT, 3,      32))
              ||'''''') || '''''''''''','''''''''''' || ''             || '' ECDP_OBJECTS.GETOBJIDFROMCODE(''''''
              || ECDP_OBJECTS.GETOBJCLASSNAME(SUBSTR(ATTRIBUTE_TEXT, 3 + 35, 32))
              || '''''','''''' || ECDP_OBJECTS.GETOBJCODE(SUBSTR(ATTRIBUTE_TEXT, 3
              + 35, 32)) ||'''''') || '''''''''''')''''''  WHEN (LENGTH(ATTRIBUTE_TEXT)-1)/35
              = 3 THEN   ''''''('''''''''''' || ECDP_OBJECTS.GETOBJIDFROMCODE(''''''
              || ECDP_OBJECTS.GETOBJCLASSNAME(SUBSTR(ATTRIBUTE_TEXT, 3,        32))
              || '''''','''''' || ECDP_OBJECTS.GETOBJCODE(SUBSTR(ATTRIBUTE_TEXT, 3,        32))
              ||'''''') || '''''''''''','''''''''''' || ''             || '' ECDP_OBJECTS.GETOBJIDFROMCODE(''''''
              || ECDP_OBJECTS.GETOBJCLASSNAME(SUBSTR(ATTRIBUTE_TEXT, 3 + 1*35, 32))
              || '''''','''''' || ECDP_OBJECTS.GETOBJCODE(SUBSTR(ATTRIBUTE_TEXT, 3
              + 1*35, 32)) ||'''''') || '''''''''''','''''''''''' || ''             ||
              '' ECDP_OBJECTS.GETOBJIDFROMCODE('''''' || ECDP_OBJECTS.GETOBJCLASSNAME(SUBSTR(ATTRIBUTE_TEXT,
              3 + 2*35, 32)) || '''''','''''' || ECDP_OBJECTS.GETOBJCODE(SUBSTR(ATTRIBUTE_TEXT,
              3 + 2*35, 32)) ||'''''') || '''''''''''')''''''  WHEN (LENGTH(ATTRIBUTE_TEXT)-1)/35
              = 4 THEN   ''''''('''''''''''' || ECDP_OBJECTS.GETOBJIDFROMCODE(''''''
              || ECDP_OBJECTS.GETOBJCLASSNAME(SUBSTR(ATTRIBUTE_TEXT, 3,        32))
              || '''''','''''' || ECDP_OBJECTS.GETOBJCODE(SUBSTR(ATTRIBUTE_TEXT, 3,        32))
              ||'''''') || '''''''''''','''''''''''' || ''             || '' ECDP_OBJECTS.GETOBJIDFROMCODE(''''''
              || ECDP_OBJECTS.GETOBJCLASSNAME(SUBSTR(ATTRIBUTE_TEXT, 3 + 1*35, 32))
              || '''''','''''' || ECDP_OBJECTS.GETOBJCODE(SUBSTR(ATTRIBUTE_TEXT, 3
              + 1*35, 32)) ||'''''') || '''''''''''','''''''''''' || ''             ||
              '' ECDP_OBJECTS.GETOBJIDFROMCODE('''''' || ECDP_OBJECTS.GETOBJCLASSNAME(SUBSTR(ATTRIBUTE_TEXT,
              3 + 2*35, 32)) || '''''','''''' || ECDP_OBJECTS.GETOBJCODE(SUBSTR(ATTRIBUTE_TEXT,
              3 + 2*35, 32)) ||'''''') || '''''''''''','''''''''''' || ''             ||
              '' ECDP_OBJECTS.GETOBJIDFROMCODE('''''' || ECDP_OBJECTS.GETOBJCLASSNAME(SUBSTR(ATTRIBUTE_TEXT,
              3 + 3*35, 32)) || '''''','''''' || ECDP_OBJECTS.GETOBJCODE(SUBSTR(ATTRIBUTE_TEXT,
              3 + 3*35, 32)) ||'''''') || '''''''''''')''''''  WHEN (LENGTH(ATTRIBUTE_TEXT)-1)/35
              = 5 THEN   ''''''('''''''''''' || ECDP_OBJECTS.GETOBJIDFROMCODE(''''''
              || ECDP_OBJECTS.GETOBJCLASSNAME(SUBSTR(ATTRIBUTE_TEXT, 3,        32))
              || '''''','''''' || ECDP_OBJECTS.GETOBJCODE(SUBSTR(ATTRIBUTE_TEXT, 3,        32))
              ||'''''') || '''''''''''','''''''''''' || ''             || '' ECDP_OBJECTS.GETOBJIDFROMCODE(''''''
              || ECDP_OBJECTS.GETOBJCLASSNAME(SUBSTR(ATTRIBUTE_TEXT, 3 + 1*35, 32))
              || '''''','''''' || ECDP_OBJECTS.GETOBJCODE(SUBSTR(ATTRIBUTE_TEXT, 3
              + 1*35, 32)) ||'''''') || '''''''''''','''''''''''' || ''             ||
              '' ECDP_OBJECTS.GETOBJIDFROMCODE('''''' || ECDP_OBJECTS.GETOBJCLASSNAME(SUBSTR(ATTRIBUTE_TEXT,
              3 + 2*35, 32)) || '''''','''''' || ECDP_OBJECTS.GETOBJCODE(SUBSTR(ATTRIBUTE_TEXT,
              3 + 2*35, 32)) ||'''''') || '''''''''''','''''''''''' || ''             ||
              '' ECDP_OBJECTS.GETOBJIDFROMCODE('''''' || ECDP_OBJECTS.GETOBJCLASSNAME(SUBSTR(ATTRIBUTE_TEXT,
              3 + 3*35, 32)) || '''''','''''' || ECDP_OBJECTS.GETOBJCODE(SUBSTR(ATTRIBUTE_TEXT,
              3 + 3*35, 32)) ||'''''') || '''''''''''','''''''''''' || ''             ||
              '' ECDP_OBJECTS.GETOBJIDFROMCODE('''''' || ECDP_OBJECTS.GETOBJCLASSNAME(SUBSTR(ATTRIBUTE_TEXT,
              3 + 4*35, 32)) || '''''','''''' || ECDP_OBJECTS.GETOBJCODE(SUBSTR(ATTRIBUTE_TEXT,
              3 + 4*35, 32)) ||'''''') || '''''''''''')''''''  WHEN (LENGTH(ATTRIBUTE_TEXT)-1)/35
              = 6 THEN   ''''''('''''''''''' || ECDP_OBJECTS.GETOBJIDFROMCODE(''''''
              || ECDP_OBJECTS.GETOBJCLASSNAME(SUBSTR(ATTRIBUTE_TEXT, 3,        32))
              || '''''','''''' || ECDP_OBJECTS.GETOBJCODE(SUBSTR(ATTRIBUTE_TEXT, 3,        32))
              ||'''''') || '''''''''''','''''''''''' || ''             || '' ECDP_OBJECTS.GETOBJIDFROMCODE(''''''
              || ECDP_OBJECTS.GETOBJCLASSNAME(SUBSTR(ATTRIBUTE_TEXT, 3 + 1*35, 32))
              || '''''','''''' || ECDP_OBJECTS.GETOBJCODE(SUBSTR(ATTRIBUTE_TEXT, 3
              + 1*35, 32)) ||'''''') || '''''''''''','''''''''''' || ''             ||
              '' ECDP_OBJECTS.GETOBJIDFROMCODE('''''' || ECDP_OBJECTS.GETOBJCLASSNAME(SUBSTR(ATTRIBUTE_TEXT,
              3 + 2*35, 32)) || '''''','''''' || ECDP_OBJECTS.GETOBJCODE(SUBSTR(ATTRIBUTE_TEXT,
              3 + 2*35, 32)) ||'''''') || '''''''''''','''''''''''' || ''             ||
              '' ECDP_OBJECTS.GETOBJIDFROMCODE('''''' || ECDP_OBJECTS.GETOBJCLASSNAME(SUBSTR(ATTRIBUTE_TEXT,
              3 + 3*35, 32)) || '''''','''''' || ECDP_OBJECTS.GETOBJCODE(SUBSTR(ATTRIBUTE_TEXT,
              3 + 3*35, 32)) ||'''''') || '''''''''''','''''''''''' || ''             ||
              '' ECDP_OBJECTS.GETOBJIDFROMCODE('''''' || ECDP_OBJECTS.GETOBJCLASSNAME(SUBSTR(ATTRIBUTE_TEXT,
              3 + 4*35, 32)) || '''''','''''' || ECDP_OBJECTS.GETOBJCODE(SUBSTR(ATTRIBUTE_TEXT,
              3 + 4*35, 32)) ||'''''') || '''''''''''','''''''''''' || ''             ||
              '' ECDP_OBJECTS.GETOBJIDFROMCODE('''''' || ECDP_OBJECTS.GETOBJCLASSNAME(SUBSTR(ATTRIBUTE_TEXT,
              3 + 5*35, 32)) || '''''','''''' || ECDP_OBJECTS.GETOBJCODE(SUBSTR(ATTRIBUTE_TEXT,
              3 + 5*35, 32)) ||'''''') || '''''''''''')''''''   ELSE     ''MANY OBJECTS!
              ONLY 6 ARE SUPPORTED BY THIS SPREADSHEET!''  END)'
          displayText: Basis Object Partition
          filterCondition: ''
          groupKeyColumn: APP_ID
          groupKeyColumnSubQuery: (SELECT APP_ID FROM T_BASIS_ACCESS WHERE T_BASIS_ACCESS_ID = T_BASIS_OBJECT_PARTITION.T_BASIS_ACCESS_ID)
          keyColumns: T_BASIS_ACCESS_ID
          mapping:
            T_BASIS_ACCESS_ID: T_BASIS_ACCESS_ID
          parent: T_BASIS_ACCESS
        T_BASIS_ROLE:
          displayText: Role
          filterCondition: ''
          groupKeyColumn: APP_ID
          keyColumns: ROLE_ID,APP_ID
          mapping:
            APP_ID: APP_ID
          parent: T_BASIS_APPLICATION
        T_BASIS_USER:
          displayText: User
          filterCondition: ''
          groupKeyColumn: APP_ID
          keyColumns: USER_ID
          mapping:
            APP_ID: APP_ID
          parent: T_BASIS_APPLICATION
        T_BASIS_USERROLE:
          displayText: User Role
          filterCondition: ''
          groupKeyColumn: APP_ID
          keyColumns: USER_ID,ROLE_ID,APP_ID
          mapping:
            USER_ID: USER_ID
          parent: T_BASIS_USER
BASISCONFIG: !!com.ec.upgrade.ecconfig.model.ConfigurationSettingBundle
  displayText: Basis Configuration
  groups:
    ACTION_INSTANCE:
      callableColumns:
      - column: SCHEDULE_NO
        query: (SELECT '(SELECT SCHEDULE_NO FROM SCHEDULE WHERE NAME =''' ||  A.NAME || ''' AND (CASE WHEN ECDP_OBJECTS.GETOBJCODE(SCHEDULE_GROUP) IS NOT NULL THEN ECDP_OBJECTS.GETOBJCODE(SCHEDULE_GROUP) ELSE SCHEDULE_GROUP END) = ''' || (CASE WHEN ECDP_OBJECTS.GETOBJCODE(SCHEDULE_GROUP) IS NOT NULL THEN ECDP_OBJECTS.GETOBJCODE(SCHEDULE_GROUP) ELSE SCHEDULE_GROUP END) FROM SCHEDULE A WHERE A.SCHEDULE_NO = ACTION_INSTANCE.SCHEDULE_NO) || ''' )'
      - column: BUSINESS_ACTION_NO
        query: (SELECT '(SELECT BUSINESS_ACTION_NO FROM BUSINESS_ACTION WHERE NAME =''' || A.NAME || ''' AND (CASE WHEN ECDP_OBJECTS.GETOBJCODE(FUNCTIONAL_AREA_ID) IS NOT NULL THEN ECDP_OBJECTS.GETOBJCODE(FUNCTIONAL_AREA_ID) ELSE NVL(FUNCTIONAL_AREA_ID, ''IS_NULL'') END) = ''' || (CASE WHEN ECDP_OBJECTS.GETOBJCODE(A.FUNCTIONAL_AREA_ID) IS NOT NULL THEN ECDP_OBJECTS.GETOBJCODE(A.FUNCTIONAL_AREA_ID) ELSE NVL(A.FUNCTIONAL_AREA_ID, 'IS_NULL') END) || ''' )' FROM BUSINESS_ACTION A WHERE A.BUSINESS_ACTION_NO = ACTION_INSTANCE.BUSINESS_ACTION_NO)
      dependsOn:
      - SCHEDULE
      - BUSINESS_ACTION
      displayText: Action Instance
      filterCondition: ''
      groupKeyColumn: UPGDUID
      groupKeyColumnSubQuery: (SELECT 'SCHEDULE=' || X.NAME || ' GROUP=' || (CASE WHEN ECDP_OBJECTS.GETOBJCODE(X.SCHEDULE_GROUP) IS NOT NULL THEN ECDP_OBJECTS.GETOBJCODE(X.SCHEDULE_GROUP) ELSE X.SCHEDULE_GROUP END) || ' ORDER=' || ACTION_INSTANCE.EXEC_ORDER  FROM SCHEDULE X WHERE X.SCHEDULE_NO = ACTION_INSTANCE.SCHEDULE_NO)
      keyColumns: SCHEDULE_NO,EXEC_ORDER
      selfReferencingColumns: ''
      specialColumns: ''
    ACTION_INSTANCE_VALUE:
      callableColumns:
      - column: ACTION_INSTANCE_NO
        query: (SELECT '(SELECT ACTION_INSTANCE_NO FROM ACTION_INSTANCE WHERE EXEC_ORDER=''' || (SELECT X.EXEC_ORDER FROM ACTION_INSTANCE X WHERE X.ACTION_INSTANCE_NO = ACTION_INSTANCE_VALUE.ACTION_INSTANCE_NO) || ''' AND SCHEDULE_NO = (SELECT SCHEDULE_NO FROM SCHEDULE WHERE NAME =''' ||  A.NAME || ''' AND (CASE WHEN ECDP_OBJECTS.GETOBJCODE(SCHEDULE_GROUP) IS NOT NULL THEN ECDP_OBJECTS.GETOBJCODE(SCHEDULE_GROUP) ELSE SCHEDULE_GROUP END) = ''' || (CASE WHEN ECDP_OBJECTS.GETOBJCODE(SCHEDULE_GROUP) IS NOT NULL THEN ECDP_OBJECTS.GETOBJCODE(SCHEDULE_GROUP) ELSE SCHEDULE_GROUP END) FROM SCHEDULE A WHERE A.SCHEDULE_NO = (SELECT X.SCHEDULE_NO FROM ACTION_INSTANCE X WHERE X.ACTION_INSTANCE_NO = ACTION_INSTANCE_VALUE.ACTION_INSTANCE_NO)) || ''' ))'
      - column: ACTION_PARAMETER_NO
        query: ( SELECT '( SELECT X.ACTION_PARAMETER_NO FROM ACTION_PARAMETER X WHERE X.NAME = ''' || Z.NAME || ''' AND X.BUSINESS_ACTION_NO =' || (SELECT '(SELECT V.BUSINESS_ACTION_NO FROM BUSINESS_ACTION V WHERE V.NAME= ''' || Y.NAME ||  ''' AND (CASE WHEN ECDP_OBJECTS.GETOBJCODE(V.FUNCTIONAL_AREA_ID) IS NOT NULL THEN ECDP_OBJECTS.GETOBJCODE(V.FUNCTIONAL_AREA_ID) ELSE NVL(V.FUNCTIONAL_AREA_ID, ''IS_NULL'') END) = '''|| (CASE WHEN ECDP_OBJECTS.GETOBJCODE(Y.FUNCTIONAL_AREA_ID) IS NOT NULL THEN ECDP_OBJECTS.GETOBJCODE(Y.FUNCTIONAL_AREA_ID) ELSE NVL(Y.FUNCTIONAL_AREA_ID, 'IS_NULL') END)  || ''' )' || ' )' FROM BUSINESS_ACTION Y WHERE Y.BUSINESS_ACTION_NO = Z.BUSINESS_ACTION_NO )  FROM ACTION_PARAMETER Z WHERE Z.ACTION_PARAMETER_NO = ACTION_INSTANCE_VALUE.ACTION_PARAMETER_NO)
      dependsOn:
      - ACTION_INSTANCE
      - ACTION_PARAMETER
      - BUSINESS_ACTION
      - OV_FUNCTIONAL_AREA
      displayText: Action Instance Value
      filterCondition: ''
      groupKeyColumn: UPGDUID
      groupKeyColumnSubQuery: (SELECT 'EXEC_ORDER='|| X.EXEC_ORDER || ' SCHEDULE_NAME=' || Y.NAME ||  ' SCHEDULE_GROUP=' || (CASE WHEN ECDP_OBJECTS.GETOBJCODE(Y.SCHEDULE_GROUP) IS NOT NULL THEN ECDP_OBJECTS.GETOBJCODE(Y.SCHEDULE_GROUP) ELSE   Y.SCHEDULE_GROUP END) || ' PARAM_NAME=' || Z.NAME || ' BUSINESS_NAME=' || BF.NAME || ' FUNCTION_AREA=' || (CASE WHEN ECDP_OBJECTS.GETOBJCODE(BF.FUNCTIONAL_AREA_ID) IS NOT NULL THEN ECDP_OBJECTS.GETOBJCODE(BF.FUNCTIONAL_AREA_ID) ELSE BF.FUNCTIONAL_AREA_ID END) FROM ACTION_INSTANCE_VALUE AV INNER JOIN ACTION_INSTANCE X ON X.ACTION_INSTANCE_NO= AV.ACTION_INSTANCE_NO INNER JOIN SCHEDULE Y ON Y.SCHEDULE_NO=X.SCHEDULE_NO INNER JOIN ACTION_PARAMETER Z ON Z.ACTION_PARAMETER_NO= AV.ACTION_PARAMETER_NO INNER JOIN BUSINESS_ACTION BF ON BF.BUSINESS_ACTION_NO = Z.BUSINESS_ACTION_NO WHERE AV.ACTION_INSTANCE_NO=ACTION_INSTANCE_VALUE.ACTION_INSTANCE_NO AND AV.ACTION_PARAMETER_NO=ACTION_INSTANCE_VALUE.ACTION_PARAMETER_NO)
      keyColumns: ACTION_INSTANCE_NO,ACTION_PARAMETER_NO
      selfReferencingColumns: ''
      specialColumns: ''
    ACTION_PARAMETER:
      callableColumns:
      - column: BUSINESS_ACTION_NO
        query: (SELECT '(SELECT BUSINESS_ACTION_NO FROM BUSINESS_ACTION WHERE NAME =''' || A.NAME || ''' AND (CASE WHEN ECDP_OBJECTS.GETOBJCODE(FUNCTIONAL_AREA_ID) IS NOT NULL THEN ECDP_OBJECTS.GETOBJCODE(FUNCTIONAL_AREA_ID) ELSE NVL(FUNCTIONAL_AREA_ID, ''IS_NULL'') END) = ''' || (CASE WHEN ECDP_OBJECTS.GETOBJCODE(A.FUNCTIONAL_AREA_ID) IS NOT NULL THEN ECDP_OBJECTS.GETOBJCODE(A.FUNCTIONAL_AREA_ID) ELSE NVL(A.FUNCTIONAL_AREA_ID, 'IS_NULL') END) || ''' )' FROM BUSINESS_ACTION A WHERE A.BUSINESS_ACTION_NO = ACTION_PARAMETER.BUSINESS_ACTION_NO)
      dependsOn:
      - BUSINESS_ACTION
      - OV_FUNCTIONAL_AREA
      displayText: Action Parameter
      filterCondition: ''
      groupKeyColumn: UPGDUID
      groupKeyColumnSubQuery: (SELECT 'NAME= ' || A.NAME || ' FUNCTIONAL_AREA=' || (CASE WHEN ECDP_OBJECTS.GETOBJCODE(A.FUNCTIONAL_AREA_ID) IS NOT NULL THEN ECDP_OBJECTS.GETOBJCODE(A.FUNCTIONAL_AREA_ID) ELSE NVL(A.FUNCTIONAL_AREA_ID, 'IS_NULL') END) || ' PARAM_NAME=' || ACTION_PARAMETER.NAME FROM BUSINESS_ACTION A WHERE A.BUSINESS_ACTION_NO = ACTION_PARAMETER.BUSINESS_ACTION_NO)
      keyColumns: BUSINESS_ACTION_NO, NAME
      selfReferencingColumns: ''
      specialColumns: ''
    ALLOC_JOB_DEFINITION:
      dependsOn:
      - CALC_CONTEXT
      displayText: Allocation Job Definition
      filterCondition: ''
      groupKeyColumn: UPGDUID
      groupKeyColumnSubQuery: ('CODE=' || CODE || ' VALID_FROM_DATE=' || TO_CHAR(VALID_FROM_DATE,'DD-MM-YYYY'))
      keyColumns: CODE,VALID_FROM_DATE
      objectIdColumns:
      - column: CALC_CONTEXT_ID
        query: ''
      related:
        ALLOC_JOB_PASS:
          callableColumns:
          - column: JOB_NO
            query: (select '(SELECT JOB_NO FROM ALLOC_JOB_DEFINITION WHERE CODE =''' || CODE || ''' AND VALID_FROM_DATE = TO_DATE(''' || TO_CHAR(VALID_FROM_DATE,'DD-MM-YYYY') || ''' ,''DD-MM-YYYY''))'  from ALLOC_JOB_DEFINITION WHERE ALLOC_JOB_DEFINITION.JOB_NO = ALLOC_JOB_PASS.JOB_NO)
          dependsOn:
          - PROSTY_CODES
          displayText: Allocation Job Pass
          filterCondition: ''
          groupKeyColumn: UPGDUID
          groupKeyColumnSubQuery: (SELECT 'CODE=' || CODE || ' VALID_FROM_DATE=' || TO_CHAR(VALID_FROM_DATE,'DD-MM-YYYY') FROM ALLOC_JOB_DEFINITION WHERE ALLOC_JOB_DEFINITION.JOB_NO = ALLOC_JOB_PASS.JOB_NO)
          keyColumns: JOB_NO, EXEC_FREQ, CALC_SEQ_ORDERING, SORT_ORDER
          mapping:
            JOB_NO: JOB_NO
          parent: ALLOC_JOB_DEFINITION
          selfReferencingColumns: ''
          specialColumns: ''
      selfReferencingColumns: ''
      specialColumns: ''
    APP_SPACE_CNTX:
      displayText: App Space Context
      filterCondition: ''
      groupKeyColumn: CODE
      keyColumns: CODE
    BF_COMPONENT:
      callableColumns:
      - column: BUSINESS_FUNCTION_NO
        query: '''(SELECT BUSINESS_FUNCTION_NO FROM BUSINESS_FUNCTION WHERE URL =''''''
          || (SELECT URL FROM BUSINESS_FUNCTION WHERE BUSINESS_FUNCTION.BUSINESS_FUNCTION_NO
          = BF_COMPONENT.BUSINESS_FUNCTION_NO) || '''''' )'''
      dependsOn:
      - BUSINESS_FUNCTION
      displayText: Business Function Component
      filterCondition: ''
      groupKeyColumn: UPGDUID
      groupKeyColumnSubQuery: ('CODE=' || BF_CODE || ' URL=' || URL || ' COMP_CODE=' || COMP_CODE || ' CLASS_NAME=' || CLASS_NAME)
      keyColumns: BF_CODE,URL,COMP_CODE,CLASS_NAME
      selfReferencingColumns: ''
      specialColumns: ''
    BF_COMPONENT_ACTION:
      callableColumns:
      - column: BF_COMPONENT_NO
        query: (select '(SELECT BF_COMPONENT_NO FROM BF_COMPONENT WHERE BF_CODE =''' || BF_CODE || ''' AND NVL(URL,''IS_NULL'') = ''' || NVL(URL,'IS_NULL') || ''' AND COMP_CODE =''' || COMP_CODE || ''' AND NVL(CLASS_NAME,''IS_NULL'') = ''' || NVL(CLASS_NAME,'IS_NULL') || ''')'  from BF_COMPONENT WHERE BF_COMPONENT.BF_COMPONENT_NO = BF_COMPONENT_ACTION.BF_COMPONENT_NO)
      dependsOn:
      - BF_COMPONENT
      - BUSINESS_FUNCTION
      displayText: Business Function Component Action
      filterCondition: ''
      groupKeyColumn: UPGDUID
      groupKeyColumnSubQuery: (SELECT 'CODE=' || BF_CODE || ' URL=' || NVL(URL, 'IS_NULL') || ' COMP_CODE=' || COMP_CODE || ' CLASS_NAME=' || NVL(CLASS_NAME, 'IS_NULL')  FROM BF_COMPONENT WHERE BF_COMPONENT.BF_COMPONENT_NO = BF_COMPONENT_ACTION.BF_COMPONENT_NO) || ' ACTION_URL=' || NVL(URL, 'IS_NULL')
      keyColumns: BF_COMPONENT_NO,URL
      selfReferencingColumns: ''
      specialColumns: ''
    BF_DESCRIPTION:
      callableColumns:
      - column: BUSINESS_FUNCTION_NO
        query: '''(SELECT BUSINESS_FUNCTION_NO FROM BUSINESS_FUNCTION WHERE URL =''''''
          || (SELECT URL FROM BUSINESS_FUNCTION WHERE BUSINESS_FUNCTION.BUSINESS_FUNCTION_NO
          = BF_DESCRIPTION.BUSINESS_FUNCTION_NO) || '''''' )'''
      dependsOn:
      - BUSINESS_FUNCTION
      displayText: Online Help
      filterCondition: ''
      groupKeyColumn: UPGDUID
      groupKeyColumnSubQuery: ('BF_DESCRIPTION_NO=' || BF_DESCRIPTION_NO || ' DATA_LEVEL =' || DATA_LEVEL)
      keyColumns: BF_DESCRIPTION_NO,DATA_LEVEL
      selfReferencingColumns: ''
      specialColumns: DESCRIPTION
    BF_PROFILE:
      displayText: Business Profile
      filterCondition: ''
      groupKeyColumn: PROFILE_CODE
      keyColumns: PROFILE_CODE
      related:
        BF_PROFILE_SETUP:
          callableColumns:
          - column: BUSINESS_FUNCTION_NO
            query: '''(SELECT BUSINESS_FUNCTION_NO FROM BUSINESS_FUNCTION WHERE URL
              = '''''' || (SELECT URL FROM BUSINESS_FUNCTION  WHERE BUSINESS_FUNCTION.BUSINESS_FUNCTION_NO
              = BF_PROFILE_SETUP.BUSINESS_FUNCTION_NO) || '''''')'''
          dependsOn:
          - BUSINESS_FUNCTION
          displayText: Profile Setup
          filterCondition: ''
          groupKeyColumn: PROFILE_CODE
          keyColumns: BF_CODE,PROFILE_CODE
          mapping:
            PROFILE_CODE: PROFILE_CODE
          parent: BF_PROFILE
    BPM_EC_GCOMMAND:
      displayText: Bpm Ec Gcommand
      filterCondition: ''
      groupKeyColumn: UPGDUID
      groupKeyColumnSubQuery: COMMAND_NAME
      keyColumns: COMMAND_NAME
      related:
        BPM_EC_GCOMMAND_OP:
          callableColumns:
          - column: BPM_EC_GCOMMAND_ID
            query: ' ''(SELECT X.BPM_EC_GCOMMAND_ID FROM BPM_EC_GCOMMAND X WHERE X.COMMAND_NAME=''''''
              || (SELECT Z.COMMAND_NAME FROM BPM_EC_GCOMMAND Z WHERE Z.BPM_EC_GCOMMAND_ID
              = BPM_EC_GCOMMAND_OP.BPM_EC_GCOMMAND_ID AND  ROWNUM <2) || '''''')'' '
          displayText: Bpm Ec Gcommand OP
          filterCondition: ''
          groupKeyColumn: UPGDUID
          groupKeyColumnSubQuery: (SELECT COMMAND_NAME from BPM_EC_GCOMMAND WHERE BPM_EC_GCOMMAND_ID = BPM_EC_GCOMMAND_OP.BPM_EC_GCOMMAND_ID)
          keyColumns: OP_NAME
          mapping:
            BPM_EC_GCOMMAND_ID: BPM_EC_GCOMMAND_ID
          parent: BPM_EC_GCOMMAND
          selfReferencingColumns: ''
          specialColumns: ''
    BPM_EC_GCOMMAND_HANDLER:
      callableColumns:
      - column: BPM_EC_GCOMMAND_ID
        query: ' ''(SELECT X.BPM_EC_GCOMMAND_ID FROM BPM_EC_GCOMMAND X WHERE X.COMMAND_NAME=''''''
          || (SELECT Z.COMMAND_NAME FROM BPM_EC_GCOMMAND Z WHERE Z.BPM_EC_GCOMMAND_ID
          = BPM_EC_GCOMMAND_HANDLER.BPM_EC_GCOMMAND_ID AND  ROWNUM <2) || '''''')'' '
      dependsOn:
      - BPM_EC_GCOMMAND
      displayText: Bpm Ec Gcommand Handler
      filterCondition: ''
      groupKeyColumn: UPGDUID
      groupKeyColumnSubQuery: (SELECT ('COMMAND_NAME=' || COMMAND_NAME) from BPM_EC_GCOMMAND WHERE BPM_EC_GCOMMAND_ID = BPM_EC_GCOMMAND_HANDLER.BPM_EC_GCOMMAND_ID) || ' SORT_ORDER=' || SORT_ORDER
      keyColumns: BPM_EC_GCOMMAND_ID,SORT_ORDER
      related:
        BPM_EC_GCOMMAND_HANDLER_P:
          callableColumns:
          - column: BPM_EC_GCOMMAND_HANDLER_ID
            query: (select ('(select BPM_EC_GCOMMAND_HANDLER_ID from BPM_EC_GCOMMAND_HANDLER,BPM_EC_GCOMMAND where BPM_EC_GCOMMAND_HANDLER.BPM_EC_GCOMMAND_ID=BPM_EC_GCOMMAND.BPM_EC_GCOMMAND_ID and SORT_ORDER = ''' || BPM_EC_GCOMMAND_HANDLER.SORT_ORDER || ''' and COMMAND_NAME = ''' || BPM_EC_GCOMMAND.COMMAND_NAME || ''')') from BPM_EC_GCOMMAND_HANDLER,BPM_EC_GCOMMAND where BPM_EC_GCOMMAND_HANDLER.BPM_EC_GCOMMAND_ID=BPM_EC_GCOMMAND.BPM_EC_GCOMMAND_ID and BPM_EC_GCOMMAND_HANDLER_ID = BPM_EC_GCOMMAND_HANDLER_P.BPM_EC_GCOMMAND_HANDLER_ID)
          displayText: Bpm Ec Gcommand Handler P
          filterCondition: ''
          groupKeyColumn: UPGDUID
          groupKeyColumnSubQuery: (SELECT ('COMMAND_NAME=' || COMMAND_NAME || ' SORT_ORDER=' || SORT_ORDER) from BPM_EC_GCOMMAND_HANDLER, BPM_EC_GCOMMAND WHERE BPM_EC_GCOMMAND.BPM_EC_GCOMMAND_ID = BPM_EC_GCOMMAND_HANDLER.Bpm_Ec_Gcommand_Id and BPM_EC_GCOMMAND_HANDLER_ID = BPM_EC_GCOMMAND_HANDLER_P.BPM_EC_GCOMMAND_HANDLER_ID)
          keyColumns: PARAM_NAME,BPM_EC_GCOMMAND_HANDLER_ID
          mapping:
            BPM_EC_GCOMMAND_HANDLER_ID: BPM_EC_GCOMMAND_HANDLER_ID
          parent: BPM_EC_GCOMMAND_HANDLER
          selfReferencingColumns: ''
          specialColumns: ''
      selfReferencingColumns: ''
      specialColumns: ''
    BPM_PROC_OV_CONFIG_ATT:
      displayText: Bpm Proc Ov Config Attribute
      filterCondition: ''
      groupKeyColumn: UPGDUID
      groupKeyColumnSubQuery: ('TYPE=' || TYPE || ' KEY=' || KEY || ' NAME=' || NAME)
      keyColumns: TYPE,KEY,NAME
    BPM_PROC_OV_LIST_PROPERTY:
      displayText: Bpm Proc Ov List Property
      filterCondition: ''
      groupKeyColumn: UPGDUID
      groupKeyColumnSubQuery: ('PROPERTY_CLAZZ=' || PROPERTY_CLAZZ || ' NAME=' || NAME || ' PROCESS_TEMPLATE_NO=' || PROCESS_TEMPLATE_NO)
      keyColumns: PROPERTY_CLAZZ,NAME,PROCESS_TEMPLATE_NO
    BPM_VIEWER_TAG:
      displayText: Bpm Viewer Tag
      filterCondition: ''
      groupKeyColumn: TAG
      keyColumns: TAG
    BPM_VIEWER_TAG_ATT:
      displayText: Bpm Viewer Tag Attribute
      filterCondition: ''
      groupKeyColumn: UPGDUID
      groupKeyColumnSubQuery: ('TAG=' || TAG || ' NAME=' || NAME)
      keyColumns: TAG,NAME
    BUSINESS_ACTION:
      dependsOn:
      - OV_FUNCTIONAL_AREA
      displayText: Business Action
      filterCondition: ''
      groupKeyColumn: UPGDUID
      groupKeyColumnSubQuery: '(''NAME='' || NAME || '' FUNCTIONAL_AREA='' ||(CASE
        WHEN ECDP_OBJECTS.GETOBJCODE(FUNCTIONAL_AREA_ID) IS NOT NULL THEN ECDP_OBJECTS.GETOBJCODE(FUNCTIONAL_AREA_ID)
        ELSE FUNCTIONAL_AREA_ID END)) '
      keyColumns: NAME,FUNCTIONAL_AREA_ID
      objectIdColumns:
      - column: FUNCTIONAL_AREA_ID
        query: ''
      selfReferencingColumns: ''
      specialColumns: ''
    BUSINESS_FUNCTION:
      displayText: Business Function
      filterCondition: ''
      groupKeyColumn: URL
      keyColumns: URL
    CALENDAR_OFFSET:
      displayText: Calendar Offset
      filterCondition: ''
      groupKeyColumn: OFFSET
      keyColumns: OFFSET
    CLASS_PROPERTY_CODES:
      displayText: Class Property Codes
      filterCondition: ''
      groupKeyColumn: UPGDUID
      groupKeyColumnSubQuery: ('PROPERTY_TABLE_NAME='|| PROPERTY_TABLE_NAME || ' PROPERTY_CODE=' || PROPERTY_CODE || ' PROPERTY_TYPE=' || PROPERTY_TYPE)
      keyColumns: PROPERTY_TABLE_NAME,PROPERTY_CODE,PROPERTY_TYPE
      selfReferencingColumns: ''
      specialColumns: ''
    CNTX_MENU_ITEM:
      callableColumns:
      - column: BF_COMPONENT_ACTION_NO
        query: (select '(SELECT BF_COMPONENT_ACTION_NO FROM BF_COMPONENT_ACTION  WHERE BF_COMPONENT_NO = (SELECT BF_COMPONENT_NO FROM BF_COMPONENT WHERE BF_CODE =''' || B.BF_CODE || ''' AND NVL(URL,''IS_NULL'') = ''' || NVL(B.URL, 'IS_NULL') || ''' AND COMP_CODE =''' || B.COMP_CODE || ''' AND NVL(CLASS_NAME,''IS_NULL'') = ''' || NVL(B.CLASS_NAME,'IS_NULL') || ''') AND NVL(BF_COMPONENT_ACTION.URL, ''IS_NULL'') = ''' || NVL(A.URL, 'IS_NULL') || ''')' FROM BF_COMPONENT_ACTION A, BF_COMPONENT B where A.BF_COMPONENT_NO = B.BF_COMPONENT_NO AND A.BF_COMPONENT_ACTION_NO=CNTX_MENU_ITEM.BF_COMPONENT_ACTION_NO)
      dependsOn:
      - BF_COMPONENT_ACTION
      displayText: Context Menu Item
      filterCondition: ''
      groupKeyColumn: UPGDUID
      groupKeyColumnSubQuery: (SELECT 'CODE=' || B.BF_CODE || ' URL=' || NVL(B.URL, 'IS_NULL') || ' COMP_CODE=' || B.COMP_CODE || ' CLASS_NAME=' || NVL(B.CLASS_NAME, 'IS_NULL')   || ' ACTION_URL=' || NVL(A.URL, 'IS_NULL') FROM BF_COMPONENT_ACTION A, BF_COMPONENT B WHERE A.BF_COMPONENT_NO = B.BF_COMPONENT_NO AND A.BF_COMPONENT_ACTION_NO = CNTX_MENU_ITEM.BF_COMPONENT_ACTION_NO) || ' ITEM_CODE=' || ITEM_CODE
      keyColumns: BF_COMPONENT_ACTION_NO, ITEM_CODE
      related:
        CNTX_MENU_ITEM_PARAM:
          callableColumns:
          - column: BF_COMPONENT_ACTION_NO
            query: (select '(SELECT BF_COMPONENT_ACTION_NO FROM BF_COMPONENT_ACTION  WHERE BF_COMPONENT_NO = (SELECT BF_COMPONENT_NO FROM BF_COMPONENT WHERE BF_CODE =''' || B.BF_CODE || ''' AND NVL(URL,''IS_NULL'') = ''' || NVL(B.URL, 'IS_NULL') || ''' AND COMP_CODE =''' || B.COMP_CODE || ''' AND NVL(CLASS_NAME,''IS_NULL'') = ''' || NVL(B.CLASS_NAME,'IS_NULL') || ''') AND NVL(BF_COMPONENT_ACTION.URL, ''IS_NULL'') = ''' || NVL(A.URL, 'IS_NULL') || ''')' FROM BF_COMPONENT_ACTION A, BF_COMPONENT B where A.BF_COMPONENT_NO = B.BF_COMPONENT_NO AND A.BF_COMPONENT_ACTION_NO=CNTX_MENU_ITEM_PARAM.BF_COMPONENT_ACTION_NO)
          displayText: Context Menu Item Param
          filterCondition: ''
          groupKeyColumn: UPGDUID
          groupKeyColumnSubQuery: (SELECT 'CODE=' || B.BF_CODE || ' URL=' || NVL(B.URL, 'IS_NULL') || ' COMP_CODE=' || B.COMP_CODE || ' CLASS_NAME=' || NVL(B.CLASS_NAME, 'IS_NULL')   || ' ACTION_URL=' || NVL(A.URL, 'IS_NULL') FROM BF_COMPONENT_ACTION A, BF_COMPONENT B WHERE A.BF_COMPONENT_NO = B.BF_COMPONENT_NO AND A.BF_COMPONENT_ACTION_NO = CNTX_MENU_ITEM_PARAM.BF_COMPONENT_ACTION_NO) || ' ITEM_CODE=' || ITEM_CODE || ' PARAMETER_NAME=' || PARAMETER_NAME
          keyColumns: BF_COMPONENT_ACTION_NO, ITEM_CODE, PARAMETER_NAME
          mapping:
            BF_COMPONENT_ACTION_NO: BF_COMPONENT_ACTION_NO
            ITEM_CODE: ITEM_CODE
          parent: CNTX_MENU_ITEM
          selfReferencingColumns: ''
          specialColumns: ''
      selfReferencingColumns: ''
      specialColumns: ''
    COMP_SET:
      displayText: Component Set
      filterCondition: ''
      groupKeyColumn: COMPONENT_SET
      groupKeyColumnSubQuery: ''
      keyColumns: COMPONENT_SET
      selfReferencingColumns: ''
      specialColumns: ''
    CONFIG_VARIABLE:
      displayText: Config Variable
      filterCondition: ''
      groupKeyColumn: UPGDUID
      groupKeyColumnSubQuery: ECDP_OBJECTS.GETOBJCODE(OBJECT_ID)
      keyColumns: OBJECT_ID
      objectIdColumns:
      - column: OBJECT_ID
        query: ''
      related:
        CONFIG_VARIABLE_VERSION:
          dependsOn:
          - CALC_CONTEXT
          displayText: Config Variable Version
          filterCondition: ''
          groupKeyColumn: UPGDUID
          groupKeyColumnSubQuery: ECDP_OBJECTS.GETOBJCODE(OBJECT_ID)
          keyColumns: OBJECT_ID,DAYTIME
          mapping:
            OBJECT_ID: OBJECT_ID
          objectIdColumns:
          - column: OBJECT_ID
            query: ''
          - column: CALC_CONTEXT_ID
            query: ''
          parent: CONFIG_VARIABLE
          selfReferencingColumns: ''
          specialColumns: ''
      selfReferencingColumns: ''
      specialColumns: ''
    CONFIG_VARIABLE_PARAM:
      dependsOn:
      - CONFIG_VARIABLE
      displayText: Config Variable Param
      filterCondition: ''
      groupKeyColumn: UPGDUID
      groupKeyColumnSubQuery: ECDP_OBJECTS.GETOBJCODE(OBJECT_ID)
      keyColumns: OBJECT_ID
      objectIdColumns:
      - column: OBJECT_ID
        query: ''
      - column: CONFIG_VARIABLE_ID
        query: ''
      related:
        CONFIG_VARIABLE_PARAM_VRSN:
          displayText: Config Variable Param Vrsn
          filterCondition: ''
          groupKeyColumn: UPGDUID
          groupKeyColumnSubQuery: ECDP_OBJECTS.GETOBJCODE(OBJECT_ID)
          keyColumns: OBJECT_ID,DAYTIME
          mapping:
            OBJECT_ID: OBJECT_ID
          objectIdColumns:
          - column: OBJECT_ID
            query: ''
          parent: CONFIG_VARIABLE_PARAM
          selfReferencingColumns: ''
          specialColumns: ''
      selfReferencingColumns: ''
      specialColumns: ''
    CONSTANT_STANDARD:
      displayText: Constant Standard
      filterCondition: ''
      groupKeyColumn: UPGDUID
      groupKeyColumnSubQuery: ECDP_OBJECTS.GETOBJCODE(OBJECT_ID)
      keyColumns: OBJECT_ID
      objectIdColumns:
      - column: OBJECT_ID
        query: ''
      related:
        CONSTANT_STANDARD_VERSION:
          displayText: Constant Standard Version
          filterCondition: ''
          groupKeyColumn: UPGDUID
          groupKeyColumnSubQuery: ECDP_OBJECTS.GETOBJCODE(OBJECT_ID)
          keyColumns: OBJECT_ID,DAYTIME
          mapping:
            OBJECT_ID: OBJECT_ID
          objectIdColumns:
          - column: OBJECT_ID
            query: ''
          parent: CONSTANT_STANDARD
          selfReferencingColumns: ''
          specialColumns: ''
      selfReferencingColumns: ''
      specialColumns: ''
    CONTRACT_TEMPLATE:
      displayText: Contract Template
      filterCondition: ''
      groupKeyColumn: TEMPLATE_CODE
      keyColumns: TEMPLATE_CODE
      related:
        CNTR_TEMPLATE_ATTRIBUTE:
          displayText: Contract Template Attribute
          filterCondition: ''
          groupKeyColumn: TEMPLATE_CODE
          keyColumns: TEMPLATE_CODE,ATTRIBUTE_NAME
          mapping:
            CODE: TEMPLATE_CODE
          parent: CONTRACT_TEMPLATE
    CONTROL_POINT:
      displayText: Control Point
      filterCondition: ''
      groupKeyColumn: UPGDUID
      groupKeyColumnSubQuery: ECDP_OBJECTS.GETOBJCODE(OBJECT_ID)
      keyColumns: OBJECT_ID
      objectIdColumns:
      - column: OBJECT_ID
        query: ''
      related:
        CONTROL_POINT_LINK:
          callableColumns:
          - column: BF_COMPONENT_ACTION_NO
            query: (select '(SELECT BF_COMPONENT_ACTION_NO FROM BF_COMPONENT_ACTION  WHERE BF_COMPONENT_NO = (SELECT BF_COMPONENT_NO FROM BF_COMPONENT WHERE BF_CODE =''' || B.BF_CODE || ''' AND NVL(URL,''IS_NULL'') = ''' || NVL(B.URL, 'IS_NULL') || ''' AND COMP_CODE =''' || B.COMP_CODE || ''' AND NVL(CLASS_NAME,''IS_NULL'') = ''' || NVL(B.CLASS_NAME,'IS_NULL') || ''') AND NVL(BF_COMPONENT_ACTION.URL, ''IS_NULL'') = ''' || NVL(A.URL, 'IS_NULL') || ''')' FROM BF_COMPONENT_ACTION A, BF_COMPONENT B where A.BF_COMPONENT_NO = B.BF_COMPONENT_NO AND A.BF_COMPONENT_ACTION_NO=CONTROL_POINT_LINK.BF_COMPONENT_ACTION_NO)
          - column: BUSINESS_ACTION_NO
            query: (SELECT '(SELECT BUSINESS_ACTION_NO FROM BUSINESS_ACTION WHERE NAME =''' || A.NAME || ''' AND (CASE WHEN ECDP_OBJECTS.GETOBJCODE(FUNCTIONAL_AREA_ID) IS NOT NULL THEN ECDP_OBJECTS.GETOBJCODE(FUNCTIONAL_AREA_ID) ELSE NVL(FUNCTIONAL_AREA_ID, ''IS_NULL'') END) = ''' || (CASE WHEN ECDP_OBJECTS.GETOBJCODE(A.FUNCTIONAL_AREA_ID) IS NOT NULL THEN ECDP_OBJECTS.GETOBJCODE(A.FUNCTIONAL_AREA_ID) ELSE NVL(A.FUNCTIONAL_AREA_ID, 'IS_NULL') END) || ''' )' FROM BUSINESS_ACTION A WHERE A.BUSINESS_ACTION_NO = CONTROL_POINT_LINK.BUSINESS_ACTION_NO)
          dependsOn:
          - BUSINESS_ACTION
          - PROSTY_CODES
          - OV_FUNCTIONAL_AREA
          - BF_COMPONENT_ACTION
          displayText: Control Point Link
          filterCondition: ''
          groupKeyColumn: UPGDUID
          groupKeyColumnSubQuery: ECDP_OBJECTS.GETOBJCODE(OBJECT_ID)
          keyColumns: OBJECT_ID,BF_COMPONENT_ACTION_NO,BUSINESS_ACTION_NO
          mapping:
            OBJECT_ID: OBJECT_ID
          objectIdColumns:
          - column: OBJECT_ID
            query: ''
          parent: CONTROL_POINT
          selfReferencingColumns: ''
          specialColumns: ''
        CONTROL_POINT_VERSION:
          dependsOn:
          - BUSINESS_ACTION
          - PROSTY_CODES
          - OV_FUNCTIONAL_AREA
          displayText: Control Point Version
          filterCondition: ''
          groupKeyColumn: UPGDUID
          groupKeyColumnSubQuery: ECDP_OBJECTS.GETOBJCODE(OBJECT_ID)
          keyColumns: OBJECT_ID,DAYTIME
          mapping:
            OBJECT_ID: OBJECT_ID
          objectIdColumns:
          - column: OBJECT_ID
            query: ''
          parent: CONTROL_POINT
          selfReferencingColumns: ''
          specialColumns: ''
      selfReferencingColumns: ''
      specialColumns: ''
    CTRL_CHECK_GROUP:
      displayText: Ctrl Check Group
      filterCondition: ''
      groupKeyColumn: CHECK_GROUP
      groupKeyColumnSubQuery: ''
      keyColumns: CHECK_GROUP
      related:
        CTRL_CHECK_COMBINATION:
          dependsOn:
          - CTRL_CHECK_RULES
          displayText: Ctrl Check Combination
          filterCondition: ''
          groupKeyColumn: CHECK_GROUP
          keyColumns: CHECK_ID, CHECK_GROUP
          mapping:
            CHECK_GROUP: CHECK_GROUP
          parent: CTRL_CHECK_GROUP
      selfReferencingColumns: PARENT_GROUP
      specialColumns: ''
    CTRL_CHECK_RULES:
      displayText: Ctrl Check Rules
      filterCondition: ''
      groupKeyColumn: CHECK_ID
      keyColumns: CHECK_ID
    CTRL_CLIENT_HELP:
      displayText: Client Help
      filterCondition: ''
      groupKeyColumn: UPGDUID
      groupKeyColumnSubQuery: ('EC_CLIENT_OBJ='|| EC_CLIENT_OBJ || ' HELP_TYPE=' || HELP_TYPE)
      keyColumns: EC_CLIENT_OBJ,HELP_TYPE
      selfReferencingColumns: ''
      specialColumns: ''
    CTRL_DASHBOARD:
      displayText: Dashboard
      filterCondition: ''
      groupKeyColumn: WIDGET_CODE
      groupKeyColumnSubQuery: ''
      keyColumns: WIDGET_CODE
      selfReferencingColumns: ''
      specialColumns: ''
    CTRL_DASHBOARD_PARAM:
      displayText: Dashboard Param
      filterCondition: ''
      groupKeyColumn: UPGDUID
      groupKeyColumnSubQuery: ('WIDGET_CODE='|| WIDGET_CODE || ' NAME=' || NAME)
      keyColumns: WIDGET_CODE,NAME
      selfReferencingColumns: ''
      specialColumns: ''
    CTRL_MEASUREMENT_TYPE:
      displayText: Measurement Type
      filterCondition: ''
      groupKeyColumn: MEASUREMENT_TYPE
      keyColumns: MEASUREMENT_TYPE
    CTRL_OBJECT:
      displayText: Control Object
      filterCondition: ''
      groupKeyColumn: OBJECT_NAME
      keyColumns: OBJECT_NAME
      related:
        CTRL_GEN_FUNCTION:
          displayText: Control Generation Function
          filterCondition: ''
          groupKeyColumn: TABLE_NAME
          groupKeyColumnSubQuery: ''
          keyColumns: TABLE_NAME,COLUMN_NAME
          mapping:
            OBJECT_NAME: TABLE_NAME
          parent: CTRL_OBJECT
          selfReferencingColumns: ''
          specialColumns: ''
    CTRL_PROPERTY_META:
      displayText: Control Property Meta
      filterCondition: ''
      groupKeyColumn: KEY
      groupKeyColumnSubQuery: ''
      keyColumns: KEY
      related:
        CTRL_PROPERTY:
          dependsOn:
          - T_BASIS_ROLE
          - T_BASIS_USER
          displayText: Control Property
          filterCondition: ''
          groupKeyColumn: KEY
          groupKeyColumnSubQuery: ''
          keyColumns: KEY,USER_ID,ROLE_ID,DAYTIME
          mapping:
            KEY: KEY
          parent: CTRL_PROPERTY_META
          selfReferencingColumns: ''
          specialColumns: ''
      selfReferencingColumns: ''
      specialColumns: ''
    CTRL_SYSTEM_ATTRIBUTE:
      displayText: System Attribute
      filterCondition: ''
      groupKeyColumn: UPGDUID
      groupKeyColumnSubQuery: ('ATTRIBUTE_TYPE=' || ATTRIBUTE_TYPE || ' DAYTIME=' || TO_CHAR(DAYTIME,'DD-MM-YYYY HH:MM:SS'))
      keyColumns: ATTRIBUTE_TYPE,DAYTIME
    CTRL_TV_PRESENTATION:
      displayText: Tree View
      filterCondition: ''
      groupKeyColumn: UPGDUID
      groupKeyColumnSubQuery: ( ' COMPONENT_ID=' || COMPONENT_ID|| ' WINDOW_ID=' || WINDOW_ID )
      keyColumns: WINDOW_ID,COMPONENT_ID
      selfReferencingColumns: PARENT_WINDOW_ID,PARENT_COMPONENT_ID
      specialColumns: ''
    CTRL_UNIT:
      displayText: Unit
      filterCondition: ''
      groupKeyColumn: UNIT
      keyColumns: UNIT
      related:
        CTRL_UNIT_CONVERSION:
          displayText: Unit Conversion
          filterCondition: ''
          groupKeyColumn: FROM_UNIT
          keyColumns: FROM_UNIT,TO_UNIT,DAYTIME
          mapping:
            UNIT: FROM_UNIT
          parent: CTRL_UNIT
        CTRL_UOM_SETUP:
          dependsOn:
          - CTRL_MEASUREMENT_TYPE
          displayText: UOM Setup
          filterCondition: ''
          groupKeyColumn: UNIT
          keyColumns: MEASUREMENT_TYPE,UNIT
          mapping:
            UNIT: UNIT
          parent: CTRL_UNIT
    CURVE_COLUMN_PARAMETER:
      displayText: Curve Column Parameter
      filterCondition: ''
      groupKeyColumn: UPGDUID
      groupKeyColumnSubQuery: ('AXIS_PARAMETER='|| AXIS_PARAMETER || ' CLASS_NAME=' || CLASS_NAME)
      keyColumns: AXIS_PARAMETER,CLASS_NAME
      selfReferencingColumns: ''
      specialColumns: ''
    DUMMY_OBJECT:
      displayText: Dummy Object
      filterCondition: ''
      groupKeyColumn: UPGDUID
      groupKeyColumnSubQuery: ECDP_OBJECTS.GETOBJCODE(OBJECT_ID)
      keyColumns: OBJECT_ID
      objectIdColumns:
      - column: OBJECT_ID
        query: ''
      related:
        DUMMY_OBJECT_VERSION:
          displayText: Dummy Object Version
          filterCondition: ''
          groupKeyColumn: UPGDUID
          groupKeyColumnSubQuery: ECDP_OBJECTS.GETOBJCODE(OBJECT_ID)
          keyColumns: OBJECT_ID,DAYTIME
          mapping:
            OBJECT_ID: OBJECT_ID
          objectIdColumns:
          - column: OBJECT_ID
            query: ''
          parent: DUMMY_OBJECT
          selfReferencingColumns: ''
          specialColumns: ''
      selfReferencingColumns: ''
      specialColumns: ''
    ENUMERATION:
      displayText: Enumeration
      filterCondition: ''
      groupKeyColumn: UPGDUID
      groupKeyColumnSubQuery: ('OBJECT_CODE=' || ECDP_OBJECTS.GETOBJCODE(OBJECT_ID) || ' CLASS_NAME=' || CLASS_NAME)
      keyColumns: OBJECT_ID,CLASS_NAME
      objectIdColumns:
      - column: OBJECT_ID
        query: ''
      related:
        ENUMERATION_VERSION:
          displayText: Enumeration Version
          filterCondition: ''
          groupKeyColumn: UPGDUID
          groupKeyColumnSubQuery: (SELECT 'OBJECT_CODE=' || ECDP_OBJECTS.GETOBJCODE(OBJECT_ID) || ' CLASS_NAME=' || CLASS_NAME FROM ENUMERATION X WHERE X.OBJECT_ID = ENUMERATION_VERSION.OBJECT_ID)
          keyColumns: OBJECT_ID,DAYTIME
          mapping:
            OBJECT_ID: OBJECT_ID
          objectIdColumns:
          - column: OBJECT_ID
            query: ''
          parent: ENUMERATION
          selfReferencingColumns: ''
          specialColumns: ''
      selfReferencingColumns: ''
      specialColumns: ''
    JBPM_BPM_EXT_META:
      displayText: Jbpm Bpm Ext Meta
      filterCondition: ''
      groupKeyColumn: UPGDUID
      groupKeyColumnSubQuery: ('NAME=' || NAME || ' VERSION=' || VERSION)
      keyColumns: NAME,VERSION
    MODULE_STATUS:
      displayText: Module Status
      filterCondition: ''
      groupKeyColumn: MODULE_CODE
      keyColumns: MODULE_CODE
    NAV_MODEL:
      displayText: Navigation Models
      filterCondition: ''
      groupKeyColumn: UPGDUID
      groupKeyColumnSubQuery: ( ' FROM_CLASS_NAME=' || FROM_CLASS_NAME || ' MODEL=' || MODEL || ' ROLE_NAME=' || ROLE_NAME || ' TO_CLASS_NAME=' || TO_CLASS_NAME )
      keyColumns: MODEL,TO_CLASS_NAME,FROM_CLASS_NAME,ROLE_NAME
      selfReferencingColumns: ''
      specialColumns: ''
    OV_FUNCTIONAL_AREA:
      displayText: Functional Area
      filterCondition: ''
      groupKeyColumn: UPGDUID
      groupKeyColumnSubQuery: ( ' CODE=' || CODE || ' DAYTIME=' || TO_CHAR(DAYTIME,'DD-MM-YYYY') )
      keyColumns: DAYTIME,CODE
      selfReferencingColumns: ''
      specialColumns: ''
    PRODUCTION_DAY:
      displayText: Production Day
      filterCondition: ''
      groupKeyColumn: UPGDUID
      groupKeyColumnSubQuery: ECDP_OBJECTS.GETOBJCODE(OBJECT_ID)
      keyColumns: OBJECT_ID
      objectIdColumns:
      - column: OBJECT_ID
        query: ''
      related:
        PRODUCTION_DAY_VERSION:
          displayText: Production Day Version
          filterCondition: ''
          groupKeyColumn: UPGDUID
          groupKeyColumnSubQuery: ECDP_OBJECTS.GETOBJCODE(OBJECT_ID)
          keyColumns: OBJECT_ID,DAYTIME
          mapping:
            OBJECT_ID: OBJECT_ID
          objectIdColumns:
          - column: OBJECT_ID
            query: ''
          parent: PRODUCTION_DAY
          selfReferencingColumns: ''
          specialColumns: ''
      selfReferencingColumns: ''
      specialColumns: ''
    PROSTY_CODES:
      displayText: EC / Prosty Code
      filterCondition: ''
      groupKeyColumn: UPGDUID
      groupKeyColumnSubQuery: ('CODE_TYPE='||CODE_TYPE||' CODE='||CODE)
      keyColumns: CODE,CODE_TYPE
      related:
        CTRL_CODE_DEPENDENCY:
          displayText: EC / Prosty Code Dependancy
          filterCondition: ''
          groupKeyColumn: UPGDUID
          groupKeyColumnSubQuery: ('CODE_TYPE='||CODE_TYPE1||' CODE='||CODE1)
          keyColumns: DEPENDENCY_TYPE,CODE_TYPE1,CODE1,CODE_TYPE2,CODE2,CODE_TYPE3,CODE3
          mapping:
            CODE: CODE1
            CODE_TYPE: CODE_TYPE1
          parent: PROSTY_CODES
    SCHEDULE:
      dependsOn:
      - OV_FUNCTIONAL_AREA
      - PROSTY_CODES
      - T_BASIS_USER
      - T_BASIS_ROLE
      displayText: Schedule
      filterCondition: ''
      groupKeyColumn: UPGDUID
      groupKeyColumnSubQuery: ('NAME=' || NAME || ' SCHEDULE_GROUP=' ||(CASE WHEN ECDP_OBJECTS.GETOBJCODE(SCHEDULE_GROUP) IS NOT NULL THEN ECDP_OBJECTS.GETOBJCODE(SCHEDULE_GROUP) ELSE SCHEDULE_GROUP END))
      keyColumns: SCHEDULE_GROUP,NAME
      objectIdColumns:
      - column: SCHEDULE_GROUP
        query: ''
      selfReferencingColumns: ''
      specialColumns: ''
    STRM_SET:
      displayText: Stream Set
      filterCondition: ''
      groupKeyColumn: STREAM_SET
      groupKeyColumnSubQuery: ''
      keyColumns: STREAM_SET
      selfReferencingColumns: ''
      specialColumns: ''
    TAB_CONFIG_BF:
      dependsOn:
      - BUSINESS_FUNCTION
      displayText: Tab Configuration
      filterCondition: ''
      groupKeyColumn: BF_CODE
      groupKeyColumnSubQuery: ''
      keyColumns: BF_CODE
      related:
        TAB_CONFIG_COMPONENT:
          callableColumns:
          - column: BF_NO_REF
            query: '''(SELECT ECDP_BUSINESS_FUNCTION.GETBUSINESSFUNCTIONNO(''''''||
              BF_CODE_REF || '''''') FROM DUAL )'''
          dependsOn:
          - TAB_CONFIG_BF
          displayText: Tab Configuration Component
          filterCondition: ''
          groupKeyColumn: BF_CODE
          groupKeyColumnSubQuery: ''
          keyColumns: BF_NO_REF,BF_CODE
          mapping:
            BF_CODE: BF_CODE
          parent: TAB_CONFIG_BF
          selfReferencingColumns: ''
          specialColumns: ''
      selfReferencingColumns: ''
      specialColumns: ''
    T_BASIS_LANGUAGE:
      displayText: Language
      filterCondition: ''
      groupKeyColumn: LANGUAGE_ID
      keyColumns: LANGUAGE_ID
    T_BASIS_LANGUAGE_SOURCE:
      displayText: Language Source
      filterCondition: ''
      groupKeyColumn: SOURCE_ID
      keyColumns: SOURCE_ID
      related:
        T_BASIS_LANGUAGE_TARGET:
          dependsOn:
          - T_BASIS_LANGUAGE
          displayText: Language Target
          filterCondition: ''
          groupKeyColumn: SOURCE_ID
          keyColumns: LANGUAGE_ID,SOURCE_ID
          mapping:
            SOURCE_ID: SOURCE_ID
          parent: T_BASIS_LANGUAGE_SOURCE
    VISUAL_TRACING_CONFIG:
      displayText: Visual Tracing Config
      filterCondition: ''
      groupKeyColumn: UPGDUID
      groupKeyColumnSubQuery: ('TR_AREA=' || TR_AREA || ' DATA_ENTITY_CAT=' || DATA_ENTITY_CAT)
      keyColumns: TR_AREA,DATA_ENTITY_CAT
CALCULATION: !!com.ec.upgrade.ecconfig.model.ConfigurationSettingBundle
  displayText: Calculation Configuration
  groups:
    CALC_CONTEXT:
      displayText: Calculation Context
      filterCondition: ''
      groupKeyColumn: UPGDUID
      groupKeyColumnSubQuery: ECDP_OBJECTS.GETOBJCODE(OBJECT_ID)
      keyColumns: OBJECT_ID
      objectIdColumns:
      - column: OBJECT_ID
        query: ''
      selfReferencingColumns: ''
      specialColumns: ''
REPORTING: !!com.ec.upgrade.ecconfig.model.ConfigurationSettingBundle
  displayText: Reporting Configuration
  groups:
    OV_REPT_CONTEXT:
      displayText: Reporting Context
      filterCondition: ''
      groupKeyColumn: UPGDUID
      groupKeyColumnSubQuery: ( ' CODE=' || CODE || ' DAYTIME=' || TO_CHAR(DAYTIME,'DD-MM-YYYY') )
      keyColumns: DAYTIME,CODE
      selfReferencingColumns: ''
      specialColumns: ''
    REPORT_DEFINITION:
      dependsOn:
      - REPORT_DEFINITION_GROUP
      - REPORT_TEMPLATE
      displayText: Report Definition
      filterCondition: ''
      groupKeyColumn: UPGDUID
      groupKeyColumnSubQuery: ('REP_GROUP_CODE=' || REP_GROUP_CODE || ' TEMPLATE_CODE=' || TEMPLATE_CODE || ' DAYTIME=' || TO_CHAR(DAYTIME,'DD-MM-YYYY'))
      keyColumns: REP_GROUP_CODE,TEMPLATE_CODE,DAYTIME
      objectIdColumns:
      - column: REP_GROUP_CODE
        query: ''
      - column: TEMPLATE_CODE
        query: ''
      related:
        REPORT_DEFINITION_PARAM:
          callableColumns:
          - column: REPORT_DEFINITION_NO
            query: (SELECT '(SELECT A.REPORT_DEFINITION_NO FROM REPORT_DEFINITION A WHERE A.REP_GROUP_CODE=''' || A.REP_GROUP_CODE || ''' AND A.TEMPLATE_CODE=''' || A.TEMPLATE_CODE || ''' AND TO_CHAR(DAYTIME,''DD-MM-YYYY'')=''' || TO_CHAR(A.DAYTIME,'DD-MM-YYYY') || ''')' FROM REPORT_DEFINITION A WHERE A.REPORT_DEFINITION_NO = REPORT_DEFINITION_PARAM.REPORT_DEFINITION_NO)
          displayText: Report Definition Parameter
          filterCondition: ''
          groupKeyColumn: UPGDUID
          groupKeyColumnSubQuery: (SELECT ('REP_GROUP_CODE=' || REP_GROUP_CODE || ' TEMPLATE_CODE=' || TEMPLATE_CODE || ' DAYTIME=' || TO_CHAR(DAYTIME,'DD-MM-YYYY')) from REPORT_DEFINITION WHERE REPORT_DEFINITION_NO = REPORT_DEFINITION_PARAM.REPORT_DEFINITION_NO)
          keyColumns: REPORT_DEFINITION_NO,PARAMETER_NAME
          mapping:
            REPORT_DEFINITION_NO: REPORT_DEFINITION_NO
          parent: REPORT_DEFINITION
          selfReferencingColumns: ''
          specialColumns: ''
      selfReferencingColumns: ''
      specialColumns: ''
    REPORT_DEFINITION_GROUP:
      dependsOn:
      - FUNCTIONAL_AREA
      - OV_FUNCTIONAL_AREA
      displayText: Report Definition Group
      filterCondition: ''
      groupKeyColumn: REP_GROUP_CODE
      groupKeyColumnSubQuery: ''
      keyColumns: REP_GROUP_CODE
      objectIdColumns:
      - column: FUNCTIONAL_AREA_ID
        query: ''
      related:
        REPORT_DEF_GRP_VERSION:
          displayText: Report Definition Group Version
          filterCondition: ''
          groupKeyColumn: REP_GROUP_CODE
          groupKeyColumnSubQuery: ''
          keyColumns: REP_GROUP_CODE,DAYTIME
          mapping:
            REP_GROUP_CODE: REP_GROUP_CODE
          parent: REPORT_DEFINITION_GROUP
          selfReferencingColumns: ''
          specialColumns: ''
        REPORT_RUNABLE:
          callableColumns:
          - column: REPORT_RUNABLE_NO
            query: (SELECT '(SELECT A.REPORT_RUNABLE_NO FROM REPORT_RUNABLE A WHERE A.REP_GROUP_CODE='''|| REPORT_RUNABLE.REP_GROUP_CODE || ''' AND A.NAME=''' || REPORT_RUNABLE.NAME || ''' AND ROWNUM = 1)' FROM DUAL)
          displayText: Report Runable
          filterCondition: ''
          groupKeyColumn: REP_GROUP_CODE
          groupKeyColumnSubQuery: ''
          keyColumns: REPORT_RUNABLE_NO
          mapping:
            REP_GROUP_CODE: REP_GROUP_CODE
          objectIdColumns:
          - column: FUNCTIONAL_AREA_ID
            query: ''
          parent: REPORT_DEFINITION_GROUP
          selfReferencingColumns: ''
          specialColumns: ''
        REPORT_RUNABLE_PARAM:
          callableColumns:
          - column: REPORT_RUNABLE_NO
            query: (SELECT '(SELECT A.REPORT_RUNABLE_NO FROM REPORT_RUNABLE A WHERE A.REP_GROUP_CODE='''|| A.REP_GROUP_CODE || ''' AND A.NAME=''' || A.NAME || ''' AND ROWNUM = 1)' FROM REPORT_RUNABLE A WHERE A.REPORT_RUNABLE_NO = REPORT_RUNABLE_PARAM.REPORT_RUNABLE_NO)
          displayText: Report Runable Param
          filterCondition: ''
          groupKeyColumn: UPGDUID
          groupKeyColumnSubQuery: (SELECT A.REP_GROUP_CODE FROM REPORT_RUNABLE A WHERE A.REPORT_RUNABLE_NO = REPORT_RUNABLE_PARAM.REPORT_RUNABLE_NO)
          keyColumns: REPORT_RUNABLE_NO,DAYTIME,PARAMETER_NAME
          mapping:
            REPORT_RUNABLE_NO: REPORT_RUNABLE_NO
          parent: REPORT_RUNABLE
          selfReferencingColumns: ''
          specialColumns: ''
      selfReferencingColumns: PARENT_REP_GROUP_CODE
      specialColumns: ''
    REPORT_TEMPLATE:
      displayText: Report Template
      filterCondition: ''
      groupKeyColumn: TEMPLATE_CODE
      groupKeyColumnSubQuery: ''
      keyColumns: TEMPLATE_CODE
      related:
        REPORT_TEMPLATE_PARAM:
          displayText: Report Template Param
          filterCondition: ''
          groupKeyColumn: TEMPLATE_CODE
          groupKeyColumnSubQuery: ''
          keyColumns: TEMPLATE_CODE,PARAMETER_NAME
          mapping:
            TEMPLATE_CODE: TEMPLATE_CODE
          parent: REPORT_TEMPLATE
          selfReferencingColumns: ''
          specialColumns: ''
      selfReferencingColumns: ''
      specialColumns: TEMPLATE_BLOB
    REPT_OBJECT_TYPE:
      dependsOn:
      - OV_REPT_CONTEXT
      displayText: Report Object Type
      filterCondition: ''
      groupKeyColumn: UPGDUID
      groupKeyColumnSubQuery: ('CODE= ' || ECDP_OBJECTS.GETOBJCODE(OBJECT_ID) || ' OBJ_TYPE= ' || OBJECT_TYPE_CODE)
      keyColumns: OBJECT_ID,OBJECT_TYPE_CODE
      objectIdColumns:
      - column: OBJECT_ID
        query: ''
      related:
        REPT_OBJECT_ATTRIBUTE:
          displayText: Report Object Attribute
          filterCondition: ''
          groupKeyColumn: UPGDUID
          groupKeyColumnSubQuery: ('CODE= ' || ECDP_OBJECTS.GETOBJCODE(OBJECT_ID) || ' OBJ_TYPE= ' || OBJECT_TYPE_CODE)
          keyColumns: OBJECT_ID,OBJECT_TYPE_CODE,SQL_SYNTAX
          mapping:
            OBJECT_ID: OBJECT_ID
            OBJECT_TYPE_CODE: OBJECT_TYPE_CODE
          objectIdColumns:
          - column: OBJECT_ID
            query: ''
          parent: REPT_OBJECT_TYPE
          selfReferencingColumns: ''
          specialColumns: ''
      selfReferencingColumns: ''
      specialColumns: ''
    REPT_SET:
      dependsOn:
      - REPT_CONTEXT
      - REPT_OBJECT_TYPE
      displayText: Report Set
      filterCondition: ''
      groupKeyColumn: UPGDUID
      groupKeyColumnSubQuery: ('CODE= ' || ECDP_OBJECTS.GETOBJCODE(OBJECT_ID) || ' NAME= ' || NAME)
      keyColumns: OBJECT_ID,NAME
      objectIdColumns:
      - column: OBJECT_ID
        query: ''
      - column: PRODUCTION_DAY_ID
        query: ''
      related:
        REPT_SET_CONDITION:
          displayText: Report Set Condition
          filterCondition: ''
          groupKeyColumn: UPGDUID
          groupKeyColumnSubQuery: ('CODE= ' || ECDP_OBJECTS.GETOBJCODE(OBJECT_ID) || ' NAME= ' || NAME)
          keyColumns: OBJECT_ID,NAME,REPT_SET_COND_OPERATOR,REPT_OBJ_ATTR_SQL_SYNTAX,REPT_SET_COND_TYPE
          mapping:
            NAME: NAME
            OBJECT_ID: OBJECT_ID
          objectIdColumns:
          - column: OBJECT_ID
            query: ''
          parent: REPT_SET
          selfReferencingColumns: ''
          specialColumns: ''
      selfReferencingColumns: BASE_REPT_SET_NAME
      specialColumns: ''
