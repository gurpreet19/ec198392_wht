CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_EXCHANGE_RATES" ("FOREX_VARIANT", "SCREEN_SORT_ORDER", "TRANS_SORT_ORDER", "DOCUMENT_KEY", "TRANSACTION_KEY", "TRANSACTION_NAME", "CURR_FROM_TO", "FOREX_DATE", "FOREX_RATE", "CURR_FROM_TO_ID", "INVERTED_FOREX_RATE", "FOREX_SOURCE", "TIME_SCOPE", "FOREX_DATE_BASE_CODE", "CLASS_NAME", "RECORD_STATUS", "CREATED_BY", "CREATED_DATE", "LAST_UPDATED_BY", "LAST_UPDATED_DATE", "REV_NO", "REV_TEXT") AS 
  select 'PRICING_TO_BOOKING'                                                         as FOREX_VARIANT,
       1                                                                            as SCREEN_SORT_ORDER,
       c.sort_order                                                                 as TRANS_SORT_ORDER,
       c.document_key                                                               as DOCUMENT_KEY,
       c.TRANSACTION_KEY                                                            as TRANSACTION_KEY,
       c.NAME                                                                       as TRANSACTION_NAME,
       c.pricing_booking_label_1                                                    as CURR_FROM_TO,
       c.EX_PRICING_BOOKING_DATE                                                    as FOREX_DATE,
       c.EX_PRICING_BOOKING                                                         as FOREX_RATE,
       c.pricing_booking_label_2                                                    as CURR_FROM_TO_ID,
       c.EX_INV_PRICING_BOOKING                                                     as INVERTED_FOREX_RATE,
       ec_forex_source_version.name(c.EX_PRICING_BOOKING_ID, daytime, '<=')         as FOREX_SOURCE,
       EC_PROSTY_CODES.code_text(c.ex_pricing_booking_ts, 'FX_TYPE')                as TIME_SCOPE,
       EC_PROSTY_CODES.code_text(c.EX_PRICING_BOOKING_DBC, 'TRANS_FOREX_BASE_CODE') as FOREX_DATE_BASE_CODE,
       'PRICING_BOOKING_RATE'                                                       as CLASS_NAME,
       c.record_status                                                              as RECORD_STATUS,
       c.created_by                                                                 as CREATED_BY,
       c.created_date                                                               as CREATED_DATE,
       c.last_updated_by                                                            as LAST_UPDATED_BY,
       c.last_updated_date                                                          as LAST_UPDATED_DATE,
       c.rev_no                                                                     as REV_NO,
       c.rev_text                                                                   as REV_TEXT
  from cont_transaction c
   where c.pricing_booking_label_1 is not null
union
select 'PRICING_TO_MEMO'                                                            as FOREX_VARIANT,
       2                                                                            as SCREEN_SORT_ORDER,
       c.sort_order                                                                 as TRANS_SORT_ORDER,
       c.document_key                                                               as DOCUMENT_KEY,
       c.TRANSACTION_KEY                                                            as TRANSACTION_KEY,
       c.NAME                                                                       as TRANSACTION_NAME,
       c.pricing_memo_label_1                                                       as CURR_FROM_TO,
       c.EX_PRICING_MEMO_DATE                                                       as FOREX_DATE,
       c.EX_PRICING_MEMO                                                            as FOREX_RATE,
       c.pricing_memo_label_2                                                       as CURR_FROM_TO_ID,
       c.EX_INV_PRICING_MEMO                                                        as INVERTED_FOREX_RATE,
       ec_forex_source_version.name(c.EX_PRICING_MEMO_ID, daytime, '<=')            as FOREX_SOURCE,
       EC_PROSTY_CODES.code_text(c.EX_PRICING_MEMO_TS, 'FX_TYPE')                   as TIME_SCOPE,
       EC_PROSTY_CODES.code_text(c.EX_PRICING_MEMO_DBC, 'TRANS_FOREX_BASE_CODE')    as FOREX_DATE_BASE_CODE,
       'PRICING_MEMO_RATE'                                                          as CLASS_NAME,
       c.record_status                                                              as RECORD_STATUS,
       c.created_by                                                                 as CREATED_BY,
       c.created_date                                                               as CREATED_DATE,
       c.last_updated_by                                                            as LAST_UPDATED_BY,
       c.last_updated_date                                                          as LAST_UPDATED_DATE,
       c.rev_no                                                                     as REV_NO,
       c.rev_text                                                                   as REV_TEXT
  from cont_transaction c
   where c.pricing_memo_label_1 is not null
union
select 'BOOKING_TO_LOCAL'                                                           as FOREX_VARIANT,
       3                                                                            as SCREEN_SORT_ORDER,
       c.sort_order                                                                 as TRANS_SORT_ORDER,
       c.document_key                                                               as DOCUMENT_KEY,
       c.TRANSACTION_KEY                                                            as TRANSACTION_KEY,
       c.NAME                                                                       as TRANSACTION_NAME,
       c.booking_local_label_1                                                      as CURR_FROM_TO,
       c.EX_BOOKING_LOCAL_DATE                                                      as FOREX_DATE,
       c.EX_BOOKING_LOCAL                                                           as FOREX_RATE,
       c.booking_local_label_2                                                      as CURR_FROM_TO_ID,
       c.EX_INV_BOOKING_LOCAL                                                       as INVERTED_FOREX_RATE,
       ec_forex_source_version.name(c.EX_BOOKING_LOCAL_ID, daytime, '<=')           as FOREX_SOURCE,
       EC_PROSTY_CODES.code_text(c.EX_BOOKING_LOCAL_TS, 'FX_TYPE')                  as TIME_SCOPE,
       EC_PROSTY_CODES.code_text(c.EX_BOOKING_LOCAL_DBC, 'TRANS_FOREX_BASE_CODE')   as FOREX_DATE_BASE_CODE,
       'BOOKING_LOCAL_RATE'                                                         as CLASS_NAME,
       c.record_status                                                              as RECORD_STATUS,
       c.created_by                                                                 as CREATED_BY,
       c.created_date                                                               as CREATED_DATE,
       c.last_updated_by                                                            as LAST_UPDATED_BY,
       c.last_updated_date                                                          as LAST_UPDATED_DATE,
       c.rev_no                                                                     as REV_NO,
       c.rev_text                                                                   as REV_TEXT
  from cont_transaction c
   where c.booking_local_label_1 is not null
union
select 'BOOKING_TO_GROUP'                                                           as FOREX_VARIANT,
       4                                                                            as SCREEN_SORT_ORDER,
       c.sort_order                                                                 as TRANS_SORT_ORDER,
       c.document_key                                                               as DOCUMENT_KEY,
       c.TRANSACTION_KEY                                                            as TRANSACTION_KEY,
       c.NAME                                                                       as TRANSACTION_NAME,
       c.booking_group_label_1                                                      as CURR_FROM_TO,
       c.EX_BOOKING_GROUP_DATE                                                      as FOREX_DATE,
       c.EX_BOOKING_GROUP                                                           as FOREX_RATE,
       c.booking_GROUP_label_2                                                      as CURR_FROM_TO_ID,
       c.EX_INV_BOOKING_GROUP                                                       as INVERTED_FOREX_RATE,
       ec_forex_source_version.name(c.EX_BOOKING_GROUP_ID, daytime, '<=')           as FOREX_SOURCE,
       EC_PROSTY_CODES.code_text(c.EX_BOOKING_GROUP_TS, 'FX_TYPE')                  as TIME_SCOPE,
       EC_PROSTY_CODES.code_text(c.EX_BOOKING_GROUP_DBC, 'TRANS_FOREX_BASE_CODE')   as FOREX_DATE_BASE_CODE,
       'BOOKING_GROUP_RATE'                                                         as CLASS_NAME,
       c.record_status                                                              as RECORD_STATUS,
       c.created_by                                                                 as CREATED_BY,
       c.created_date                                                               as CREATED_DATE,
       c.last_updated_by                                                            as LAST_UPDATED_BY,
       c.last_updated_date                                                          as LAST_UPDATED_DATE,
       c.rev_no                                                                     as REV_NO,
       c.rev_text                                                                   as REV_TEXT
  from cont_transaction c
   where c.booking_group_label_1 is not null
   order by screen_sort_order, trans_sort_order