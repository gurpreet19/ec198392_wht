"ACTIVE_RESULT_DEVICE";"DELETING";"AFTER";"200";"DESCRIPTION";-100;"APPLICATION";"Sync to pwel_result";
"ACTIVE_RESULT_DEVICE";"INSERTING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"Sync to pwel_result";
"ACTIVE_RESULT_WELL";"DELETING";"BEFORE";"900";"DESCRIPTION";-100;"APPLICATION";"To remove valid DIACS well bore interval from ACTIVE_RESULT_WBI";
"ACTIVE_RESULT_WELL";"INSERTING";"AFTER";"800";"DESCRIPTION";-100;"APPLICATION";"To insert valid DIACS well bore interval into ACTIVE_RESULT_WBI";
"ACTIVE_RESULT_WELL";"INSERTING";"AFTER";"920";"DESCRIPTION";-100;"APPLICATION";"Sync to pwel_result";
"ACTIVE_RESULT_WELL";"INSERTING OR UPDATING";"AFTER";"910";"DESCRIPTION";-100;"APPLICATION";"Set production day";
"BALANCE";"INSERTING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"Generate code";
"BANK_ACCOUNT";"INSERTING";"AFTER";"1000";"DESCRIPTION";-100;"APPLICATION";"Check Vendor / Customer";
"BANK_ACCOUNT";"UPDATING";"AFTER";"1010";"DESCRIPTION";-100;"APPLICATION";"Check Vendor / Customer";
"CALC_RULE";"INSERTING OR UPDATING";"BEFORE";"3000";"DESCRIPTION";-100;"APPLICATION";"Set code in calc_rule version";
"CARGO_NOM_DETAIL";"UPDATING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"Will do post validation and instantiation when cargo status changes";
"CARGO_STATUS";"UPDATING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"Will do post validation and instantiation when cargo status changes";
"CARGO_STOR_BATCH";"DELETING";"BEFORE";"200";"DESCRIPTION";-100;"APPLICATION";"Delete measuremnt items";
"CARGO_STOR_BATCH";"INSERTING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"Instansiates measurment items for storage";
"CARGO_STR_BTH_ULD";"DELETING";"BEFORE";"200";"DESCRIPTION";-100;"APPLICATION";"Delete measurement items";
"CARGO_STR_BTH_ULD";"INSERTING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"Instansiates measurment items for storage";
"CHILLER";"UPDATING";"AFTER";"3000";"DESCRIPTION";-100;"APPLICATION";"Update EQPM_EVENT_STATUS whenever DATA_CLASS_X field changes";
"CNTR_DERIVED_PRICE_SETUP";"INSERTING OR UPDATING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Validate Insert or Update";
"CNTR_TEMPLATE_ATTRIBUTE";"DELETING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Validates deletion of an attribute";
"CNTR_TEMPLATE_ATTRIBUTE";"UPDATING OR INSERTING";"BEFORE";"200";"DESCRIPTION";-100;"APPLICATION";"Prompt error message for time span is not equal to DAY";
"CNTR_TEMPLATE_ATTRIBUTE";"UPDATING OR INSERTING";"BEFORE";"300";"DESCRIPTION";-100;"APPLICATION";"Prompt error message for attribute type is user exit";
"CO2_REMOVAL_UNIT";"UPDATING";"AFTER";"3000";"DESCRIPTION";-100;"APPLICATION";"Update EQPM_EVENT_STATUS whenever DATA_CLASS_X field changes";
"COLLECTION_POINT_CONN_2";"INSERTING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Setting parent group type ";
"COMPRESSOR";"UPDATING";"AFTER";"3000";"DESCRIPTION";-100;"APPLICATION";"Update EQPM_EVENT_STATUS whenever DATA_CLASS_X field changes";
"CONDENSATE_SURGE_DRUM";"UPDATING";"AFTER";"3000";"DESCRIPTION";-100;"APPLICATION";"Update EQPM_EVENT_STATUS whenever DATA_CLASS_X field changes";
"CONST_STD_CV_IDEAL_MASS";"INSERTING";"BEFORE";"1200";"DESCRIPTION";-100;"APPLICATION";"set method";
"CONST_STD_CV_IDEAL_MOL";"INSERTING";"BEFORE";"1200";"DESCRIPTION";-100;"APPLICATION";"set method";
"CONTRACT_CUST_PARTIES";"INSERTING";"BEFORE";"2000";"DESCRIPTION";-100;"APPLICATION";"Validates that the user only has inserted ONE record into Vendor/Customer Split. May be removed in later release.";
"CONTRACT_PARTIES";"INSERTING";"AFTER";"700";"DESCRIPTION";-100;"APPLICATION";"Inserting child record";
"CONTRACT_PRICE_LIST";"INSERTING";"AFTER";"20";"DESCRIPTION";-100;"APPLICATION";"Creating a row for each price concept element";
"CONTRACT_TEXT_ITEM";"INSERTING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Set code as assign id";
"CONTRACT_VEND_PARTIES";"INSERTING";"BEFORE";"2000";"DESCRIPTION";-100;"APPLICATION";"Validates that the user only has inserted ONE record into Vendor/Customer Split. May be changed/removed in later release.";
"CO_GEN_UNIT";"UPDATING";"AFTER";"3000";"DESCRIPTION";-100;"APPLICATION";"Update EQPM_EVENT_STATUS whenever DATA_CLASS_X field changes";
"CTRL_SAFETY_SYSTEM";"UPDATING";"AFTER";"3000";"DESCRIPTION";-100;"APPLICATION";"Update EQPM_EVENT_STATUS whenever DATA_CLASS_X field changes";
"DEFER_EVENT_CORR_ACTION";"INSERTING";"BEFORE";"3000";"DESCRIPTION";-100;"APPLICATION";"Check if action is overlapping or not";
"DEFER_EVENT_CORR_ACTION";"UPDATING";"AFTER";"3100";"DESCRIPTION";-100;"APPLICATION";"Check if action is overlapping or not";
"DEFER_LOW_AFF_WELL_LONG";"DELETING";"BEFORE";"3200";"DESCRIPTION";-100;"APPLICATION";"Delete calculated data for this well when deleing it";
"DEFER_LOW_AFF_WELL_LONG";"INSERTING";"BEFORE";"3000";"DESCRIPTION";-100;"APPLICATION";"Check if the same well already exists for this event in given period";
"DEFER_LOW_AFF_WELL_LONG";"INSERTING OR UPDATING";"AFTER";"3500";"DESCRIPTION";-100;"APPLICATION";"Check if the low rate is greater than the potential rate";
"DEFER_LOW_AFF_WELL_LONG";"INSERTING OR UPDATING";"AFTER";"3600";"DESCRIPTION";-100;"APPLICATION";"Set the parent end_date to max(end_date) if end_date is not null";
"DEFER_LOW_AFF_WELL_LONG";"INSERTING OR UPDATING";"BEFORE";"3400";"DESCRIPTION";-100;"APPLICATION";"Check for well status = open before allow operation";
"DEFER_LOW_AFF_WELL_LONG";"UPDATING";"AFTER";"3100";"DESCRIPTION";-100;"APPLICATION";"Check if the same well already exists for this event in given period";
"DEFER_LOW_AFF_WELL_LONG";"UPDATING";"BEFORE";"3300";"DESCRIPTION";-100;"APPLICATION";"Delete calculated data for this well when changing start or end date";
"DEFER_LOW_AFF_WELL_SHORT";"DELETING";"BEFORE";"3200";"DESCRIPTION";-100;"APPLICATION";"Delete calculated data for this well when deleing it";
"DEFER_LOW_AFF_WELL_SHORT";"INSERTING";"BEFORE";"3000";"DESCRIPTION";-100;"APPLICATION";"Check if the same well already exists for this event in given period";
"DEFER_LOW_AFF_WELL_SHORT";"INSERTING OR UPDATING";"AFTER";"3500";"DESCRIPTION";-100;"APPLICATION";"Check if low loss rate is greater  than the potential rate";
"DEFER_LOW_AFF_WELL_SHORT";"INSERTING OR UPDATING";"AFTER";"3600";"DESCRIPTION";-100;"APPLICATION";"Set the parent end_date to max(end_date) if end_date is not null ";
"DEFER_LOW_AFF_WELL_SHORT";"INSERTING OR UPDATING";"BEFORE";"3400";"DESCRIPTION";-100;"APPLICATION";"Check for well status = open before allow operation";
"DEFER_LOW_AFF_WELL_SHORT";"UPDATING";"AFTER";"3100";"DESCRIPTION";-100;"APPLICATION";"Check if the same well already exists for this event in given period";
"DEFER_LOW_AFF_WELL_SHORT";"UPDATING";"BEFORE";"3300";"DESCRIPTION";-100;"APPLICATION";"Delete calculated data for this well when changing start or end date";
"DEFER_LOW_EVENT_LONG";"INSERTING";"AFTER";"3200";"DESCRIPTION";-100;"APPLICATION";"Insterts wells from operational model or from deferment group";
"DEFER_LOW_EVENT_LONG";"INSERTING OR UPDATING";"AFTER";"3300";"DESCRIPTION";-100;"APPLICATION";"Update start date to well information section if it is null or empty or equal to parent old value. Update end date to well information section if it is null or empty or equal to parent old value.";
"DEFER_LOW_EVENT_LONG";"INSERTING OR UPDATING";"BEFORE";"3100";"DESCRIPTION";-100;"APPLICATION";"Check for well status = open before allow operation";
"DEFER_LOW_EVENT_SHORT";"INSERTING";"AFTER";"3200";"DESCRIPTION";-100;"APPLICATION";"Insterts wells from operational model or from deferment group";
"DEFER_LOW_EVENT_SHORT";"INSERTING OR UPDATING";"AFTER";"3300";"DESCRIPTION";-100;"APPLICATION";"Update start date to well information section if it is null or empty or equal to parent old value. Update end date to well information section if it is null or empty or equal to parent old value.";
"DEFER_LOW_EVENT_SHORT";"INSERTING OR UPDATING";"BEFORE";"3100";"DESCRIPTION";-100;"APPLICATION";"Check for well status = open before allow operation";
"DEFER_LOW_OFF";"INSERTING OR UPDATING";"AFTER";"3300";"DESCRIPTION";-100;"APPLICATION";"Update end date to well information section if it is null or empty or equal to parent old value.";
"DEFER_OFF_AFF_WELL_LONG";"DELETING";"BEFORE";"3200";"DESCRIPTION";-100;"APPLICATION";"Delete calculated data for this well when deleing it";
"DEFER_OFF_AFF_WELL_LONG";"INSERTING";"BEFORE";"3000";"DESCRIPTION";-100;"APPLICATION";"Check if the same well already exists for this event in given period";
"DEFER_OFF_AFF_WELL_LONG";"INSERTING OR UPDATING";"AFTER";"3400";"DESCRIPTION";-100;"APPLICATION";"Set the parent end_date to max(end_date) if end_date is not null";
"DEFER_OFF_AFF_WELL_LONG";"INSERTING OR UPDATING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Check for well status = open before allow operation";
"DEFER_OFF_AFF_WELL_LONG";"UPDATING";"AFTER";"3100";"DESCRIPTION";-100;"APPLICATION";"Check if the same well already exists for this event in given period";
"DEFER_OFF_AFF_WELL_LONG";"UPDATING";"BEFORE";"3300";"DESCRIPTION";-100;"APPLICATION";"Delete calculated data for this well when changing start or end date";
"DEFER_OFF_AFF_WELL_SHORT";"DELETING";"BEFORE";"3200";"DESCRIPTION";-100;"APPLICATION";"Delete calculated data for this well when deleing it";
"DEFER_OFF_AFF_WELL_SHORT";"INSERTING";"BEFORE";"3000";"DESCRIPTION";-100;"APPLICATION";"Check if the same well already exists for this event in given period";
"DEFER_OFF_AFF_WELL_SHORT";"INSERTING OR UPDATING";"AFTER";"3500";"DESCRIPTION";-100;"APPLICATION";"Set the parent end_date to max(end_date) if end_date is not null";
"DEFER_OFF_AFF_WELL_SHORT";"INSERTING OR UPDATING";"BEFORE";"3400";"DESCRIPTION";-100;"APPLICATION";"Check for well status = open before allow operation";
"DEFER_OFF_AFF_WELL_SHORT";"UPDATING";"AFTER";"3100";"DESCRIPTION";-100;"APPLICATION";"Check if the same well already exists for this event in given period";
"DEFER_OFF_AFF_WELL_SHORT";"UPDATING";"BEFORE";"3300";"DESCRIPTION";-100;"APPLICATION";"Delete calculated data for this well when changing start or end date";
"DEFER_OFF_EVENT_LONG";"INSERTING";"AFTER";"3200";"DESCRIPTION";-100;"APPLICATION";"Insterts wells from operational model or from deferment group";
"DEFER_OFF_EVENT_LONG";"INSERTING OR UPDATING";"AFTER";"3300";"DESCRIPTION";-100;"APPLICATION";"Update start date to well information section if it is null or empty or equal to parent old value. Update end date to well information section if it is null or empty or equal to parent old value.";
"DEFER_OFF_EVENT_LONG";"INSERTING OR UPDATING";"BEFORE";"3100";"DESCRIPTION";-100;"APPLICATION";"Check for well status = open before allow operation";
"DEFER_OFF_EVENT_SHORT";"INSERTING";"AFTER";"3200";"DESCRIPTION";-100;"APPLICATION";"Insterts wells from operational model or from deferment group";
"DEFER_OFF_EVENT_SHORT";"INSERTING OR UPDATING";"AFTER";"3300";"DESCRIPTION";-100;"APPLICATION";"Update start date to well information section if it is null or empty or equal to parent old value. Update end date to well information section if it is null or empty or equal to parent old value.";
"DEFER_OFF_EVENT_SHORT";"INSERTING OR UPDATING";"BEFORE";"3100";"DESCRIPTION";-100;"APPLICATION";"Check for well status = open before allow operation";
"DEHYDRATOR";"UPDATING";"AFTER";"3000";"DESCRIPTION";-100;"APPLICATION";"Update EQPM_EVENT_STATUS whenever DATA_CLASS_X field changes";
"DEMURRAGE";"INSERTING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Sets Lifting Event to LOAD";
"DEMURRAGE_UNLOAD";"INSERTING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Sets Lifting Event to UNLOAD";
"DOC_DATE_TERM";"INSERTING OR UPDATING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"validate offset";
"DOC_GEN_LOG";"INSERTING";"BEFORE";"1000";"DESCRIPTION";-100;"APPLICATION";"Set Log Item No from Assign ID table";
"DOC_RECEIVED_TERM";"INSERTING OR UPDATING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"validate offset";
"DOC_SEQUENCE";"INSERTING ";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"create new doc seq number";
"DOC_SEQUENCE";"UPDATING";"AFTER";"200";"DESCRIPTION";-100;"APPLICATION";"update doc seq code";
"DOC_SEQUENCE";"UPDATING";"AFTER";"300";"DESCRIPTION";-100;"APPLICATION";"reset doc seq number";
"DOC_SEQUENCE";"UPDATING";"BEFORE";"400";"DESCRIPTION";-100;"APPLICATION";"delete doc seq obj";
"EMULSIFIER";"UPDATING";"AFTER";"3000";"DESCRIPTION";-100;"APPLICATION";"Update EQPM_EVENT_STATUS whenever DATA_CLASS_X field changes";
"EQPM_EVENT";"DELETING";"BEFORE";"1200";"DESCRIPTION";-100;"APPLICATION";"Delete equipment event status ";
"EQPM_EVENT";"INSERTING";"AFTER";"1100";"DESCRIPTION";-100;"APPLICATION";"Insert equipment event status ";
"EQPM_OFF";"DELETING";"BEFORE";"500";"DESCRIPTION";-100;"APPLICATION";"Check if child events exist for this parent.";
"EQPM_OFF";"INSERTING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Setting downtime category";
"EQPM_OFF";"INSERTING";"BEFORE";"200";"DESCRIPTION";-100;"APPLICATION";"Setting downtime class type";
"EQPM_OFF";"INSERTING OR UPDATING";"AFTER";"700";"DESCRIPTION";-100;"APPLICATION";"Assign the childs reason code to be same as parents reason code.";
"EQPM_OFF";"INSERTING OR UPDATING";"AFTER";"1000";"DESCRIPTION";-100;"APPLICATION";"Start Date or End Date should not exceed more than one day of system date.";
"EQPM_OFF";"INSERTING OR UPDATING";"BEFORE";"600";"DESCRIPTION";-100;"APPLICATION";"Check if overlapping events exist.";
"EQPM_OFF";"UPDATING";"AFTER";"400";"DESCRIPTION";-100;"APPLICATION";"Setting end date fo child records if it's null";
"EQPM_OFF_CHILD";"INSERTING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Setting downtime category";
"EQPM_OFF_CHILD";"INSERTING";"BEFORE";"200";"DESCRIPTION";-100;"APPLICATION";"Setting downtime class type";
"EQPM_OFF_CHILD";"INSERTING";"BEFORE";"400";"DESCRIPTION";-100;"APPLICATION";"Setting downtime type ";
"EQPM_OFF_CHILD";"INSERTING";"BEFORE";"700";"DESCRIPTION";-100;"APPLICATION";"Check period validity against parent time period";
"EQPM_OFF_CHILD";"INSERTING";"BEFORE";"1100";"DESCRIPTION";-100;"APPLICATION";"Setting object Type";
"EQPM_OFF_CHILD";"INSERTING OR UPDATING";"AFTER";"900";"DESCRIPTION";-100;"APPLICATION";"Assign the childs reason code to be same as parents reason code.";
"EQPM_OFF_CHILD";"INSERTING OR UPDATING";"AFTER";"1000";"DESCRIPTION";-100;"APPLICATION";"Check End Date in child must be equal to or less than End Date in the parent records.";
"EQPM_OFF_CHILD";"INSERTING OR UPDATING";"BEFORE";"600";"DESCRIPTION";-100;"APPLICATION";"Check if overlapping events exist.";
"EQUIPMENT_OTHER";"UPDATING";"AFTER";"3000";"DESCRIPTION";-100;"APPLICATION";"Update EQPM_EVENT_STATUS whenever DATA_CLASS_X field changes";
"EXCHANGE_RATE";"INSERTING";"BEFORE";"60";"DESCRIPTION";-100;"APPLICATION";"Set daytime to first of month for Monthly time scope";
"EXCHANGE_RATE";"INSERTING OR UPDATING";"AFTER";"80";"DESCRIPTION";-100;"APPLICATION";"Trigger";
"EXCHANGE_RATE";"INSERTING OR UPDATING";"BEFORE";"70";"DESCRIPTION";-100;"APPLICATION";"Trigger";
"FCST_CNTR_ANALYSIS";"DELETING";"BEFORE";"200";"DESCRIPTION";-100;"APPLICATION";"Delete child components";
"FCST_CNTR_ANALYSIS";"INSERTING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"Instantiate components";
"FCST_CNTR_DP_ANALYSIS";"DELETING";"BEFORE";"200";"DESCRIPTION";-100;"APPLICATION";"Delete child components";
"FCST_CNTR_DP_ANALYSIS";"INSERTING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"Instantiate components";
"FCST_DP_ANALYSIS";"DELETING";"BEFORE";"200";"DESCRIPTION";-100;"APPLICATION";"Delete child components";
"FCST_DP_ANALYSIS";"INSERTING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"Instantiate components";
"FCST_GPURCH_MEMBER";"DELETING";"BEFORE";"1200";"DESCRIPTION";-100;"APPLICATION";"Delete records in fcst_yr_status fcst_mth_status";
"FCST_GPURCH_MEMBER";"INSERTING";"BEFORE";"1100";"DESCRIPTION";-100;"APPLICATION";"Set member_no as assign id";
"FCST_GSALES_MEMBER";"DELETING";"BEFORE";"2000";"DESCRIPTION";-100;"APPLICATION";"Delete records in fcst_yr_status fcst_mth_status";
"FCST_GSALES_MEMBER";"INSERTING";"BEFORE";"1700";"DESCRIPTION";-100;"APPLICATION";"Set member_no as assign id and validate Revenue Forecast Stream Item";
"FCST_GSALES_MEMBER";"INSERTING OR UPDATING";"AFTER";"1900";"DESCRIPTION";-100;"APPLICATION";"Update Field_id by given stream_item_id";
"FCST_GSALES_MEMBER";"UPDATING";"BEFORE";"1800";"DESCRIPTION";-100;"APPLICATION";"Validate Revenue Forecast Stream Item";
"FCST_LIQUID_MEMBER";"DELETING";"BEFORE";"1900";"DESCRIPTION";-100;"APPLICATION";"Delete records in fcst_yr_status fcst_mth_status";
"FCST_LIQUID_MEMBER";"INSERTING";"BEFORE";"1600";"DESCRIPTION";-100;"APPLICATION";"Set member_no as assign id and validate Revenue Forecast Stream Item";
"FCST_LIQUID_MEMBER";"INSERTING OR UPDATING";"AFTER";"1800";"DESCRIPTION";-100;"APPLICATION";"Update Field_id by given stream_item_id";
"FCST_LIQUID_MEMBER";"UPDATING";"BEFORE";"1700";"DESCRIPTION";-100;"APPLICATION";"Validate Revenue Forecast Stream Item";
"FCST_QTY_MEMBER";"DELETING";"BEFORE";"1400";"DESCRIPTION";-100;"APPLICATION";"Delete records in fcst_mth_status";
"FCST_QTY_MEMBER";"DELETING";"BEFORE";"1500";"DESCRIPTION";-100;"APPLICATION";"Delete records in fcst_yr_status";
"FCST_QTY_MEMBER";"INSERTING";"BEFORE";"1100";"DESCRIPTION";-100;"APPLICATION";"Set member_no as assign id";
"FCST_QTY_MEMBER";"INSERTING";"BEFORE";"1200";"DESCRIPTION";-100;"APPLICATION";"Validate Quantity Forecast Stream Item";
"FCST_QTY_MEMBER";"INSERTING OR UPDATING";"AFTER";"1300";"DESCRIPTION";-100;"APPLICATION";"Update Field_id by given stream_item_id";
"FCST_QTY_PRODUCT_SETUP";"INSERTING OR UPDATING";"BEFORE";"1900";"DESCRIPTION";-100;"APPLICATION";"Validate Quantity Forecast Stream Item";
"FCST_QTY_PRODUCT_SETUP";"INSERTING OR UPDATING";"BEFORE";"2000";"DESCRIPTION";-100;"APPLICATION";"Validate Quantity Forecast Stream Item";
"FCST_QTY_PRODUCT_SETUP";"INSERTING OR UPDATING";"BEFORE";"2100";"DESCRIPTION";-100;"APPLICATION";"Validate Quantity Forecast Stream Item";
"FCST_REVN_PRODUCT_SETUP";"DELETING";"BEFORE";"2100";"DESCRIPTION";-100;"APPLICATION";"Delete all Forecast Stream Items";
"FCST_REVN_PRODUCT_SETUP";"INSERTING";"AFTER";"2000";"DESCRIPTION";-100;"APPLICATION";"Populate Revenue Forecast Stream Items";
"FCST_REVN_PRODUCT_SETUP";"UPDATING";"AFTER";"2200";"DESCRIPTION";-100;"APPLICATION";"Repopulate Revenue Forecast Stream Items";
"FLOWLINE_TEST_DEF";"DELETING";"BEFORE";"800";"DESCRIPTION";-100;"APPLICATION";"To delete records with same object_id and test no in ptst_define.";
"FLOWLINE_TEST_DEF";"INSERTING";"AFTER";"700";"DESCRIPTION";-100;"APPLICATION";"To insert plot parameters of the test device in ptst_graph_define table";
"FLWL_FORM_ION_ANALYSIS";"INSERTING";"BEFORE";"200";"DESCRIPTION";-100;"APPLICATION";"Set production day";
"FLWL_FORM_ION_ANALYSIS";"INSERTING OR UPDATING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Set object class name";
"FLWL_INJ_ION_ANALYSIS";"INSERTING";"BEFORE";"200";"DESCRIPTION";-100;"APPLICATION";"Set production day";
"FLWL_INJ_ION_ANALYSIS";"INSERTING OR UPDATING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Set object class name";
"FLWL_PROD_ION_ANALYSIS";"INSERTING";"BEFORE";"200";"DESCRIPTION";-100;"APPLICATION";"Set production day";
"FLWL_PROD_ION_ANALYSIS";"INSERTING OR UPDATING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Set object class name";
"FORECAST";"INSERTING OR UPDATING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Validate Insert or Update";
"FOREX_SOURCE_SETUP";"INSERTING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Set daytime to first of month for Monthly time scope";
"GAS_EQPM_SUB_DAY_RESTR";"INSERTING OR UPDATING";"BEFORE";"10";"DESCRIPTION";-100;"APPLICATION";"Set object class name";
"GAS_PROC_EQPM";"UPDATING";"AFTER";"3000";"DESCRIPTION";-100;"APPLICATION";"Update EQPM_EVENT_STATUS whenever DATA_CLASS_X field changes";
"GENERATOR";"UPDATING";"AFTER";"3000";"DESCRIPTION";-100;"APPLICATION";"Update EQPM_EVENT_STATUS whenever DATA_CLASS_X field changes";
"HH_DATA_CLASS";"DELETING";"BEFORE";"600";"DESCRIPTION";-100;"APPLICATION";"Set config_updated in parent table";
"HH_DATA_CLASS";"INSERTING";"AFTER";"500";"DESCRIPTION";-100;"APPLICATION";"Populate Object Attributes";
"HH_OBJECT_ATTRIBUTE";"DELETING";"BEFORE";"1000";"DESCRIPTION";-100;"APPLICATION";"Set config_updated ";
"HH_OBJECT_ATTRIBUTE";"INSERTING";"AFTER";"1100";"DESCRIPTION";-100;"APPLICATION";"Set config_updated ";
"HH_OBJECT_SOURCE";"INSERTING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"Populate all reference attributes";
"HH_OBJ_ATTR_VALUES";"DELETING";"BEFORE";"200";"DESCRIPTION";-100;"APPLICATION";"Set config_updated date";
"HH_OBJ_ATTR_VALUES";"INSERTING";"AFTER";"300";"DESCRIPTION";-100;"APPLICATION";"Set config_updated date";
"HH_REFERENCE_VALUE";"DELETING";"BEFORE";"200";"DESCRIPTION";-100;"APPLICATION";"Set config_updated date";
"HH_REFERENCE_VALUE";"INSERTING";"AFTER";"300";"DESCRIPTION";-100;"APPLICATION";"Set config_updated date";
"IFAC_SALES_QTY";"INSERTING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Assigning alloc_no on the new record";
"IFLW_DAY_STATUS_GAS";"INSERTING";"BEFORE";"10";"DESCRIPTION";-100;"APPLICATION";"Set inj_type to gas injector";
"IFLW_DAY_STATUS_WATER";"INSERTING";"BEFORE";"10";"DESCRIPTION";-100;"APPLICATION";"Set inj_type to water injector";
"INCINERATORS";"UPDATING";"AFTER";"3000";"DESCRIPTION";-100;"APPLICATION";"Update EQPM_EVENT_STATUS whenever DATA_CLASS_X field changes";
"INVENTORY";"INSERTING OR UPDATING";"BEFORE";"200";"DESCRIPTION";-100;"APPLICATION";"Validates that the same currencies are used for underlift and overlift when physical stock is being used";
"INVENTORY";"UPDATING";"BEFORE";"210";"DESCRIPTION";-100;"APPLICATION";"Deletes child objects if an inventory object is deleted";
"INVENTORY_PRICE_LIST";"INSERTING";"AFTER";"20";"DESCRIPTION";-100;"APPLICATION";"Creating a row for each price concept element";
"INV_AVG_PS_RATE_CALC";"UPDATING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"Runs inventory valuation if PS rate has been overwritten";
"IWEL_DAY_STATUS_AIR";"INSERTING";"BEFORE";"10";"DESCRIPTION";-100;"APPLICATION";"Set inj_type to air injector";
"IWEL_DAY_STATUS_GAS";"INSERTING";"BEFORE";"10";"DESCRIPTION";-100;"APPLICATION";"Set inj_type to gas injector";
"IWEL_DAY_STATUS_STEAM";"INSERTING";"BEFORE";"10";"DESCRIPTION";-100;"APPLICATION";"Set inj_type to steam injector";
"IWEL_DAY_STATUS_WATER";"INSERTING";"BEFORE";"10";"DESCRIPTION";-100;"APPLICATION";"Set inj_type to water injector";
"IWEL_EVENT_GAS";"DELETING";"BEFORE";"400";"DESCRIPTION";-100;"APPLICATION";"Deletes a new record in well event detail";
"IWEL_EVENT_GAS";"INSERTING";"AFTER";"200";"DESCRIPTION";-100;"APPLICATION";"Inserts a new record in well event detail";
"IWEL_EVENT_GAS";"INSERTING";"AFTER";"500";"DESCRIPTION";-100;"APPLICATION";"Set Rate Source=MANUAL";
"IWEL_EVENT_GAS";"INSERTING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Updates rate calc method if its null";
"IWEL_EVENT_GAS";"INSERTING";"BEFORE";"800";"DESCRIPTION";-100;"APPLICATION";"Check Active Well Status";
"IWEL_EVENT_GAS";"INSERTING OR UPDATING";"BEFORE";"700";"DESCRIPTION";-100;"APPLICATION";"Set STATUS to NEW if it is NULL.";
"IWEL_EVENT_GAS";"UPDATING";"AFTER";"300";"DESCRIPTION";-100;"APPLICATION";"Updates  record in well event detail";
"IWEL_EVENT_GAS";"UPDATING";"AFTER";"600";"DESCRIPTION";-100;"APPLICATION";"Set Rate Source=MANUAL";
"IWEL_EVENT_STEAM";"DELETING";"BEFORE";"400";"DESCRIPTION";-100;"APPLICATION";"Deletes a new record in well event detail";
"IWEL_EVENT_STEAM";"INSERTING";"AFTER";"200";"DESCRIPTION";-100;"APPLICATION";"Inserts a new record in well event detail";
"IWEL_EVENT_STEAM";"INSERTING";"AFTER";"500";"DESCRIPTION";-100;"APPLICATION";"Set Rate Source=MANUAL";
"IWEL_EVENT_STEAM";"INSERTING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Updates rate calc method if its null";
"IWEL_EVENT_STEAM";"INSERTING";"BEFORE";"800";"DESCRIPTION";-100;"APPLICATION";"Cheack Acitive Well Status";
"IWEL_EVENT_STEAM";"INSERTING OR UPDATING";"BEFORE";"700";"DESCRIPTION";-100;"APPLICATION";"Set STATUS to NEW if it is NULL.";
"IWEL_EVENT_STEAM";"UPDATING";"AFTER";"300";"DESCRIPTION";-100;"APPLICATION";"Updates  record in well event detail";
"IWEL_EVENT_STEAM";"UPDATING";"AFTER";"600";"DESCRIPTION";-100;"APPLICATION";"Set Rate Source=MANUAL";
"IWEL_EVENT_WATER";"DELETING";"BEFORE";"400";"DESCRIPTION";-100;"APPLICATION";"Deletes a new record in well event detail";
"IWEL_EVENT_WATER";"INSERTING";"AFTER";"200";"DESCRIPTION";-100;"APPLICATION";"Inserts a new record in well event detail";
"IWEL_EVENT_WATER";"INSERTING";"AFTER";"500";"DESCRIPTION";-100;"APPLICATION";"Set Rate Source=MANUAL";
"IWEL_EVENT_WATER";"INSERTING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Updates rate calc method if its null";
"IWEL_EVENT_WATER";"INSERTING";"BEFORE";"800";"DESCRIPTION";-100;"APPLICATION";"Check Active Well Status";
"IWEL_EVENT_WATER";"INSERTING OR UPDATING";"BEFORE";"700";"DESCRIPTION";-100;"APPLICATION";"Set STATUS to NEW if it is NULL.";
"IWEL_EVENT_WATER";"UPDATING";"AFTER";"300";"DESCRIPTION";-100;"APPLICATION";"Updates  record in well event detail";
"IWEL_EVENT_WATER";"UPDATING";"AFTER";"600";"DESCRIPTION";-100;"APPLICATION";"Set Rate Source=MANUAL";
"IWEL_PERIOD_STATUS";"DELETING";"BEFORE";"600";"DESCRIPTION";-100;"APPLICATION";"Check last previous record is not LT_CLOSED and next production day is start production before deletion allowed";
"IWEL_PERIOD_STATUS";"DELETING";"BEFORE";"800";"DESCRIPTION";-100;"APPLICATION";"Check for other side if it exists before deleting";
"IWEL_PERIOD_STATUS";"INSERTING";"BEFORE";"300";"DESCRIPTION";-100;"APPLICATION";"Check for active well status = CLOSED_LT";
"IWEL_PERIOD_STATUS";"INSERTING";"BEFORE";"500";"DESCRIPTION";-100;"APPLICATION";"Check the daytime is start of production day if the last previous record is LT_CLOSED";
"IWEL_PERIOD_STATUS";"INSERTING OR UPDATING";"BEFORE";"700";"DESCRIPTION";-100;"APPLICATION";"Check for other side well status";
"IWEL_PERIOD_STATUS";"UPDATING";"BEFORE";"400";"DESCRIPTION";-100;"APPLICATION";"Check for active well status = CLOSED_LT";
"LIFTING_ACTIVITY";"INSERTING OR UPDATING";"AFTER";"200";"DESCRIPTION";-100;"APPLICATION";"Set bl date/unload date if an activity got a date";
"LIFTING_DOC_RECEIVER";"DELETING";"BEFORE";"600";"DESCRIPTION";-100;"APPLICATION";"Deleting child record";
"LIFTING_DOC_RECEIVER";"INSERTING";"AFTER";"600";"DESCRIPTION";-100;"APPLICATION";"Inserting records into Instructions";
"LIFTING_DOC_SET";"DELETING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Deletes instructions with this document type";
"LIFTING_DOC_SET";"INSERTING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"inserts instructions";
"LIFT_ACC_DOC_SET";"DELETING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"delete instructions for this doc set";
"LIFT_ACC_DOC_SET";"INSERTING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"inserts into instruction for this doc set";
"LIFT_ACC_DOC_TEMPLATE";"DELETING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"deletes child records";
"LIFT_ACC_DOC_TEMPLATE";"INSERTING OR UPDATING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"Inserting child record";
"LIFT_ACC_RECEIVER_TEMP";"DELETING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Deleting child record";
"LIFT_ACC_RECEIVER_TEMP";"INSERTING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"Inserting child record";
"MERCURY_REMOVAL_UNIT";"UPDATING";"AFTER";"3000";"DESCRIPTION";-100;"APPLICATION";"Update EQPM_EVENT_STATUS whenever DATA_CLASS_X field changes";
"MSG_TCTR_SHIPPER_PAIR";"DELETING";"BEFORE";"200";"DESCRIPTION";-100;"APPLICATION";"Deletes sub daily nominations";
"MSG_TCTR_SHIPPER_PAIR";"INSERTING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"Generates sub daily nominations";
"PAYMENT_SCHEME";"UPDATING";"BEFORE";"10";"DESCRIPTION";-100;"APPLICATION";"Deketing from table payment_scheme_prod_mth";
"PAYMENT_SCHEME_ITEM";"INSERTING";"BEFORE";"10";"DESCRIPTION";-100;"APPLICATION";"Adding PK";
"PAYMENT_TERM";"INSERTING OR UPDATING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"validate offset";
"PIPE_PIGGING_EVENT";"INSERTING OR UPDATING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Set Production Day";
"PIPE_SUB_DAY_PC_STATUS";"INSERTING OR UPDATING";"BEFORE";"10";"DESCRIPTION";-100;"APPLICATION";"Set object class name";
"POWER_DISTRIBUTION_EQPM";"UPDATING";"AFTER";"3000";"DESCRIPTION";-100;"APPLICATION";"Update EQPM_EVENT_STATUS whenever DATA_CLASS_X field changes";
"PRODUCT_NODE_ITEM";"INSERTING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"Generate code";
"PRODUCT_PRICE_LIST";"INSERTING";"AFTER";"120";"DESCRIPTION";-100;"APPLICATION";"Creating a row for each price concept element";
"PROD_TEST_RESULT";"DELETING";"AFTER";"800";"DESCRIPTION";-100;"APPLICATION";"Delete ptst_result record with result_no";
"PROD_TEST_RESULT";"INSERTING OR UPDATING";"BEFORE";"300";"DESCRIPTION";-100;"APPLICATION";"ensure the daytime is not future date";
"PROD_TEST_RESULT";"INSERTING OR UPDATING";"BEFORE";"350";"DESCRIPTION";-100;"APPLICATION";"Set STATUS to NEW if it is NULL";
"PROD_TEST_RESULT";"UPDATING";"AFTER";"400";"DESCRIPTION";-100;"APPLICATION";"Check the equality of the new/old values of DAYTIME";
"PROD_TEST_RESULT";"UPDATING";"AFTER";"500";"DESCRIPTION";-100;"APPLICATION";"Check the equality of the new/old values of VALID_FROM_DATE";
"PROD_TEST_RESULT";"UPDATING";"AFTER";"600";"DESCRIPTION";-100;"APPLICATION";"Check the equality of the new/old values of STATUS";
"PROD_TEST_RESULT";"UPDATING";"AFTER";"700";"DESCRIPTION";-100;"APPLICATION";"Check the equality of the new/old values of USE_CALC";
"PROD_TEST_RESULT";"UPDATING";"AFTER";"900";"DESCRIPTION";-100;"APPLICATION";"Check the equality of the new/old values of END_DATE";
"PROD_TEST_RESULT";"UPDATING";"AFTER";"1000";"DESCRIPTION";-100;"APPLICATION";"Check the equality of the new/old values of DURATION";
"PROD_TEST_RESULT";"UPDATING";"AFTER";"1100";"DESCRIPTION";-100;"APPLICATION";"Update record status for all related result tables";
"PROD_TEST_RESULT_SINGLE";"UPDATING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"Update record status for all related result tables";
"PUMP";"UPDATING";"AFTER";"3000";"DESCRIPTION";-100;"APPLICATION";"Update EQPM_EVENT_STATUS whenever DATA_CLASS_X field changes";
"PWEL_PERIOD_STATUS";"DELETING";"BEFORE";"600";"DESCRIPTION";-100;"APPLICATION";"Check last previous record is not LT_CLOSED and next production day is start production before deletion allowed";
"PWEL_PERIOD_STATUS";"INSERTING";"BEFORE";"300";"DESCRIPTION";-100;"APPLICATION";"Check for active well status = CLOSED_LT";
"PWEL_PERIOD_STATUS";"INSERTING";"BEFORE";"500";"DESCRIPTION";-100;"APPLICATION";"Check the daytime is start of production day if the last previous record is LT_CLOSED";
"PWEL_PERIOD_STATUS";"UPDATING";"BEFORE";"400";"DESCRIPTION";-100;"APPLICATION";"Check for active well status = CLOSED_LT";
"PWEL_RESULT";"DELETING";"AFTER";"700";"DESCRIPTION";-100;"APPLICATION";"Delete EQPM_RESULT";
"PWEL_RESULT";"DELETING";"AFTER";"1000";"DESCRIPTION";-100;"APPLICATION";"Delete PTST_RESULT";
"PWEL_RESULT";"INSERTING";"AFTER";"800";"DESCRIPTION";-100;"APPLICATION";"Set Primary_ind and Flowing_ind";
"PWEL_RESULT";"INSERTING";"AFTER";"900";"DESCRIPTION";-100;"APPLICATION";"Insert EQPM_RESULT";
"PWEL_RESULT";"INSERTING";"AFTER";"1400";"DESCRIPTION";-100;"APPLICATION";"To assign value to OVERRIDE_OIL_MTR_FACTOR and OVERRIDE_WAT_MTR_FACTOR";
"PWEL_RESULT";"INSERTING";"BEFORE";"250";"DESCRIPTION";-100;"APPLICATION";"Set result_no";
"PWEL_RESULT";"INSERTING";"BEFORE";"360";"DESCRIPTION";-100;"APPLICATION";"Check Active Well Status is not CLOSED_LT";
"PWEL_RESULT";"INSERTING";"BEFORE";"1500";"DESCRIPTION";-100;"APPLICATION";"To assign selected test device from well if test device is not selected on screen.";
"PWEL_RESULT";"INSERTING OR UPDATING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"Set production day";
"PWEL_RESULT";"INSERTING OR UPDATING";"AFTER";"1300";"DESCRIPTION";-100;"APPLICATION";"Set Rate Source=MANUAL";
"PWEL_RESULT";"INSERTING OR UPDATING";"BEFORE";"200";"DESCRIPTION";-100;"APPLICATION";"Set STATUS to NEW if it is NULL";
"PWEL_RESULT";"INSERTING OR UPDATING";"BEFORE";"350";"DESCRIPTION";-100;"APPLICATION";"Check VALID_FROM_DATE is after object start date ";
"PWEL_RESULT";"UPDATING";"AFTER";"300";"DESCRIPTION";-100;"APPLICATION";"Check the equality of the new/old values of DAYTIME";
"PWEL_RESULT";"UPDATING";"AFTER";"400";"DESCRIPTION";-100;"APPLICATION";"Check the equality of the new/old values of VALID_FROM_DATE";
"PWEL_RESULT";"UPDATING";"AFTER";"500";"DESCRIPTION";-100;"APPLICATION";"Check the equality of the new/old values of STATUS";
"PWEL_RESULT";"UPDATING";"AFTER";"600";"DESCRIPTION";-100;"APPLICATION";"Check the equality of the new/old values of USE_CALC";
"PWEL_RESULT";"UPDATING";"AFTER";"1100";"DESCRIPTION";-100;"APPLICATION";"Check the equality of the new/old values of END_DATE";
"PWEL_RESULT";"UPDATING";"AFTER";"1200";"DESCRIPTION";-100;"APPLICATION";"Check the equality of the new/old values of DURATION";
"PWEL_RESULT_1";"INSERTING";"AFTER";"200";"DESCRIPTION";-100;"APPLICATION";"Sync to pwel_result";
"PWEL_RESULT_1";"INSERTING OR UPDATING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"Set production day";
"PWEL_RESULT_2";"INSERTING";"AFTER";"200";"DESCRIPTION";-100;"APPLICATION";"Sync to pwel_result";
"PWEL_RESULT_2";"INSERTING OR UPDATING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"Set production day";
"PWEL_RESULT_3";"INSERTING";"AFTER";"200";"DESCRIPTION";-100;"APPLICATION";"Sync to pwel_result";
"PWEL_RESULT_3";"INSERTING OR UPDATING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"Set production day";
"REBOILER";"UPDATING";"AFTER";"3000";"DESCRIPTION";-100;"APPLICATION";"Update EQPM_EVENT_STATUS whenever DATA_CLASS_X field changes";
"RECIPIENT";"INSERTING";"AFTER";"2000";"DESCRIPTION";-100;"APPLICATION";"Copy Id";
"REPORT_DEFINITION";"DELETING";"BEFORE";"3000";"DESCRIPTION";-100;"APPLICATION";"Deletes parameters on this definition given by the report template";
"REPORT_DEFINITION";"INSERTING";"AFTER";"3100";"DESCRIPTION";-100;"APPLICATION";"Insert parameters on this definition given by the report template";
"REPORT_RUNABLE";"DELETING";"BEFORE";"3100";"DESCRIPTION";-100;"APPLICATION";"Deletes report runable parameters for this REPORT_RUNABLE_NO";
"REPORT_RUNABLE";"INSERTING";"AFTER";"3000";"DESCRIPTION";-100;"APPLICATION";"Inserts all parameters in report definition that has no value";
"REPORT_TEMPLATE";"DELETING";"BEFORE";"3100";"DESCRIPTION";-100;"APPLICATION";"Deletes system parameters based upon REPORT_SYSTEM_CODE";
"REPORT_TEMPLATE";"INSERTING";"AFTER";"3000";"DESCRIPTION";-100;"APPLICATION";"Inserts system parameters based upon REPORT_SYSTEM_CODE";
"REPORT_TEMPLATE_PARAM";"DELETING";"AFTER";"3200";"DESCRIPTION";-100;"APPLICATION";"Deletes parameter in report definition";
"REPORT_TEMPLATE_PARAM";"INSERTING";"AFTER";"3000";"DESCRIPTION";-100;"APPLICATION";"Insert parameter in report definition";
"REPORT_TEMPLATE_PARAM";"UPDATING";"AFTER";"3100";"DESCRIPTION";-100;"APPLICATION";"Updates parameter in report definition";
"REVERSE_OSMOSIS_UNIT";"UPDATING";"AFTER";"3000";"DESCRIPTION";-100;"APPLICATION";"Update EQPM_EVENT_STATUS whenever DATA_CLASS_X field changes";
"SCTR_ACC_DAY_CPY_STATUS";"INSERTING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Time Span is DAY when inserting on this class";
"SCTR_ACC_DAY_EVENT";"INSERTING";"BEFORE";"1000";"DESCRIPTION";-100;"APPLICATION";"Time Span is DAY when inserting on this class";
"SCTR_ACC_DAY_EVENT";"INSERTING OR UPDATING";"AFTER";"1200";"DESCRIPTION";-100;"APPLICATION";"If the accepted_ind is set to Y the record_status should be set to A. If the accepted_ind is set to N or NULL the record_status should be set to P";
"SCTR_ACC_DAY_EVENT";"INSERTING OR UPDATING";"BEFORE";"1100";"DESCRIPTION";-100;"APPLICATION";"If the is_mandatory is set to Y for the event type in CNTR_ACC_EVENT_TYPE  and the qty is empty an error should be returned.";
"SCTR_ACC_DAY_PC_CPY";"INSERTING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Time Span is DAY when inserting on this class";
"SCTR_ACC_DAY_PC_STATUS";"INSERTING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Time Span is DAY when inserting on this class";
"SCTR_ACC_DAY_STATUS";"INSERTING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Time Span is DAY when inserting on this class";
"SCTR_ACC_MTH_CPY_STATUS";"INSERTING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Time Span is MTH when inserting on this class";
"SCTR_ACC_MTH_EVENT";"INSERTING";"BEFORE";"1000";"DESCRIPTION";-100;"APPLICATION";"Time Span is MONTH when inserting on this class";
"SCTR_ACC_MTH_EVENT";"INSERTING OR UPDATING";"AFTER";"1200";"DESCRIPTION";-100;"APPLICATION";"If the accepted_ind is set to Y the record_status should be set to A. If the accepted_ind is set to N or NULL the record_status should be set to P";
"SCTR_ACC_MTH_EVENT";"INSERTING OR UPDATING";"BEFORE";"1100";"DESCRIPTION";-100;"APPLICATION";"If the is_mandatory is set to Y for the event type in CNTR_ACC_EVENT_TYPE  and the qty is empty an error should be returned.";
"SCTR_ACC_MTH_PC_CPY";"INSERTING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Time Span is MTH when inserting on this class";
"SCTR_ACC_MTH_PC_STATUS";"INSERTING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Time Span is DAY when inserting on this class";
"SCTR_ACC_MTH_STATUS";"INSERTING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Time Span is MTH when inserting on this class";
"SCTR_ACC_YR_CPY_STATUS";"INSERTING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Time Span is YR when inserting on this class";
"SCTR_ACC_YR_EVENT";"INSERTING";"BEFORE";"1000";"DESCRIPTION";-100;"APPLICATION";"Time Span is YR when inserting on this class";
"SCTR_ACC_YR_EVENT";"INSERTING OR UPDATING";"AFTER";"1200";"DESCRIPTION";-100;"APPLICATION";"If the accepted_ind is set to Y the record_status should be set to A. If the accepted_ind is set to N or NULL the record_status should be set to P";
"SCTR_ACC_YR_EVENT";"INSERTING OR UPDATING";"BEFORE";"1100";"DESCRIPTION";-100;"APPLICATION";"If the is_mandatory is set to Y for the event type in CNTR_ACC_EVENT_TYPE  and the qty is empty an error should be returned.";
"SCTR_ACC_YR_PC_CPY";"INSERTING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Time Span is YR when inserting on this class";
"SCTR_ACC_YR_PC_STATUS";"INSERTING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Time Span is DAY when inserting on this class";
"SCTR_ACC_YR_STATUS";"INSERTING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Time Span is YR when inserting on this class";
"SCTR_PRICE_ELEMENT";"DELETING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"validate deletion of a record";
"SO2_SCRUBBER";"UPDATING";"AFTER";"3000";"DESCRIPTION";-100;"APPLICATION";"Update EQPM_EVENT_STATUS whenever DATA_CLASS_X field changes";
"SPLITIGATOR";"UPDATING";"AFTER";"3000";"DESCRIPTION";-100;"APPLICATION";"Update EQPM_EVENT_STATUS whenever DATA_CLASS_X field changes";
"SPLIT_KEY";"INSERTING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"Generate code";
"STABILIZER";"UPDATING";"AFTER";"3000";"DESCRIPTION";-100;"APPLICATION";"Update EQPM_EVENT_STATUS whenever DATA_CLASS_X field changes";
"STEAM_GENERATOR";"UPDATING";"AFTER";"3000";"DESCRIPTION";-100;"APPLICATION";"Update EQPM_EVENT_STATUS whenever DATA_CLASS_X field changes";
"STIM_MTH_CARGO_VAL_INS";"UPDATING";"AFTER";"600";"DESCRIPTION";-100;"APPLICATION";"Replacing temporary alloc_no with correct one.";
"STIM_MTH_CARGO_VAL_INS";"UPDATING";"BEFORE";"500";"DESCRIPTION";-100;"APPLICATION";"Setting doc date";
"STIM_MTH_CONT_VAL_INS";"INSERTING OR UPDATING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Truncating daytime to first of month";
"STORAGE_LIFT_NOM_ALLOC";"INSERTING";"AFTER";"200";"DESCRIPTION";-100;"APPLICATION";"Set additional values typically set in nominaiton entry";
"STORAGE_LIFT_NOM_ALLOC";"INSERTING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Sets the parcel no on insert";
"STORAGE_OFFICIAL_RECEIPT";"INSERTING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"Aggregates value to stor_day_official";
"STORAGE_OFFICIAL_RECEIPT";"UPDATING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"Aggregates value to stor_day_official";
"STOR_DAY_EXPORT_STATUS";"INSERTING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Set time span to DAY";
"STOR_DAY_PC_LIFT_ALLOC";"INSERTING OR UPDATING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"inserts qty to revenue if interface is active";
"STOR_DAY_PLAN_RECEIPT";"INSERTING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"Aggregates to stor_day_forecast. Updateds lifting account forecast if entitlement accounts";
"STOR_DAY_PLAN_RECEIPT";"UPDATING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"Aggregates to stor_day_forecast. Updateds lifting account forecast if entitlement accounts";
"STOR_MTH_EXPORT_STATUS";"INSERTING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Set time span to MTH";
"STREAM";"INSERTING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"Generate code";
"STREAM";"INSERTING OR UPDATING";"AFTER";"200";"DESCRIPTION";-100;"APPLICATION";"Generate name";
"STREAM";"INSERTING OR UPDATING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"validate reference analysis stream";
"STREAM_ITEM";"INSERTING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"Generate code";
"STREAM_ITEM_COLLECTION";"INSERTING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"Generate code";
"STRM_DAY_NR_EQPM";"DELETING";"BEFORE";"700";"DESCRIPTION";-100;"APPLICATION";"Delete child records which are Wells connected to the equipment";
"STRM_DAY_NR_EQPM";"INSERTING";"AFTER";"500";"DESCRIPTION";-100;"APPLICATION";"Create child records";
"STRM_DAY_NR_EQPM";"INSERTING";"AFTER";"600";"DESCRIPTION";-100;"APPLICATION";"Inserts Wells from Object Group Connection that is connected to the Eqpm";
"STRM_DAY_NR_EQPM";"INSERTING";"BEFORE";"300";"DESCRIPTION";-100;"APPLICATION";"Check validity of Start Daytime";
"STRM_DAY_NR_EQPM";"INSERTING OR UPDATING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Check validity of End Daytime";
"STRM_DAY_NR_EQPM";"INSERTING OR UPDATING";"BEFORE";"400";"DESCRIPTION";-100;"APPLICATION";"Check validity of End Daytime against Production day";
"STRM_DAY_NR_EQPM";"UPDATING";"AFTER";"200";"DESCRIPTION";-100;"APPLICATION";"update end_daytime for all records where (object_id, daytime, asset_id, start_daytime) are the same as for the record being updated.";
"STRM_DAY_NR_EQPM_WELL";"INSERTING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"Create child records";
"STRM_DAY_NR_OTHER";"INSERTING";"AFTER";"500";"DESCRIPTION";-100;"APPLICATION";"Create child records";
"STRM_DAY_NR_OTHER";"INSERTING";"BEFORE";"300";"DESCRIPTION";-100;"APPLICATION";"Check validity of Start Daytime";
"STRM_DAY_NR_OTHER";"INSERTING OR UPDATING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Check validity of End Daytime";
"STRM_DAY_NR_OTHER";"INSERTING OR UPDATING";"BEFORE";"400";"DESCRIPTION";-100;"APPLICATION";"Check validity of End Daytime against Production day";
"STRM_DAY_NR_OTHER";"UPDATING";"AFTER";"200";"DESCRIPTION";-100;"APPLICATION";"update end_daytime for all records where (object_id, daytime, asset_id, start_daytime) are the same as for the record being updated.";
"STRM_DAY_NR_WELL";"INSERTING";"AFTER";"500";"DESCRIPTION";-100;"APPLICATION";"Create child records";
"STRM_DAY_NR_WELL";"INSERTING";"BEFORE";"300";"DESCRIPTION";-100;"APPLICATION";"Check validity of Start Daytime";
"STRM_DAY_NR_WELL";"INSERTING OR UPDATING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Check validity of End Daytime";
"STRM_DAY_NR_WELL";"INSERTING OR UPDATING";"BEFORE";"400";"DESCRIPTION";-100;"APPLICATION";"Check validity of End Daytime against Production day";
"STRM_DAY_NR_WELL";"UPDATING";"AFTER";"200";"DESCRIPTION";-100;"APPLICATION";"update end_daytime for all records where (object_id, daytime, asset_id, start_daytime) are the same as for the record being updated.";
"STRM_DAY_VENTFLARE";"UPDATING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"Set Source=MANUAL";
"STRM_DPT_CONVERSION";"INSERTING OR UPDATING OR DELETING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Lock Checking";
"STRM_GAS_ANALYSIS";"INSERTING";"BEFORE";"200";"DESCRIPTION";-100;"APPLICATION";"Set production day";
"STRM_GAS_ANALYSIS";"INSERTING OR UPDATING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Set object class name";
"STRM_GAS_ANALYSIS_EVENT";"DELETING";"BEFORE";"3200";"DESCRIPTION";-100;"APPLICATION";"Deleting component set before deleting period analysis";
"STRM_LNG_ANALYSIS";"INSERTING";"BEFORE";"200";"DESCRIPTION";-100;"APPLICATION";"Set production day";
"STRM_LNG_ANALYSIS";"INSERTING OR UPDATING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Set object class name and phase";
"STRM_OIL_ANALYSIS";"INSERTING";"BEFORE";"200";"DESCRIPTION";-100;"APPLICATION";"Set production day";
"STRM_OIL_ANALYSIS";"INSERTING OR UPDATING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Set object class name and phase";
"STRM_OIL_EXPORT_EVENT";"INSERTING OR UPDATING";"AFTER";"3000";"DESCRIPTION";-100;"APPLICATION";"Update Grs_mass by given object_id";
"STRM_PT_CONVERSION";"INSERTING OR UPDATING OR DELETING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Lock Checking";
"STRM_SAMPLE_ANALYSIS";"INSERTING";"BEFORE";"200";"DESCRIPTION";-100;"APPLICATION";"Set production day";
"STRM_SAMPLE_ANALYSIS";"INSERTING OR UPDATING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Set object class name";
"STRM_TBP_ANALYSIS";"INSERTING";"BEFORE";"200";"DESCRIPTION";-100;"APPLICATION";"Set production day";
"STRM_TBP_ANALYSIS";"INSERTING OR UPDATING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Set object class name";
"STRM_TRUCK_UNLOAD_MASS";"INSERTING";"BEFORE";"3300";"DESCRIPTION";-100;"APPLICATION";"Calculating net vol";
"STRM_TRUCK_UNLOAD_MASS";"INSERTING";"BEFORE";"3400";"DESCRIPTION";-100;"APPLICATION";"Calculationg water vol";
"STRM_TRUCK_UNLOAD_MASS";"INSERTING OR UPDATING";"BEFORE";"3000";"DESCRIPTION";-100;"APPLICATION";"Calculating grs mass";
"STRM_TRUCK_UNLOAD_MASS";"UPDATING";"BEFORE";"3100";"DESCRIPTION";-100;"APPLICATION";"Calculating net vol";
"STRM_TRUCK_UNLOAD_MASS";"UPDATING";"BEFORE";"3200";"DESCRIPTION";-100;"APPLICATION";"Calculationg water vol";
"STRM_TRUCK_UNLOAD_VOL";"INSERTING";"BEFORE";"3200";"DESCRIPTION";-100;"APPLICATION";"Calculationg net vol";
"STRM_TRUCK_UNLOAD_VOL";"INSERTING";"BEFORE";"3300";"DESCRIPTION";-100;"APPLICATION";"Calculationg water";
"STRM_TRUCK_UNLOAD_VOL";"UPDATING";"BEFORE";"3000";"DESCRIPTION";-100;"APPLICATION";"Calculationg net vol";
"STRM_TRUCK_UNLOAD_VOL";"UPDATING";"BEFORE";"3100";"DESCRIPTION";-100;"APPLICATION";"Calculationg water";
"STRM_WELL_CONN";"INSERTING OR UPDATING";"BEFORE";"1400";"DESCRIPTION";-100;"APPLICATION";"Check the Event Overlaps";
"TANK_DAY_DIP_STATUS";"INSERTING OR UPDATING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Automatically set the measurement event type if it is null";
"TANK_DAY_INV_MASS";"INSERTING OR UPDATING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Automatically set the measurement event type to day closing if it is null";
"TANK_DAY_INV_OIL";"INSERTING OR UPDATING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Automatically set the measurement event type to day closing if it is null";
"TANK_DAY_INV_SINGLE_DIP";"INSERTING OR UPDATING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Automatically set the  measurement event type to day_closing if it is null";
"TANK_MTH_INV_OIL";"INSERTING OR UPDATING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Automatically set the measurement event type to day closing if it is null";
"TANK_OIL_BATCH_EXP";"INSERTING OR UPDATING";"AFTER";"1100";"DESCRIPTION";-100;"APPLICATION";"Set default STRM_EVENT.TANK_OBJECT_ID when stream has only 1 tank";
"TANK_STRAPPING";"DELETING";"AFTER";"300";"DESCRIPTION";-100;"APPLICATION";"Set previous day record with current daytime";
"TANK_STRAPPING";"INSERTING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"Set previous day record with current daytime";
"TANK_STRAPPING";"UPDATING";"AFTER";"200";"DESCRIPTION";-100;"APPLICATION";"Set previous day record with current daytime";
"TANK_USAGE";"INSERTING OR UPDATING";"BEFORE";"3000";"DESCRIPTION";-100;"APPLICATION";"Checks Connection end date against storage end_date and tank end_date";
"TASK_PROCESS";"INSERTING OR UPDATING OR DELETING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Not allowed to update system processes";
"TCTR_SUB_DAY_DP_IN_NOM";"UPDATING OR INSERTING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"Aggregate subdaily to daily";
"TCTR_SUB_DAY_DP_IN_NOM";"UPDATING OR INSERTING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Sets the adjusted qty based on the requested and the adjustment";
"TCTR_SUB_DAY_DP_OUT_NOM";"UPDATING OR INSERTING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"Aggregate subdaily to daily";
"TDEV_RESULT_1";"INSERTING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"Sync to pwel_result";
"TDEV_RESULT_2";"INSERTING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"Sync to pwel_result";
"TDEV_RESULT_3";"INSERTING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"Sync to pwel_result";
"TEST_DEVICE";"UPDATING";"AFTER";"3000";"DESCRIPTION";-100;"APPLICATION";"Update EQPM_EVENT_STATUS whenever DATA_CLASS_X field changes";
"TEST_DEVICE_TEST_DEF";"DELETING";"BEFORE";"2000";"DESCRIPTION";-100;"APPLICATION";"To delete plot parameters in ptst_define";
"TEST_DEVICE_TEST_DEF";"INSERTING";"AFTER";"1000";"DESCRIPTION";-100;"APPLICATION";"To insert plot parameters of the test device in ptst_graph_define table";
"TEST_RESULT_TREND";"INSERTING OR UPDATING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"Remove current trend curve";
"TEST_TREND_CURVE";"INSERTING";"BEFORE";"300";"DESCRIPTION";-100;"APPLICATION";"Set trend segment sequence no";
"TEST_TREND_CURVE";"INSERTING OR UPDATING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Set C0_UNIT";
"TEST_TREND_CURVE";"INSERTING OR UPDATING";"BEFORE";"200";"DESCRIPTION";-100;"APPLICATION";"Set C1_UNIT";
"TRANSACTION_TEMPLATE";"INSERTING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"Add SK for Transaction template";
"TRANSACTION_TEMPLATE";"UPDATING";"AFTER";"110";"DESCRIPTION";-100;"APPLICATION";"Update SK for Transaction template";
"T_BASIS_OBJECT_PARTITION";"INSERTING OR UPDATING";"AFTER";"200";"DESCRIPTION";-100;"APPLICATION";"Only one partition for an attribute can have ALL operator";
"T_BASIS_OBJECT_PARTITION";"INSERTING OR UPDATING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Not allowed to have objects when operator is ALL";
"UTILITY_EQPM";"UPDATING";"AFTER";"3000";"DESCRIPTION";-100;"APPLICATION";"Update EQPM_EVENT_STATUS whenever DATA_CLASS_X field changes";
"VAT_CODE";"INSERTING OR UPDATING";"AFTER";"100";"DESCRIPTION";-100;"APPLICATION";"Generate code";
"WATER_TREATMENT_UNIT";"UPDATING";"AFTER";"3000";"DESCRIPTION";-100;"APPLICATION";"Update EQPM_EVENT_STATUS whenever DATA_CLASS_X field changes";
"WELL";"UPDATING";"BEFORE";"3000";"DESCRIPTION";-100;"APPLICATION";"Update end date on child objects";
"WELL_EQPM_LOW";"DELETING";"BEFORE";"500";"DESCRIPTION";-100;"APPLICATION";"Check if child events exist for this parent.";
"WELL_EQPM_LOW";"INSERTING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Setting downtime category";
"WELL_EQPM_LOW";"INSERTING";"BEFORE";"200";"DESCRIPTION";-100;"APPLICATION";"Setting downtime class type";
"WELL_EQPM_LOW";"INSERTING";"BEFORE";"800";"DESCRIPTION";-100;"APPLICATION";"Check the well where active_status<>OPEN then only raise error";
"WELL_EQPM_LOW";"INSERTING OR UPDATING";"AFTER";"400";"DESCRIPTION";-100;"APPLICATION";"Setting end date fo child records if it's null";
"WELL_EQPM_LOW";"INSERTING OR UPDATING";"AFTER";"900";"DESCRIPTION";-100;"APPLICATION";"Assign the childs reason code to be same as parents reason code.";
"WELL_EQPM_LOW";"INSERTING OR UPDATING";"AFTER";"1100";"DESCRIPTION";-100;"APPLICATION";"Start Date or End Date should not exceed more than one day of system date.";
"WELL_EQPM_LOW";"INSERTING OR UPDATING";"AFTER";"1200";"DESCRIPTION";-100;"APPLICATION";"Update loss rate";
"WELL_EQPM_LOW";"UPDATING";"BEFORE";"1000";"DESCRIPTION";-100;"APPLICATION";"Check the well where active_status<>OPEN then only raise error when updating the end date";
"WELL_EQPM_LOW_CHILD";"INSERTING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Setting downtime category";
"WELL_EQPM_LOW_CHILD";"INSERTING";"BEFORE";"200";"DESCRIPTION";-100;"APPLICATION";"Setting downtime class type";
"WELL_EQPM_LOW_CHILD";"INSERTING";"BEFORE";"300";"DESCRIPTION";-100;"APPLICATION";"Setting Object Type";
"WELL_EQPM_LOW_CHILD";"INSERTING";"BEFORE";"400";"DESCRIPTION";-100;"APPLICATION";"Setting downtime type ";
"WELL_EQPM_LOW_CHILD";"INSERTING";"BEFORE";"700";"DESCRIPTION";-100;"APPLICATION";"Check period validity against parent time period";
"WELL_EQPM_LOW_CHILD";"INSERTING";"BEFORE";"800";"DESCRIPTION";-100;"APPLICATION";"Check the well where active_status<>OPEN then only raise error";
"WELL_EQPM_LOW_CHILD";"INSERTING OR UPDATING";"AFTER";"1000";"DESCRIPTION";-100;"APPLICATION";"Assign the childs reason code to be same as parents reason code.";
"WELL_EQPM_LOW_CHILD";"INSERTING OR UPDATING";"AFTER";"1200";"DESCRIPTION";-100;"APPLICATION";"Check End Date in child must be equal to or less than End Date in the parent records.";
"WELL_EQPM_LOW_CHILD";"INSERTING OR UPDATING";"AFTER";"1300";"DESCRIPTION";-100;"APPLICATION";"Update loss rate";
"WELL_EQPM_LOW_CHILD";"UPDATING";"BEFORE";"1100";"DESCRIPTION";-100;"APPLICATION";"Check the well where active_status<>OPEN then only raise error when updating the end date";
"WELL_EQPM_MASTER_EVENT";"INSERTING";"BEFORE";"10";"DESCRIPTION";-100;"APPLICATION";"Set EVENT_ID";
"WELL_EQPM_MASTER_EVENT";"UPDATING('EVENT_TYPE')";"BEFORE";"20";"DESCRIPTION";-100;"APPLICATION";"Reset EVENT_ID";
"WELL_EQPM_OFF";"DELETING";"BEFORE";"500";"DESCRIPTION";-100;"APPLICATION";"Delete if child events exist for this parent.";
"WELL_EQPM_OFF";"INSERTING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Setting downtime category";
"WELL_EQPM_OFF";"INSERTING";"BEFORE";"200";"DESCRIPTION";-100;"APPLICATION";"Setting downtime class type";
"WELL_EQPM_OFF";"INSERTING";"BEFORE";"800";"DESCRIPTION";-100;"APPLICATION";"Check the well where active_status<>OPEN then only raise error";
"WELL_EQPM_OFF";"INSERTING OR UPDATING";"AFTER";"900";"DESCRIPTION";-100;"APPLICATION";"Assign the childs reason code to be same as parents reason code.";
"WELL_EQPM_OFF";"INSERTING OR UPDATING";"AFTER";"1100";"DESCRIPTION";-100;"APPLICATION";"Start Date or End Date should not exceed more than one day of system date.";
"WELL_EQPM_OFF";"INSERTING OR UPDATING";"AFTER";"1200";"DESCRIPTION";-100;"APPLICATION";"Update loss rate";
"WELL_EQPM_OFF";"INSERTING OR UPDATING";"BEFORE";"600";"DESCRIPTION";-100;"APPLICATION";"Check if overlapping events exist.";
"WELL_EQPM_OFF";"UPDATING";"AFTER";"400";"DESCRIPTION";-100;"APPLICATION";"Setting end date fo child records if it's null";
"WELL_EQPM_OFF";"UPDATING";"BEFORE";"1000";"DESCRIPTION";-100;"APPLICATION";"Check the well where active_status<>OPEN then only raise error when updating end date";
"WELL_EQPM_OFF_BY_WELL";"INSERTING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Setting downtime category";
"WELL_EQPM_OFF_BY_WELL";"INSERTING";"BEFORE";"200";"DESCRIPTION";-100;"APPLICATION";"Setting downtime class type";
"WELL_EQPM_OFF_BY_WELL";"INSERTING";"BEFORE";"800";"DESCRIPTION";-100;"APPLICATION";"Check the well where active_status<>OPEN then only raise error";
"WELL_EQPM_OFF_BY_WELL";"INSERTING OR UPDATING";"AFTER";"1000";"DESCRIPTION";-100;"APPLICATION";"Update loss rate";
"WELL_EQPM_OFF_BY_WELL";"INSERTING OR UPDATING";"BEFORE";"600";"DESCRIPTION";-100;"APPLICATION";"Check if overlapping events exist.";
"WELL_EQPM_OFF_BY_WELL";"UPDATING";"BEFORE";"900";"DESCRIPTION";-100;"APPLICATION";"Check the well where active_status<>OPEN then only raise error when updating end date";
"WELL_EQPM_OFF_CHILD";"INSERTING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Setting downtime category";
"WELL_EQPM_OFF_CHILD";"INSERTING";"BEFORE";"200";"DESCRIPTION";-100;"APPLICATION";"Setting downtime class type";
"WELL_EQPM_OFF_CHILD";"INSERTING";"BEFORE";"300";"DESCRIPTION";-100;"APPLICATION";"Setting Object Type";
"WELL_EQPM_OFF_CHILD";"INSERTING";"BEFORE";"400";"DESCRIPTION";-100;"APPLICATION";"Setting downtime type ";
"WELL_EQPM_OFF_CHILD";"INSERTING";"BEFORE";"700";"DESCRIPTION";-100;"APPLICATION";"Check period validity against parent time period";
"WELL_EQPM_OFF_CHILD";"INSERTING";"BEFORE";"800";"DESCRIPTION";-100;"APPLICATION";"Check the well where active_status<>OPEN then only raise error";
"WELL_EQPM_OFF_CHILD";"INSERTING OR UPDATING";"AFTER";"1000";"DESCRIPTION";-100;"APPLICATION";"Assign the childs reason code to be same as parents reason code.";
"WELL_EQPM_OFF_CHILD";"INSERTING OR UPDATING";"AFTER";"1200";"DESCRIPTION";-100;"APPLICATION";"Check End Date in child must be equal to or less than End Date in the parent records.";
"WELL_EQPM_OFF_CHILD";"INSERTING OR UPDATING";"AFTER";"1300";"DESCRIPTION";-100;"APPLICATION";"Update loss rate";
"WELL_EQPM_OFF_CHILD";"INSERTING OR UPDATING";"BEFORE";"600";"DESCRIPTION";-100;"APPLICATION";"Check if overlapping events exist.";
"WELL_EQPM_OFF_CHILD";"UPDATING";"BEFORE";"1100";"DESCRIPTION";-100;"APPLICATION";"Check the well where active_status<>OPEN then only raise error when updating end date";
"WELL_FORM_ION_ANALYSIS";"INSERTING";"BEFORE";"200";"DESCRIPTION";-100;"APPLICATION";"Set production day";
"WELL_FORM_ION_ANALYSIS";"INSERTING OR UPDATING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Set object class name";
"WELL_GAS_ANALYSIS";"INSERTING";"BEFORE";"200";"DESCRIPTION";-100;"APPLICATION";"Set production day";
"WELL_GAS_ANALYSIS";"INSERTING OR UPDATING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Set object class name";
"WELL_GAS_INJ_ANALYSIS";"INSERTING";"BEFORE";"200";"DESCRIPTION";-100;"APPLICATION";"Set production day";
"WELL_GAS_INJ_ANALYSIS";"INSERTING OR UPDATING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Set object class name";
"WELL_INJ_ION_ANALYSIS";"INSERTING";"BEFORE";"200";"DESCRIPTION";-100;"APPLICATION";"Set production day";
"WELL_INJ_ION_ANALYSIS";"INSERTING OR UPDATING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Set object class name";
"WELL_OIL_ANALYSIS";"INSERTING";"BEFORE";"200";"DESCRIPTION";-100;"APPLICATION";"Set production day";
"WELL_OIL_ANALYSIS";"INSERTING OR UPDATING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Set object class name";
"WELL_PROD_ION_ANALYSIS";"INSERTING";"BEFORE";"200";"DESCRIPTION";-100;"APPLICATION";"Set production day";
"WELL_PROD_ION_ANALYSIS";"INSERTING OR UPDATING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Set object class name";
"WELL_SAMPLE_ANALYSIS";"INSERTING";"BEFORE";"200";"DESCRIPTION";-100;"APPLICATION";"Set production day";
"WELL_SAMPLE_ANALYSIS";"INSERTING OR UPDATING";"BEFORE";"100";"DESCRIPTION";-100;"APPLICATION";"Set object class name";
"WELL_TEST_DEF";"DELETING";"BEFORE";"800";"DESCRIPTION";-100;"APPLICATION";"To remove active well bore interval that owns by the well";
"WELL_TEST_DEF";"DELETING";"BEFORE";"2000";"DESCRIPTION";-100;"APPLICATION";"To delete records with same object_id and test no in ptst_define";
"WELL_TEST_DEF";"INSERTING";"AFTER";"700";"DESCRIPTION";-100;"APPLICATION";"To insert active well bore interval that owns by the well";
"WELL_TEST_DEF";"INSERTING";"AFTER";"1000";"DESCRIPTION";-100;"APPLICATION";"To insert plot parameters of the well in ptst_graph_define table";
Elapsed: 00:00:00.62
