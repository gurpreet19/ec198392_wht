SET DEFINE OFF

MERGE INTO CLASS_TRIGGER_ACTN_CNFG o USING 
(
SELECT
 null APP_SPACE_CNTX, null CLASS_NAME, null DB_SQL_SYNTAX, null SORT_ORDER, null TRIGGERING_EVENT, null TRIGGER_TYPE FROM DUAL WHERE 1=0
UNION 
 SELECT 'EC_PROD', 'WELL_DEFERMENT', 'if(n_OBJECT_TYPE=''WELL'' AND (NVL(n_DAYTIME, to_date(''2100-01-01'',''yyyy-mm-dd''))<> NVL(:old.DAYTIME, to_date(''2100-01-01'',''yyyy-mm-dd'')) or NVL(n_END_DATE, to_date(''2100-01-01'',''yyyy-mm-dd''))<> NVL(:old.END_DATE, to_date(''2100-01-01'',''yyyy-mm-dd'')) or n_OBJECT_ID <> :old.OBJECT_ID or nvl(n_EVENT_TYPE,''NULL'') <> nvl(:old.EVENT_TYPE, ''NULL'') or  nvl(n_SCHEDULED, ''NULL'') <> nvl(:old.SCHEDULED, ''NULL'') or nvl(n_DEFERMENT_TYPE, ''NULL'') <> nvl(:old.DEFERMENT_TYPE, ''NULL'') or nvl(n_OIL_LOSS_MASS_RATE,-999999) <> nvl(:old.OIL_LOSS_MASS_RATE,-999999) or nvl(n_OIL_LOSS_MASS,-999999) <> nvl(:old.OIL_LOSS_MASS,-999999) or nvl(n_GAS_LOSS_MASS_RATE,-999999) <> nvl(:old.GAS_LOSS_MASS_RATE,-999999) or nvl(n_GAS_LOSS_MASS,-999999) <> nvl(:old.GAS_LOSS_MASS,-999999) or nvl(n_COND_LOSS_MASS_RATE,-999999) <> nvl(:old.COND_LOSS_MASS_RATE,-999999) or nvl(n_COND_LOSS_MASS,-999999) <> nvl(:old.COND_LOSS_MASS,-999999) or nvl(n_WATER_LOSS_MASS_RATE,-999999) <> nvl(:old.WATER_LOSS_MASS_RATE,-999999) or nvl(n_WATER_LOSS_MASS,-999999) <> nvl(:old.WATER_LOSS_MASS,-999999))) then  EcDp_Deferment.insertTempWellDefermntAlloc(n_event_no, n_parent_event_no, n_daytime, :old.DAYTIME, n_end_date, :old.END_DATE, ''U'', nvl(n_last_updated_by, n_created_by), nvl(n_last_updated_date, n_created_date)); end if;', '1450', 'UPDATING', 'AFTER' FROM DUAL 
UNION 
 SELECT 'EC_PROD', 'WELL_DEFERMENT', 'if(n_OBJECT_TYPE=''WELL'' AND (NVL(n_DAYTIME, to_date(''2100-01-01'',''yyyy-mm-dd''))<> NVL(:old.DAYTIME, to_date(''2100-01-01'',''yyyy-mm-dd'')) or NVL(n_END_DATE, to_date(''2100-01-01'',''yyyy-mm-dd''))<> NVL(:old.END_DATE, to_date(''2100-01-01'',''yyyy-mm-dd'')) or n_OBJECT_ID <> :old.OBJECT_ID or nvl(n_EVENT_TYPE,''NULL'') <> nvl(:old.EVENT_TYPE, ''NULL'') or  nvl(n_SCHEDULED, ''NULL'') <> nvl(:old.SCHEDULED, ''NULL'') or nvl(n_DEFERMENT_TYPE, ''NULL'') <> nvl(:old.DEFERMENT_TYPE, ''NULL'') or nvl(n_OIL_LOSS_RATE,-999999) <> nvl(:old.OIL_LOSS_RATE,-999999) or nvl(n_OIL_LOSS_VOLUME,-999999) <> nvl(:old.OIL_LOSS_VOLUME,-999999) or nvl(n_GAS_LOSS_RATE,-999999) <> nvl(:old.GAS_LOSS_RATE,-999999) or nvl(n_GAS_LOSS_VOLUME,-999999) <> nvl(:old.GAS_LOSS_VOLUME,-999999) or nvl(n_COND_LOSS_RATE,-999999) <> nvl(:old.COND_LOSS_RATE,-999999) or nvl(n_COND_LOSS_VOLUME,-999999) <> nvl(:old.COND_LOSS_VOLUME,-999999) or nvl(n_WATER_LOSS_RATE,-999999) <> nvl(:old.WATER_LOSS_RATE,-999999) or nvl(n_WATER_LOSS_VOLUME,-999999) <> nvl(:old.WATER_LOSS_VOLUME,-999999) or nvl(n_DILUENT_LOSS_RATE,-999999) <> nvl(:old.DILUENT_LOSS_RATE,-999999) or nvl(n_DILUENT_LOSS_VOLUME,-999999) <> nvl(:old.DILUENT_LOSS_VOLUME,-999999) or nvl(n_GAS_LIFT_LOSS_RATE,-999999) <> nvl(:old.GAS_LIFT_LOSS_RATE,-999999) or nvl(n_GAS_LIFT_LOSS_VOLUME,-999999) <> nvl(:old.GAS_LIFT_LOSS_VOLUME,-999999) or nvl(n_WATER_INJ_LOSS_RATE,-999999) <> nvl(:old.WATER_INJ_LOSS_RATE,-999999) or nvl(n_WATER_INJ_LOSS_VOLUME,-999999) <> nvl(:old.WATER_INJ_LOSS_VOLUME,-999999) or nvl(n_STEAM_INJ_LOSS_RATE,-999999) <> nvl(:old.STEAM_INJ_LOSS_RATE,-999999) '||
 'or nvl(n_STEAM_INJ_LOSS_VOLUME,-999999) <> nvl(:old.STEAM_INJ_LOSS_VOLUME,-999999) or nvl(n_GAS_INJ_LOSS_RATE,-999999) <> nvl(:old.GAS_INJ_LOSS_RATE,-999999) or nvl(n_GAS_INJ_LOSS_VOLUME,-999999) <> nvl(:old.GAS_INJ_LOSS_VOLUME,-999999) or nvl(n_OIL_LOSS_MASS_RATE,-999999) <> nvl(:old.OIL_LOSS_MASS_RATE,-999999) or nvl(n_OIL_LOSS_MASS,-999999) <> nvl(:old.OIL_LOSS_MASS,-999999) or nvl(n_GAS_LOSS_MASS_RATE,-999999) <> nvl(:old.GAS_LOSS_MASS_RATE,-999999) or nvl(n_GAS_LOSS_MASS,-999999) <> nvl(:old.GAS_LOSS_MASS,-999999) or nvl(n_COND_LOSS_MASS_RATE,-999999) <> nvl(:old.COND_LOSS_MASS_RATE,-999999) or nvl(n_COND_LOSS_MASS,-999999) <> nvl(:old.COND_LOSS_MASS,-999999) or nvl(n_WATER_LOSS_MASS_RATE,-999999) <> nvl(:old.WATER_LOSS_MASS_RATE,-999999) or nvl(n_WATER_LOSS_MASS,-999999) <> nvl(:old.WATER_LOSS_MASS,-999999))) then  EcDp_Deferment.insertTempWellDefermntAlloc(n_event_no, n_parent_event_no, n_daytime, :old.DAYTIME, n_end_date, :old.END_DATE, ''U'', nvl(n_last_updated_by, n_created_by), nvl(n_last_updated_date, n_created_date)); end if;', '1430', 'UPDATING', 'AFTER' FROM DUAL 
UNION 
 SELECT 'EC_PROD', 'WELL_DEFERMENT', 'if(n_OBJECT_TYPE=''WELL'' AND (NVL(n_DAYTIME, to_date(''2100-01-01'',''yyyy-mm-dd''))<> NVL(:old.DAYTIME, to_date(''2100-01-01'',''yyyy-mm-dd'')) or NVL(n_END_DATE, to_date(''2100-01-01'',''yyyy-mm-dd''))<> NVL(:old.END_DATE, to_date(''2100-01-01'',''yyyy-mm-dd'')) or n_OBJECT_ID <> :old.OBJECT_ID or nvl(n_EVENT_TYPE,''NULL'') <> nvl(:old.EVENT_TYPE, ''NULL'') or  nvl(n_SCHEDULED, ''NULL'') <> nvl(:old.SCHEDULED, ''NULL'') or nvl(n_DEFERMENT_TYPE, ''NULL'') <> nvl(:old.DEFERMENT_TYPE, ''NULL'') or nvl(n_OIL_LOSS_RATE,-999999) <> nvl(:old.OIL_LOSS_RATE,-999999) or nvl(n_OIL_LOSS_VOLUME,-999999) <> nvl(:old.OIL_LOSS_VOLUME,-999999) or nvl(n_GAS_LOSS_RATE,-999999) <> nvl(:old.GAS_LOSS_RATE,-999999) or nvl(n_GAS_LOSS_VOLUME,-999999) <> nvl(:old.GAS_LOSS_VOLUME,-999999) or nvl(n_COND_LOSS_RATE,-999999) <> nvl(:old.COND_LOSS_RATE,-999999) or nvl(n_COND_LOSS_VOLUME,-999999) <> nvl(:old.COND_LOSS_VOLUME,-999999) or nvl(n_WATER_LOSS_RATE,-999999) <> nvl(:old.WATER_LOSS_RATE,-999999) or nvl(n_WATER_LOSS_VOLUME,-999999) <> nvl(:old.WATER_LOSS_VOLUME,-999999) or nvl(n_DILUENT_LOSS_RATE,-999999) <> nvl(:old.DILUENT_LOSS_RATE,-999999) or nvl(n_DILUENT_LOSS_VOLUME,-999999) <> nvl(:old.DILUENT_LOSS_VOLUME,-999999) or nvl(n_GAS_LIFT_LOSS_RATE,-999999) <> nvl(:old.GAS_LIFT_LOSS_RATE,-999999) or nvl(n_GAS_LIFT_LOSS_VOLUME,-999999) <> nvl(:old.GAS_LIFT_LOSS_VOLUME,-999999) or nvl(n_WATER_INJ_LOSS_RATE,-999999) <> nvl(:old.WATER_INJ_LOSS_RATE,-999999) or nvl(n_WATER_INJ_LOSS_VOLUME,-999999) <> nvl(:old.WATER_INJ_LOSS_VOLUME,-999999) or nvl(n_STEAM_INJ_LOSS_RATE,-999999) <> nvl(:old.STEAM_INJ_LOSS_RATE,-999999) or nvl(n_STEAM_INJ_LOSS_VOLUME,-999999) <> nvl(:old.STEAM_INJ_LOSS_VOLUME,-999999) or nvl(n_GAS_INJ_LOSS_RATE,-999999) <> nvl(:old.GAS_INJ_LOSS_RATE,-999999) or nvl(n_GAS_INJ_LOSS_VOLUME,-999999) <> nvl(:old.GAS_INJ_LOSS_VOLUME,-999999))) then  EcDp_Deferment.insertTempWellDefermntAlloc(n_event_no, n_parent_event_no, n_daytime, :old.DAYTIME, n_end_date, :old.END_DATE, ''U'', nvl(n_last_updated_by, n_created_by), nvl(n_last_updated_date, n_created_date)); end if;', '1410', 'UPDATING', 'AFTER' FROM DUAL 
UNION 
 SELECT 'EC_PROD', 'WELL_DEFERMENT_BY_WELL', 'if(n_OBJECT_TYPE=''WELL'' AND (NVL(n_DAYTIME, to_date(''2100-01-01'',''yyyy-mm-dd''))<> NVL(:old.DAYTIME, to_date(''2100-01-01'',''yyyy-mm-dd'')) or NVL(n_END_DATE, to_date(''2100-01-01'',''yyyy-mm-dd''))<> NVL(:old.END_DATE, to_date(''2100-01-01'',''yyyy-mm-dd'')) or n_OBJECT_ID <> :old.OBJECT_ID or nvl(n_EVENT_TYPE,''NULL'') <> nvl(:old.EVENT_TYPE, ''NULL'') or nvl(n_SCHEDULED, ''NULL'') <> nvl(:old.SCHEDULED, ''NULL'') or nvl(n_DEFERMENT_TYPE, ''NULL'') <> nvl(:old.DEFERMENT_TYPE, ''NULL'') or nvl(n_OIL_LOSS_RATE,-999999) <> nvl(:old.OIL_LOSS_RATE,-999999) or nvl(n_GAS_LOSS_RATE,-999999) <> nvl(:old.GAS_LOSS_RATE,-999999) or nvl(n_COND_LOSS_RATE,-999999) <> nvl(:old.COND_LOSS_RATE,-999999) or nvl(n_WATER_LOSS_RATE,-999999) <> nvl(:old.WATER_LOSS_RATE,-999999) or nvl(n_DILUENT_LOSS_RATE,-999999) <> nvl(:old.DILUENT_LOSS_RATE,-999999) or nvl(n_GAS_LIFT_LOSS_RATE,-999999) <> nvl(:old.GAS_LIFT_LOSS_RATE,-999999) or nvl(n_WATER_INJ_LOSS_RATE,-999999) <> nvl(:old.WATER_INJ_LOSS_RATE,-999999) or nvl(n_STEAM_INJ_LOSS_RATE,-999999) <> nvl(:old.STEAM_INJ_LOSS_RATE,-999999) or nvl(n_GAS_INJ_LOSS_RATE,-999999) <> nvl(:old.GAS_INJ_LOSS_RATE,-999999))) then EcDp_Deferment.insertTempWellDefermntAlloc(n_event_no, n_parent_event_no, n_daytime, :old.DAYTIME, n_end_date, :old.END_DATE, ''U'', nvl(n_last_updated_by, n_created_by), nvl(n_last_updated_date, n_created_date));end if;', '300', 'UPDATING', 'AFTER' FROM DUAL 
UNION 
 SELECT 'EC_PROD', 'WELL_DEFERMENT_CHILD', 'if(n_OBJECT_TYPE=''WELL'' AND (NVL(n_DAYTIME, to_date(''2100-01-01'',''yyyy-mm-dd''))<> NVL(:old.DAYTIME, to_date(''2100-01-01'',''yyyy-mm-dd'')) or NVL(n_END_DATE, to_date(''2100-01-01'',''yyyy-mm-dd''))<> NVL(:old.END_DATE, to_date(''2100-01-01'',''yyyy-mm-dd'')) or n_OBJECT_ID <> :old.OBJECT_ID or nvl(n_DEFERMENT_TYPE, ''NULL'') <> nvl(:old.DEFERMENT_TYPE, ''NULL'') or nvl(n_OIL_LOSS_MASS_RATE,-999999) <> nvl(:old.OIL_LOSS_MASS_RATE,-999999) or nvl(n_OIL_LOSS_MASS,-999999) <> nvl(:old.OIL_LOSS_MASS,-999999) or nvl(n_GAS_LOSS_MASS_RATE,-999999) <> nvl(:old.GAS_LOSS_MASS_RATE,-999999) or nvl(n_GAS_LOSS_MASS,-999999) <> nvl(:old.GAS_LOSS_MASS,-999999) or nvl(n_COND_LOSS_MASS_RATE,-999999) <> nvl(:old.COND_LOSS_MASS_RATE,-999999) or nvl(n_COND_LOSS_MASS,-999999) <> nvl(:old.COND_LOSS_MASS,-999999) or nvl(n_WATER_LOSS_MASS_RATE,-999999) <> nvl(:old.WATER_LOSS_MASS_RATE,-999999) or nvl(n_WATER_LOSS_MASS,-999999) <> nvl(:old.WATER_LOSS_MASS,-999999))) then  EcDp_Deferment.insertTempWellDefermntAlloc(n_event_no, n_parent_event_no, n_daytime, :old.DAYTIME, n_end_date, :old.END_DATE, ''U'', nvl(n_last_updated_by, n_created_by), nvl(n_last_updated_date, n_created_date)); end if;', '1450', 'UPDATING', 'AFTER' FROM DUAL 
UNION 
 SELECT 'EC_PROD', 'WELL_DEFERMENT_CHILD', 'if(n_OBJECT_TYPE=''WELL'' AND (NVL(n_DAYTIME, to_date(''2100-01-01'',''yyyy-mm-dd''))<> NVL(:old.DAYTIME, to_date(''2100-01-01'',''yyyy-mm-dd'')) or NVL(n_END_DATE, to_date(''2100-01-01'',''yyyy-mm-dd''))<> NVL(:old.END_DATE, to_date(''2100-01-01'',''yyyy-mm-dd'')) or n_OBJECT_ID <> :old.OBJECT_ID or nvl(n_DEFERMENT_TYPE, ''NULL'') <> nvl(:old.DEFERMENT_TYPE, ''NULL'') or nvl(n_OIL_LOSS_RATE,-999999) <> nvl(:old.OIL_LOSS_RATE,-999999) or nvl(n_OIL_LOSS_VOLUME,-999999) <> nvl(:old.OIL_LOSS_VOLUME,-999999) or nvl(n_GAS_LOSS_RATE,-999999) <> nvl(:old.GAS_LOSS_RATE,-999999) or nvl(n_GAS_LOSS_VOLUME,-999999) <> nvl(:old.GAS_LOSS_VOLUME,-999999) or nvl(n_COND_LOSS_RATE,-999999) <> nvl(:old.COND_LOSS_RATE,-999999) or nvl(n_COND_LOSS_VOLUME,-999999) <> nvl(:old.COND_LOSS_VOLUME,-999999) or nvl(n_WATER_LOSS_RATE,-999999) <> nvl(:old.WATER_LOSS_RATE,-999999) or nvl(n_WATER_LOSS_VOLUME,-999999) <> nvl(:old.WATER_LOSS_VOLUME,-999999) or nvl(n_DILUENT_LOSS_RATE,-999999) <> nvl(:old.DILUENT_LOSS_RATE,-999999) or nvl(n_DILUENT_LOSS_VOLUME,-999999) <> nvl(:old.DILUENT_LOSS_VOLUME,-999999) or nvl(n_GAS_LIFT_LOSS_RATE,-999999) <> nvl(:old.GAS_LIFT_LOSS_RATE,-999999) or nvl(n_GAS_LIFT_LOSS_VOLUME,-999999) <> nvl(:old.GAS_LIFT_LOSS_VOLUME,-999999) or nvl(n_WATER_INJ_LOSS_RATE,-999999) <> nvl(:old.WATER_INJ_LOSS_RATE,-999999) or nvl(n_WATER_INJ_LOSS_VOLUME,-999999) <> nvl(:old.WATER_INJ_LOSS_VOLUME,-999999) or nvl(n_STEAM_INJ_LOSS_RATE,-999999) <> nvl(:old.STEAM_INJ_LOSS_RATE,-999999) or nvl(n_STEAM_INJ_LOSS_VOLUME,-999999) <> nvl(:old.STEAM_INJ_LOSS_VOLUME,-999999) or nvl(n_GAS_INJ_LOSS_RATE,-999999) '||
 '<> nvl(:old.GAS_INJ_LOSS_RATE,-999999) or nvl(n_GAS_INJ_LOSS_VOLUME,-999999) <> nvl(:old.GAS_INJ_LOSS_VOLUME,-999999) or nvl(n_OIL_LOSS_MASS_RATE,-999999) <> nvl(:old.OIL_LOSS_MASS_RATE,-999999) or nvl(n_OIL_LOSS_MASS,-999999) <> nvl(:old.OIL_LOSS_MASS,-999999) or nvl(n_GAS_LOSS_MASS_RATE,-999999) <> nvl(:old.GAS_LOSS_MASS_RATE,-999999) or nvl(n_GAS_LOSS_MASS,-999999) <> nvl(:old.GAS_LOSS_MASS,-999999) or nvl(n_COND_LOSS_MASS_RATE,-999999) <> nvl(:old.COND_LOSS_MASS_RATE,-999999) or nvl(n_COND_LOSS_MASS,-999999) <> nvl(:old.COND_LOSS_MASS,-999999) or nvl(n_WATER_LOSS_MASS_RATE,-999999) <> nvl(:old.WATER_LOSS_MASS_RATE,-999999) or nvl(n_WATER_LOSS_MASS,-999999) <> nvl(:old.WATER_LOSS_MASS,-999999))) then  EcDp_Deferment.insertTempWellDefermntAlloc(n_event_no, n_parent_event_no, n_daytime, :old.DAYTIME, n_end_date, :old.END_DATE, ''U'', nvl(n_last_updated_by, n_created_by), nvl(n_last_updated_date, n_created_date)); end if;', '1430', 'UPDATING', 'AFTER' FROM DUAL 
UNION 
 SELECT 'EC_PROD', 'WELL_DEFERMENT_CHILD', 'if(n_OBJECT_TYPE=''WELL'' AND (NVL(n_DAYTIME, to_date(''2100-01-01'',''yyyy-mm-dd''))<> NVL(:old.DAYTIME, to_date(''2100-01-01'',''yyyy-mm-dd'')) or NVL(n_END_DATE, to_date(''2100-01-01'',''yyyy-mm-dd''))<> NVL(:old.END_DATE, to_date(''2100-01-01'',''yyyy-mm-dd'')) or n_OBJECT_ID <> :old.OBJECT_ID or nvl(n_DEFERMENT_TYPE, ''NULL'') <> nvl(:old.DEFERMENT_TYPE, ''NULL'') or nvl(n_OIL_LOSS_RATE,-999999) <> nvl(:old.OIL_LOSS_RATE,-999999) or nvl(n_OIL_LOSS_VOLUME,-999999) <> nvl(:old.OIL_LOSS_VOLUME,-999999) or nvl(n_GAS_LOSS_RATE,-999999) <> nvl(:old.GAS_LOSS_RATE,-999999) or nvl(n_GAS_LOSS_VOLUME,-999999) <> nvl(:old.GAS_LOSS_VOLUME,-999999) or nvl(n_COND_LOSS_RATE,-999999) <> nvl(:old.COND_LOSS_RATE,-999999) or nvl(n_COND_LOSS_VOLUME,-999999) <> nvl(:old.COND_LOSS_VOLUME,-999999) or nvl(n_WATER_LOSS_RATE,-999999) <> nvl(:old.WATER_LOSS_RATE,-999999) or nvl(n_WATER_LOSS_VOLUME,-999999) <> nvl(:old.WATER_LOSS_VOLUME,-999999) or nvl(n_DILUENT_LOSS_RATE,-999999) <> nvl(:old.DILUENT_LOSS_RATE,-999999) or nvl(n_DILUENT_LOSS_VOLUME,-999999) <> nvl(:old.DILUENT_LOSS_VOLUME,-999999) or nvl(n_GAS_LIFT_LOSS_RATE,-999999) <> nvl(:old.GAS_LIFT_LOSS_RATE,-999999) or nvl(n_GAS_LIFT_LOSS_VOLUME,-999999) <> nvl(:old.GAS_LIFT_LOSS_VOLUME,-999999) or nvl(n_WATER_INJ_LOSS_RATE,-999999) <> nvl(:old.WATER_INJ_LOSS_RATE,-999999) or nvl(n_WATER_INJ_LOSS_VOLUME,-999999) <> nvl(:old.WATER_INJ_LOSS_VOLUME,-999999) or nvl(n_STEAM_INJ_LOSS_RATE,-999999) <> nvl(:old.STEAM_INJ_LOSS_RATE,-999999) or nvl(n_STEAM_INJ_LOSS_VOLUME,-999999) <> nvl(:old.STEAM_INJ_LOSS_VOLUME,-999999) or nvl(n_GAS_INJ_LOSS_RATE,-999999) <> nvl(:old.GAS_INJ_LOSS_RATE,-999999) or nvl(n_GAS_INJ_LOSS_VOLUME,-999999) <> nvl(:old.GAS_INJ_LOSS_VOLUME,-999999))) then  EcDp_Deferment.insertTempWellDefermntAlloc(n_event_no, n_parent_event_no, n_daytime, :old.DAYTIME, n_end_date, :old.END_DATE, ''U'', nvl(n_last_updated_by, n_created_by), nvl(n_last_updated_date, n_created_date)); end if;', '1410', 'UPDATING', 'AFTER' FROM DUAL
) n
ON (o.CLASS_NAME = n.CLASS_NAME
 AND o.SORT_ORDER = n.SORT_ORDER
 AND o.TRIGGERING_EVENT = n.TRIGGERING_EVENT
 AND o.TRIGGER_TYPE = n.TRIGGER_TYPE)
WHEN MATCHED THEN UPDATE SET
o.APP_SPACE_CNTX = n.APP_SPACE_CNTX
,o.DB_SQL_SYNTAX = n.DB_SQL_SYNTAX
,o.LAST_UPDATED_BY = 'UPGD-12.1.0.PATCH04'
,o.REV_NO = o.REV_NO+1
WHEN NOT MATCHED THEN INSERT
(APP_SPACE_CNTX,CLASS_NAME,DB_SQL_SYNTAX,SORT_ORDER,TRIGGERING_EVENT,TRIGGER_TYPE,CREATED_BY)
VALUES( n.APP_SPACE_CNTX, n.CLASS_NAME, n.DB_SQL_SYNTAX, n.SORT_ORDER, n.TRIGGERING_EVENT, n.TRIGGER_TYPE,'UPGD-12.1.0.PATCH04');

SET DEFINE ON

