
 -- START PKG_GEN_PKGS.sf_get_functions at:11/15/2018 10.18.14 AM


CREATE or REPLACE PACKAGE RP_CTRL_CHECK_GROUP
IS

   FUNCTION DESCRIPTION(
      P_CHECK_GROUP IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION APPROVAL_BY(
      P_CHECK_GROUP IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION APPROVAL_STATE(
      P_CHECK_GROUP IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION EC_USER_OBJECT(
      P_CHECK_GROUP IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION RECORD_STATUS(
      P_CHECK_GROUP IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION APPROVAL_DATE(
      P_CHECK_GROUP IN VARCHAR2)
      RETURN DATE;
   FUNCTION CHECK_RULE_TARGET(
      P_CHECK_GROUP IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION PARENT_GROUP(
      P_CHECK_GROUP IN VARCHAR2)
      RETURN VARCHAR2;
      TYPE REC_ROW_BY_PK IS RECORD (
         CHECK_GROUP VARCHAR2 (30) ,
         EC_USER_OBJECT VARCHAR2 (2000) ,
         PARENT_GROUP VARCHAR2 (30) ,
         CHECK_RULE_TARGET VARCHAR2 (32) ,
         DESCRIPTION VARCHAR2 (2000) ,
         RECORD_STATUS VARCHAR2 (1) ,
         CREATED_BY VARCHAR2 (30) ,
         CREATED_DATE  DATE ,
         LAST_UPDATED_BY VARCHAR2 (30) ,
         LAST_UPDATED_DATE  DATE ,
         REV_NO NUMBER ,
         REV_TEXT VARCHAR2 (2000) ,
         APPROVAL_BY VARCHAR2 (30) ,
         APPROVAL_DATE  DATE ,
         APPROVAL_STATE VARCHAR2 (1) ,
         REC_ID VARCHAR2 (32)  );
   FUNCTION ROW_BY_PK(
      P_CHECK_GROUP IN VARCHAR2)
      RETURN REC_ROW_BY_PK;
   FUNCTION REC_ID(
      P_CHECK_GROUP IN VARCHAR2)
      RETURN VARCHAR2;

END RP_CTRL_CHECK_GROUP;

/



CREATE or REPLACE PACKAGE BODY RP_CTRL_CHECK_GROUP
IS

   FUNCTION DESCRIPTION(
      P_CHECK_GROUP IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_CTRL_CHECK_GROUP.DESCRIPTION      (
         P_CHECK_GROUP );
         RETURN ret_value;
   END DESCRIPTION;
   FUNCTION APPROVAL_BY(
      P_CHECK_GROUP IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (30) ;
   BEGIN
      ret_value := EC_CTRL_CHECK_GROUP.APPROVAL_BY      (
         P_CHECK_GROUP );
         RETURN ret_value;
   END APPROVAL_BY;
   FUNCTION APPROVAL_STATE(
      P_CHECK_GROUP IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_CTRL_CHECK_GROUP.APPROVAL_STATE      (
         P_CHECK_GROUP );
         RETURN ret_value;
   END APPROVAL_STATE;
   FUNCTION EC_USER_OBJECT(
      P_CHECK_GROUP IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_CTRL_CHECK_GROUP.EC_USER_OBJECT      (
         P_CHECK_GROUP );
         RETURN ret_value;
   END EC_USER_OBJECT;
   FUNCTION RECORD_STATUS(
      P_CHECK_GROUP IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_CTRL_CHECK_GROUP.RECORD_STATUS      (
         P_CHECK_GROUP );
         RETURN ret_value;
   END RECORD_STATUS;
   FUNCTION APPROVAL_DATE(
      P_CHECK_GROUP IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CTRL_CHECK_GROUP.APPROVAL_DATE      (
         P_CHECK_GROUP );
         RETURN ret_value;
   END APPROVAL_DATE;
   FUNCTION CHECK_RULE_TARGET(
      P_CHECK_GROUP IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CTRL_CHECK_GROUP.CHECK_RULE_TARGET      (
         P_CHECK_GROUP );
         RETURN ret_value;
   END CHECK_RULE_TARGET;
   FUNCTION PARENT_GROUP(
      P_CHECK_GROUP IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (30) ;
   BEGIN
      ret_value := EC_CTRL_CHECK_GROUP.PARENT_GROUP      (
         P_CHECK_GROUP );
         RETURN ret_value;
   END PARENT_GROUP;
   FUNCTION ROW_BY_PK(
      P_CHECK_GROUP IN VARCHAR2)
      RETURN REC_ROW_BY_PK
   IS
      ret_value    REC_ROW_BY_PK ;
   BEGIN
      ret_value := EC_CTRL_CHECK_GROUP.ROW_BY_PK      (
         P_CHECK_GROUP );
         RETURN ret_value;
   END ROW_BY_PK;
   FUNCTION REC_ID(
      P_CHECK_GROUP IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CTRL_CHECK_GROUP.REC_ID      (
         P_CHECK_GROUP );
         RETURN ret_value;
   END REC_ID;

END RP_CTRL_CHECK_GROUP;

/
--GRANT EXECUTE ON ECKERNEL_WST.RP_CTRL_CHECK_GROUP TO REPORT_ROLE_XXX;



 -- FINISH PKG_GEN_PKGS.sf_get_functions at:11/15/2018 10.18.16 AM


