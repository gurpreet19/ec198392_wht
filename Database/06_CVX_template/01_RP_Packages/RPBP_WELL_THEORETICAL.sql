
 -- START PKG_GEN_PKGS.sf_get_functions at:05/08/2019 03.36.16 AM


CREATE or REPLACE PACKAGE RPBP_WELL_THEORETICAL
IS

   FUNCTION FINDFUELFLAREVENT(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_FFV_TYPE IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION FINDGASOILRATIO(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL,
      P_DECLINE_FLAG IN VARCHAR2 DEFAULT NULL,
      P_CLASS_NAME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION FINDGASSTDDENSITY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL )
      RETURN NUMBER;
   FUNCTION FINDGCV(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION FINDHCMASSSUBDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION FINDWATERCUTPCT(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL,
      P_DECLINE_FLAG IN VARCHAR2 DEFAULT NULL,
      P_CLASS_NAME IN VARCHAR2 DEFAULT NULL,
      P_RESULT_NO IN NUMBER DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION GETGRSLOADOILMASSDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION GETNETLOADOILSTDRATEDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_TODAY IN DATE DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION GETOILSTDRATEEVENT(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION DECLINERESULT(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_FROM_DATE IN DATE,
      P_PHASE IN VARCHAR2,
      P_VALUE IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION FINDAVGPREVMTHBSWTRUCK(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION FINDHCMASSDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION FINDOILMASSDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL )
      RETURN NUMBER;
   FUNCTION GETGASLIFTSTDVOLSUBDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION GETLASTNOTNULLCLOSINGVALUEDATE(
      P_OBJECT_ID IN VARCHAR2,
      P_CLASS_NAME IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN DATE;
   FUNCTION GETOILSTDVOLSUBDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION GETWATSTDVOLSUBDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION FINDDRYWETFACTOR(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL )
      RETURN NUMBER;
   FUNCTION FINDWATERGASRATIO(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL,
      P_DECLINE_FLAG IN VARCHAR2 DEFAULT NULL,
      P_CLASS_NAME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION GETCO2STDRATEDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL,
      P_DECLINE_FLAG IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION GETCONDSTDRATEEVENT(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION GETCONDSTDVOLSUBDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION GETINJECTEDSTDVOLUME(
      P_OBJECT_ID IN VARCHAR2,
      P_CLASS_NAME IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION GETLOADWATERSTDRATEDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_TODAY IN DATE DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION FINDSAND(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL )
      RETURN NUMBER;
   FUNCTION FINDWATERMASSDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL )
      RETURN NUMBER;
   FUNCTION GETCONDSTDRATEDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL,
      P_DECLINE_FLAG IN VARCHAR2 DEFAULT NULL )
      RETURN NUMBER;
   FUNCTION GETGASSTDRATEDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL,
      P_DECLINE_FLAG IN VARCHAR2 DEFAULT NULL,
      P_DEDUCT_CO2_FLAG IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION GETINJECTEDSTDRATEDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_INJ_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_INJ_METHOD IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION GETLASTNOTNULLINJRATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_INJ_TYPE IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION GETMETERMETHOD(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_METER_METHOD IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION GETWATSTDRATEEVENT(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION GETGASSTDRATEEVENT(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION GETGASSTDVOLSUBDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION GETPRODUCEDSTDDAILYRATE(
      P_OBJECT_ID IN VARCHAR2,
      P_CLASS_NAME IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION SUMFUELFLAREVENT(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_FFV_TYPE IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION FINDBSWTRUCK(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION FINDCONDGASRATIO(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL,
      P_DECLINE_FLAG IN VARCHAR2 DEFAULT NULL,
      P_CLASS_NAME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION FINDGASWATERRATIO(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL,
      P_DECLINE_FLAG IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION FINDOILSTDDENSITY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL )
      RETURN NUMBER;
   FUNCTION FINDWETDRYFACTOR(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL )
      RETURN NUMBER;
   FUNCTION GETGASLIFTSTDRATEDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_GAS_LIFT_METHOD IN VARCHAR2 default NULL)
      RETURN NUMBER;
   FUNCTION GETINJECTEDMASSSTDRATEDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_INJ_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_INJ_METHOD IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION GETNETLOADOILMASSDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION GETOILSTDRATEDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL ,
      P_DECLINE_FLAG IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION GETPRODUCEDSTDVOLUME(
      P_OBJECT_ID IN VARCHAR2,
      P_CLASS_NAME IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION GETWATSTDRATEDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL,
      P_DECLINE_FLAG IN VARCHAR2 DEFAULT NULL )
      RETURN NUMBER;
   FUNCTION FINDCONDMASSDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL )
      RETURN NUMBER;
   FUNCTION FINDWATEROILRATIO(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL,
      P_DECLINE_FLAG IN VARCHAR2 DEFAULT NULL,
      P_CLASS_NAME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION FINDWATSTDDENSITY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL )
      RETURN NUMBER;
   FUNCTION GETCURVERATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_PHASE IN VARCHAR2,
      P_CURVE_PURPOSE IN VARCHAR2,
      P_CHOKE_SIZE IN NUMBER,
      P_WH_PRESS IN NUMBER,
      P_WH_TEMP IN NUMBER,
      P_BH_PRESS IN NUMBER,
      P_ANNULUS_PRESS IN NUMBER,
      P_WH_USC_PRESS IN NUMBER,
      P_WH_DSC_PRESS IN NUMBER,
      P_BS_W IN NUMBER,
      P_DH_PUMP_RPM IN NUMBER,
      P_GL_CHOKE IN NUMBER,
      P_GL_PRESS IN NUMBER,
      P_GL_RATE IN NUMBER,
      P_GL_DIFF_PRESS IN NUMBER DEFAULT 0,
      P_AVG_FLOW_MASS IN NUMBER DEFAULT 0,
      P_PHASE_CURRENT IN NUMBER,
      P_AC_FREQUENCY IN NUMBER,
      P_INTAKE_PRESS IN NUMBER,
      P_MPM_OIL_RATE IN NUMBER,
      P_MPM_GAS_RATE IN NUMBER,
      P_MPM_WATER_RATE IN NUMBER,
      P_MPM_COND_RATE IN NUMBER,
      P_AVG_DH_PUMP_POWER IN NUMBER,
      P_AVG_DP_VENTURI IN NUMBER,
      P_PRESSURE_ZONE IN VARCHAR2 DEFAULT 'NORMAL',
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION GETDILUENTSTDRATEDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_DILUENT_METHOD IN VARCHAR2 DEFAULT NULL )
      RETURN NUMBER;
   FUNCTION GETDILUENTSTDVOLSUBDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION GETGASENERGYDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION GETGRSLOADOILSTDRATEDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION GETINJECTEDSTDDAILYRATE(
      P_OBJECT_ID IN VARCHAR2,
      P_CLASS_NAME IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION SUMTRUCKEDWATERFROMWELL(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION FINDGASMASSDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL )
      RETURN NUMBER;
   FUNCTION FINDSEASONALWELL(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_FFV_TYPE IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION SUMTRUCKEDNETOILFROMWELL(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;

END RPBP_WELL_THEORETICAL;

/



CREATE or REPLACE PACKAGE BODY RPBP_WELL_THEORETICAL
IS

   FUNCTION FINDFUELFLAREVENT(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_FFV_TYPE IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.FINDFUELFLAREVENT      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_FFV_TYPE );
         RETURN ret_value;
   END FINDFUELFLAREVENT;
   FUNCTION FINDGASOILRATIO(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL,
      P_DECLINE_FLAG IN VARCHAR2 DEFAULT NULL,
      P_CLASS_NAME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.FINDGASOILRATIO      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_CALC_METHOD,
         P_DECLINE_FLAG,
         P_CLASS_NAME );
         RETURN ret_value;
   END FINDGASOILRATIO;
   FUNCTION FINDGASSTDDENSITY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL )
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.FINDGASSTDDENSITY      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_CALC_METHOD );
         RETURN ret_value;
   END FINDGASSTDDENSITY;
   FUNCTION FINDGCV(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.FINDGCV      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_METHOD );
         RETURN ret_value;
   END FINDGCV;
   FUNCTION FINDHCMASSSUBDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.FINDHCMASSSUBDAY      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END FINDHCMASSSUBDAY;
   FUNCTION FINDWATERCUTPCT(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL,
      P_DECLINE_FLAG IN VARCHAR2 DEFAULT NULL,
      P_CLASS_NAME IN VARCHAR2 DEFAULT NULL,
      P_RESULT_NO IN NUMBER DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.FINDWATERCUTPCT      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_CALC_METHOD,
         P_DECLINE_FLAG,
         P_CLASS_NAME,
         P_RESULT_NO );
         RETURN ret_value;
   END FINDWATERCUTPCT;
   FUNCTION GETGRSLOADOILMASSDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.GETGRSLOADOILMASSDAY      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END GETGRSLOADOILMASSDAY;
   FUNCTION GETNETLOADOILSTDRATEDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_TODAY IN DATE DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.GETNETLOADOILSTDRATEDAY      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_TODAY );
         RETURN ret_value;
   END GETNETLOADOILSTDRATEDAY;
   FUNCTION GETOILSTDRATEEVENT(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.GETOILSTDRATEEVENT      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_CALC_METHOD );
         RETURN ret_value;
   END GETOILSTDRATEEVENT;
   FUNCTION DECLINERESULT(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_FROM_DATE IN DATE,
      P_PHASE IN VARCHAR2,
      P_VALUE IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.DECLINERESULT      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_FROM_DATE,
         P_PHASE,
         P_VALUE );
         RETURN ret_value;
   END DECLINERESULT;
   FUNCTION FINDAVGPREVMTHBSWTRUCK(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.FINDAVGPREVMTHBSWTRUCK      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END FINDAVGPREVMTHBSWTRUCK;
   FUNCTION FINDHCMASSDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.FINDHCMASSDAY      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END FINDHCMASSDAY;
   FUNCTION FINDOILMASSDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL )
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.FINDOILMASSDAY      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_CALC_METHOD );
         RETURN ret_value;
   END FINDOILMASSDAY;
   FUNCTION GETGASLIFTSTDVOLSUBDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.GETGASLIFTSTDVOLSUBDAY      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_CALC_METHOD );
         RETURN ret_value;
   END GETGASLIFTSTDVOLSUBDAY;
   FUNCTION GETLASTNOTNULLCLOSINGVALUEDATE(
      P_OBJECT_ID IN VARCHAR2,
      P_CLASS_NAME IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.GETLASTNOTNULLCLOSINGVALUEDATE      (
         P_OBJECT_ID,
         P_CLASS_NAME,
         P_DAYTIME );
         RETURN ret_value;
   END GETLASTNOTNULLCLOSINGVALUEDATE;
   FUNCTION GETOILSTDVOLSUBDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.GETOILSTDVOLSUBDAY      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_CALC_METHOD );
         RETURN ret_value;
   END GETOILSTDVOLSUBDAY;
   FUNCTION GETWATSTDVOLSUBDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.GETWATSTDVOLSUBDAY      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_CALC_METHOD );
         RETURN ret_value;
   END GETWATSTDVOLSUBDAY;
   FUNCTION FINDDRYWETFACTOR(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL )
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.FINDDRYWETFACTOR      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_CALC_METHOD );
         RETURN ret_value;
   END FINDDRYWETFACTOR;
   FUNCTION FINDWATERGASRATIO(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL,
      P_DECLINE_FLAG IN VARCHAR2 DEFAULT NULL,
      P_CLASS_NAME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.FINDWATERGASRATIO      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_CALC_METHOD,
         P_DECLINE_FLAG,
         P_CLASS_NAME );
         RETURN ret_value;
   END FINDWATERGASRATIO;
   FUNCTION GETCO2STDRATEDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL,
      P_DECLINE_FLAG IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.GETCO2STDRATEDAY      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_CALC_METHOD,
         P_DECLINE_FLAG );
         RETURN ret_value;
   END GETCO2STDRATEDAY;
   FUNCTION GETCONDSTDRATEEVENT(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.GETCONDSTDRATEEVENT      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_CALC_METHOD );
         RETURN ret_value;
   END GETCONDSTDRATEEVENT;
   FUNCTION GETCONDSTDVOLSUBDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.GETCONDSTDVOLSUBDAY      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_CALC_METHOD );
         RETURN ret_value;
   END GETCONDSTDVOLSUBDAY;
   FUNCTION GETINJECTEDSTDVOLUME(
      P_OBJECT_ID IN VARCHAR2,
      P_CLASS_NAME IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.GETINJECTEDSTDVOLUME      (
         P_OBJECT_ID,
         P_CLASS_NAME,
         P_DAYTIME );
         RETURN ret_value;
   END GETINJECTEDSTDVOLUME;
   FUNCTION GETLOADWATERSTDRATEDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_TODAY IN DATE DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.GETLOADWATERSTDRATEDAY      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_TODAY );
         RETURN ret_value;
   END GETLOADWATERSTDRATEDAY;
   FUNCTION FINDSAND(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL )
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.FINDSAND      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_CALC_METHOD );
         RETURN ret_value;
   END FINDSAND;
   FUNCTION FINDWATERMASSDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL )
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.FINDWATERMASSDAY      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_CALC_METHOD );
         RETURN ret_value;
   END FINDWATERMASSDAY;
   FUNCTION GETCONDSTDRATEDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL,
      P_DECLINE_FLAG IN VARCHAR2 DEFAULT NULL )
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.GETCONDSTDRATEDAY      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_CALC_METHOD,
         P_DECLINE_FLAG );
         RETURN ret_value;
   END GETCONDSTDRATEDAY;
   FUNCTION GETGASSTDRATEDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL,
      P_DECLINE_FLAG IN VARCHAR2 DEFAULT NULL,
      P_DEDUCT_CO2_FLAG IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.GETGASSTDRATEDAY      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_CALC_METHOD,
         P_DECLINE_FLAG,
         P_DEDUCT_CO2_FLAG );
         RETURN ret_value;
   END GETGASSTDRATEDAY;
   FUNCTION GETINJECTEDSTDRATEDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_INJ_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_INJ_METHOD IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.GETINJECTEDSTDRATEDAY      (
         P_OBJECT_ID,
         P_INJ_TYPE,
         P_DAYTIME,
         P_CALC_INJ_METHOD );
         RETURN ret_value;
   END GETINJECTEDSTDRATEDAY;
   FUNCTION GETLASTNOTNULLINJRATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_INJ_TYPE IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.GETLASTNOTNULLINJRATE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_INJ_TYPE );
         RETURN ret_value;
   END GETLASTNOTNULLINJRATE;
   FUNCTION GETMETERMETHOD(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_METER_METHOD IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.GETMETERMETHOD      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_METER_METHOD );
         RETURN ret_value;
   END GETMETERMETHOD;
   FUNCTION GETWATSTDRATEEVENT(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.GETWATSTDRATEEVENT      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_CALC_METHOD );
         RETURN ret_value;
   END GETWATSTDRATEEVENT;
   FUNCTION GETGASSTDRATEEVENT(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.GETGASSTDRATEEVENT      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_CALC_METHOD );
         RETURN ret_value;
   END GETGASSTDRATEEVENT;
   FUNCTION GETGASSTDVOLSUBDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.GETGASSTDVOLSUBDAY      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_CALC_METHOD );
         RETURN ret_value;
   END GETGASSTDVOLSUBDAY;
   FUNCTION GETPRODUCEDSTDDAILYRATE(
      P_OBJECT_ID IN VARCHAR2,
      P_CLASS_NAME IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.GETPRODUCEDSTDDAILYRATE      (
         P_OBJECT_ID,
         P_CLASS_NAME,
         P_DAYTIME );
         RETURN ret_value;
   END GETPRODUCEDSTDDAILYRATE;
   FUNCTION SUMFUELFLAREVENT(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_FFV_TYPE IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.SUMFUELFLAREVENT      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_FFV_TYPE );
         RETURN ret_value;
   END SUMFUELFLAREVENT;
   FUNCTION FINDBSWTRUCK(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.FINDBSWTRUCK      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END FINDBSWTRUCK;
   FUNCTION FINDCONDGASRATIO(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL,
      P_DECLINE_FLAG IN VARCHAR2 DEFAULT NULL,
      P_CLASS_NAME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.FINDCONDGASRATIO      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_CALC_METHOD,
         P_DECLINE_FLAG,
         P_CLASS_NAME );
         RETURN ret_value;
   END FINDCONDGASRATIO;
   FUNCTION FINDGASWATERRATIO(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL,
      P_DECLINE_FLAG IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.FINDGASWATERRATIO      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_CALC_METHOD,
         P_DECLINE_FLAG );
         RETURN ret_value;
   END FINDGASWATERRATIO;
   FUNCTION FINDOILSTDDENSITY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL )
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.FINDOILSTDDENSITY      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_CALC_METHOD );
         RETURN ret_value;
   END FINDOILSTDDENSITY;
   FUNCTION FINDWETDRYFACTOR(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL )
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.FINDWETDRYFACTOR      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_CALC_METHOD );
         RETURN ret_value;
   END FINDWETDRYFACTOR;
   FUNCTION GETGASLIFTSTDRATEDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_GAS_LIFT_METHOD IN VARCHAR2 default NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.GETGASLIFTSTDRATEDAY      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_GAS_LIFT_METHOD );
         RETURN ret_value;
   END GETGASLIFTSTDRATEDAY;
   FUNCTION GETINJECTEDMASSSTDRATEDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_INJ_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_INJ_METHOD IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.GETINJECTEDMASSSTDRATEDAY      (
         P_OBJECT_ID,
         P_INJ_TYPE,
         P_DAYTIME,
         P_CALC_INJ_METHOD );
         RETURN ret_value;
   END GETINJECTEDMASSSTDRATEDAY;
   FUNCTION GETNETLOADOILMASSDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.GETNETLOADOILMASSDAY      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END GETNETLOADOILMASSDAY;
   FUNCTION GETOILSTDRATEDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL ,
      P_DECLINE_FLAG IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.GETOILSTDRATEDAY      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_CALC_METHOD,
         P_DECLINE_FLAG );
         RETURN ret_value;
   END GETOILSTDRATEDAY;
   FUNCTION GETPRODUCEDSTDVOLUME(
      P_OBJECT_ID IN VARCHAR2,
      P_CLASS_NAME IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.GETPRODUCEDSTDVOLUME      (
         P_OBJECT_ID,
         P_CLASS_NAME,
         P_DAYTIME );
         RETURN ret_value;
   END GETPRODUCEDSTDVOLUME;
   FUNCTION GETWATSTDRATEDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL,
      P_DECLINE_FLAG IN VARCHAR2 DEFAULT NULL )
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.GETWATSTDRATEDAY      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_CALC_METHOD,
         P_DECLINE_FLAG );
         RETURN ret_value;
   END GETWATSTDRATEDAY;
   FUNCTION FINDCONDMASSDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL )
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.FINDCONDMASSDAY      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_CALC_METHOD );
         RETURN ret_value;
   END FINDCONDMASSDAY;
   FUNCTION FINDWATEROILRATIO(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL,
      P_DECLINE_FLAG IN VARCHAR2 DEFAULT NULL,
      P_CLASS_NAME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.FINDWATEROILRATIO      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_CALC_METHOD,
         P_DECLINE_FLAG,
         P_CLASS_NAME );
         RETURN ret_value;
   END FINDWATEROILRATIO;
   FUNCTION FINDWATSTDDENSITY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL )
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.FINDWATSTDDENSITY      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_CALC_METHOD );
         RETURN ret_value;
   END FINDWATSTDDENSITY;
   FUNCTION GETCURVERATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_PHASE IN VARCHAR2,
      P_CURVE_PURPOSE IN VARCHAR2,
      P_CHOKE_SIZE IN NUMBER,
      P_WH_PRESS IN NUMBER,
      P_WH_TEMP IN NUMBER,
      P_BH_PRESS IN NUMBER,
      P_ANNULUS_PRESS IN NUMBER,
      P_WH_USC_PRESS IN NUMBER,
      P_WH_DSC_PRESS IN NUMBER,
      P_BS_W IN NUMBER,
      P_DH_PUMP_RPM IN NUMBER,
      P_GL_CHOKE IN NUMBER,
      P_GL_PRESS IN NUMBER,
      P_GL_RATE IN NUMBER,
      P_GL_DIFF_PRESS IN NUMBER DEFAULT 0,
      P_AVG_FLOW_MASS IN NUMBER DEFAULT 0,
      P_PHASE_CURRENT IN NUMBER,
      P_AC_FREQUENCY IN NUMBER,
      P_INTAKE_PRESS IN NUMBER,
      P_MPM_OIL_RATE IN NUMBER,
      P_MPM_GAS_RATE IN NUMBER,
      P_MPM_WATER_RATE IN NUMBER,
      P_MPM_COND_RATE IN NUMBER,
      P_AVG_DH_PUMP_POWER IN NUMBER,
      P_AVG_DP_VENTURI IN NUMBER,
      P_PRESSURE_ZONE IN VARCHAR2 DEFAULT 'NORMAL',
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.GETCURVERATE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_PHASE,
         P_CURVE_PURPOSE,
         P_CHOKE_SIZE,
         P_WH_PRESS,
         P_WH_TEMP,
         P_BH_PRESS,
         P_ANNULUS_PRESS,
         P_WH_USC_PRESS,
         P_WH_DSC_PRESS,
         P_BS_W,
         P_DH_PUMP_RPM,
         P_GL_CHOKE,
         P_GL_PRESS,
         P_GL_RATE,
         P_GL_DIFF_PRESS,
         P_AVG_FLOW_MASS,
         P_PHASE_CURRENT,
         P_AC_FREQUENCY,
         P_INTAKE_PRESS,
         P_MPM_OIL_RATE,
         P_MPM_GAS_RATE,
         P_MPM_WATER_RATE,
         P_MPM_COND_RATE,
         P_AVG_DH_PUMP_POWER,
         P_AVG_DP_VENTURI,
         P_PRESSURE_ZONE,
         P_CALC_METHOD );
         RETURN ret_value;
   END GETCURVERATE;
   FUNCTION GETDILUENTSTDRATEDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_DILUENT_METHOD IN VARCHAR2 DEFAULT NULL )
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.GETDILUENTSTDRATEDAY      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_DILUENT_METHOD );
         RETURN ret_value;
   END GETDILUENTSTDRATEDAY;
   FUNCTION GETDILUENTSTDVOLSUBDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.GETDILUENTSTDVOLSUBDAY      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_CALC_METHOD );
         RETURN ret_value;
   END GETDILUENTSTDVOLSUBDAY;
   FUNCTION GETGASENERGYDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.GETGASENERGYDAY      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_METHOD );
         RETURN ret_value;
   END GETGASENERGYDAY;
   FUNCTION GETGRSLOADOILSTDRATEDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.GETGRSLOADOILSTDRATEDAY      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END GETGRSLOADOILSTDRATEDAY;
   FUNCTION GETINJECTEDSTDDAILYRATE(
      P_OBJECT_ID IN VARCHAR2,
      P_CLASS_NAME IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.GETINJECTEDSTDDAILYRATE      (
         P_OBJECT_ID,
         P_CLASS_NAME,
         P_DAYTIME );
         RETURN ret_value;
   END GETINJECTEDSTDDAILYRATE;
   FUNCTION SUMTRUCKEDWATERFROMWELL(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.SUMTRUCKEDWATERFROMWELL      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END SUMTRUCKEDWATERFROMWELL;
   FUNCTION FINDGASMASSDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL )
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.FINDGASMASSDAY      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_CALC_METHOD );
         RETURN ret_value;
   END FINDGASMASSDAY;
   FUNCTION FINDSEASONALWELL(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_FFV_TYPE IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.FINDSEASONALWELL      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_FFV_TYPE );
         RETURN ret_value;
   END FINDSEASONALWELL;
   FUNCTION SUMTRUCKEDNETOILFROMWELL(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_WELL_THEORETICAL.SUMTRUCKEDNETOILFROMWELL      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END SUMTRUCKEDNETOILFROMWELL;

END RPBP_WELL_THEORETICAL;

/
--GRANT EXECUTE ON ECKERNEL_WST.RPBP_WELL_THEORETICAL TO REPORT_ROLE_XXX;



 -- FINISH PKG_GEN_PKGS.sf_get_functions at:05/08/2019 03.36.27 AM


