
 -- START PKG_GEN_PKGS.sf_get_functions at:11/15/2018 10.17.06 AM


CREATE or REPLACE PACKAGE RP_CT_LIFTING_NUMBERS
IS

   FUNCTION APPROVAL_BY(
      P_PARCEL_NO IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION APPROVAL_STATE(
      P_PARCEL_NO IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION SEQ_NO(
      P_PARCEL_NO IN NUMBER)
      RETURN NUMBER;
   FUNCTION RECORD_STATUS(
      P_PARCEL_NO IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION APPROVAL_DATE(
      P_PARCEL_NO IN NUMBER)
      RETURN DATE;
   FUNCTION LIFTING_NUMBER(
      P_PARCEL_NO IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION LIFTING_YEAR(
      P_PARCEL_NO IN NUMBER)
      RETURN NUMBER;
      TYPE REC_ROW_BY_PK IS RECORD (
         PARCEL_NO NUMBER ,
         PROJECT_CODE VARCHAR2 (6) ,
         LIFTING_YEAR NUMBER ,
         PRODUCT_IDENT VARCHAR2 (1) ,
         SEQ_NO NUMBER ,
         LIFTING_NUMBER VARCHAR2 (13) ,
         RECORD_STATUS VARCHAR2 (1) ,
         CREATED_BY VARCHAR2 (30) ,
         CREATED_DATE  DATE ,
         LAST_UPDATED_BY VARCHAR2 (30) ,
         LAST_UPDATED_DATE  DATE ,
         REV_NO NUMBER ,
         REV_TEXT VARCHAR2 (240) ,
         APPROVAL_BY VARCHAR2 (30) ,
         APPROVAL_DATE  DATE ,
         APPROVAL_STATE VARCHAR2 (1) ,
         REC_ID VARCHAR2 (32)  );
   FUNCTION ROW_BY_PK(
      P_PARCEL_NO IN NUMBER)
      RETURN REC_ROW_BY_PK;
   FUNCTION PRODUCT_IDENT(
      P_PARCEL_NO IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION REC_ID(
      P_PARCEL_NO IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION PROJECT_CODE(
      P_PARCEL_NO IN NUMBER)
      RETURN VARCHAR2;

END RP_CT_LIFTING_NUMBERS;

/



CREATE or REPLACE PACKAGE BODY RP_CT_LIFTING_NUMBERS
IS

   FUNCTION APPROVAL_BY(
      P_PARCEL_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (30) ;
   BEGIN
      ret_value := EC_CT_LIFTING_NUMBERS.APPROVAL_BY      (
         P_PARCEL_NO );
         RETURN ret_value;
   END APPROVAL_BY;
   FUNCTION APPROVAL_STATE(
      P_PARCEL_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_CT_LIFTING_NUMBERS.APPROVAL_STATE      (
         P_PARCEL_NO );
         RETURN ret_value;
   END APPROVAL_STATE;
   FUNCTION SEQ_NO(
      P_PARCEL_NO IN NUMBER)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CT_LIFTING_NUMBERS.SEQ_NO      (
         P_PARCEL_NO );
         RETURN ret_value;
   END SEQ_NO;
   FUNCTION RECORD_STATUS(
      P_PARCEL_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_CT_LIFTING_NUMBERS.RECORD_STATUS      (
         P_PARCEL_NO );
         RETURN ret_value;
   END RECORD_STATUS;
   FUNCTION APPROVAL_DATE(
      P_PARCEL_NO IN NUMBER)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CT_LIFTING_NUMBERS.APPROVAL_DATE      (
         P_PARCEL_NO );
         RETURN ret_value;
   END APPROVAL_DATE;
   FUNCTION LIFTING_NUMBER(
      P_PARCEL_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (13) ;
   BEGIN
      ret_value := EC_CT_LIFTING_NUMBERS.LIFTING_NUMBER      (
         P_PARCEL_NO );
         RETURN ret_value;
   END LIFTING_NUMBER;
   FUNCTION LIFTING_YEAR(
      P_PARCEL_NO IN NUMBER)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CT_LIFTING_NUMBERS.LIFTING_YEAR      (
         P_PARCEL_NO );
         RETURN ret_value;
   END LIFTING_YEAR;
   FUNCTION ROW_BY_PK(
      P_PARCEL_NO IN NUMBER)
      RETURN REC_ROW_BY_PK
   IS
      ret_value    REC_ROW_BY_PK ;
   BEGIN
      ret_value := EC_CT_LIFTING_NUMBERS.ROW_BY_PK      (
         P_PARCEL_NO );
         RETURN ret_value;
   END ROW_BY_PK;
   FUNCTION PRODUCT_IDENT(
      P_PARCEL_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_CT_LIFTING_NUMBERS.PRODUCT_IDENT      (
         P_PARCEL_NO );
         RETURN ret_value;
   END PRODUCT_IDENT;
   FUNCTION REC_ID(
      P_PARCEL_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CT_LIFTING_NUMBERS.REC_ID      (
         P_PARCEL_NO );
         RETURN ret_value;
   END REC_ID;
   FUNCTION PROJECT_CODE(
      P_PARCEL_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (6) ;
   BEGIN
      ret_value := EC_CT_LIFTING_NUMBERS.PROJECT_CODE      (
         P_PARCEL_NO );
         RETURN ret_value;
   END PROJECT_CODE;

END RP_CT_LIFTING_NUMBERS;

/
--GRANT EXECUTE ON ECKERNEL_WST.RP_CT_LIFTING_NUMBERS TO REPORT_ROLE_XXX;



 -- FINISH PKG_GEN_PKGS.sf_get_functions at:11/15/2018 10.17.09 AM


