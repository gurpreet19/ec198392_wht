
 -- START PKG_GEN_PKGS.sf_get_functions at:11/16/2018 09.24.09 AM


CREATE or REPLACE PACKAGE RPDP_DYNSQL
IS

   FUNCTION EXECUTE_SINGLEROW_NUMBER(
      P_STATEMENT IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION SAFESTRING(
      P_STRING IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION SAFENUMBER(
      P_NUMBER IN NUMBER,
      P_DATATYPE IN VARCHAR2 DEFAULT 'NUMBER')
      RETURN VARCHAR2;
   FUNCTION ANYDATA_TO_STRING(
      P_DATETYPE IN VARCHAR2,
      P_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION COMPARETABLESTRUCTURE(
      P_TABLE_1 IN VARCHAR2,
      P_TABLE_2 IN VARCHAR2,
      P_IGNORE_COLUMNS IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION EXECUTE_SINGLEROW_VARCHAR2(
      P_STATEMENT IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION SAFEDATE(
      P_DATE IN DATE)
      RETURN VARCHAR2;
   FUNCTION EXECUTE_SINGLEROW_DATE(
      P_STATEMENT IN VARCHAR2)
      RETURN DATE;
   FUNCTION DATE_TO_STRING(
      P_DAYTIME IN DATE)
      RETURN VARCHAR2;

END RPDP_DYNSQL;

/



CREATE or REPLACE PACKAGE BODY RPDP_DYNSQL
IS

   FUNCTION EXECUTE_SINGLEROW_NUMBER(
      P_STATEMENT IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECDP_DYNSQL.EXECUTE_SINGLEROW_NUMBER      (
         P_STATEMENT );
         RETURN ret_value;
   END EXECUTE_SINGLEROW_NUMBER;
   FUNCTION SAFESTRING(
      P_STRING IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_DYNSQL.SAFESTRING      (
         P_STRING );
         RETURN ret_value;
   END SAFESTRING;
   FUNCTION SAFENUMBER(
      P_NUMBER IN NUMBER,
      P_DATATYPE IN VARCHAR2 DEFAULT 'NUMBER')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_DYNSQL.SAFENUMBER      (
         P_NUMBER,
         P_DATATYPE );
         RETURN ret_value;
   END SAFENUMBER;
   FUNCTION ANYDATA_TO_STRING(
      P_DATETYPE IN VARCHAR2,
      P_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_DYNSQL.ANYDATA_TO_STRING      (
         P_DATETYPE,
         P_ID );
         RETURN ret_value;
   END ANYDATA_TO_STRING;
   FUNCTION COMPARETABLESTRUCTURE(
      P_TABLE_1 IN VARCHAR2,
      P_TABLE_2 IN VARCHAR2,
      P_IGNORE_COLUMNS IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECDP_DYNSQL.COMPARETABLESTRUCTURE      (
         P_TABLE_1,
         P_TABLE_2,
         P_IGNORE_COLUMNS );
         RETURN ret_value;
   END COMPARETABLESTRUCTURE;
   FUNCTION EXECUTE_SINGLEROW_VARCHAR2(
      P_STATEMENT IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_DYNSQL.EXECUTE_SINGLEROW_VARCHAR2      (
         P_STATEMENT );
         RETURN ret_value;
   END EXECUTE_SINGLEROW_VARCHAR2;
   FUNCTION SAFEDATE(
      P_DATE IN DATE)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_DYNSQL.SAFEDATE      (
         P_DATE );
         RETURN ret_value;
   END SAFEDATE;
   FUNCTION EXECUTE_SINGLEROW_DATE(
      P_STATEMENT IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := ECDP_DYNSQL.EXECUTE_SINGLEROW_DATE      (
         P_STATEMENT );
         RETURN ret_value;
   END EXECUTE_SINGLEROW_DATE;
   FUNCTION DATE_TO_STRING(
      P_DAYTIME IN DATE)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_DYNSQL.DATE_TO_STRING      (
         P_DAYTIME );
         RETURN ret_value;
   END DATE_TO_STRING;

END RPDP_DYNSQL;

/
--GRANT EXECUTE ON ECKERNEL_WST.RPDP_DYNSQL TO REPORT_ROLE_XXX;



 -- FINISH PKG_GEN_PKGS.sf_get_functions at:11/16/2018 09.24.11 AM


