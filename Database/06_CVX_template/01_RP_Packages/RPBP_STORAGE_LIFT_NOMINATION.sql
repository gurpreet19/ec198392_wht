
 -- START PKG_GEN_PKGS.sf_get_functions at:11/16/2018 09.34.49 AM


CREATE or REPLACE PACKAGE RPBP_STORAGE_LIFT_NOMINATION
IS

   FUNCTION CALCNOMSPLITQTY(
      P_PARCEL_NO IN NUMBER,
      P_COMPANY_ID IN VARCHAR2,
      P_LIFTING_ACCOUNT_ID IN VARCHAR2,
      P_XTRA_QTY IN NUMBER DEFAULT 0)
      RETURN NUMBER;
   FUNCTION CALCSPLITQTY(
      P_PARCEL_NO IN NUMBER,
      P_COMPANY_ID IN VARCHAR2,
      P_LIFTING_ACCOUNT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_QTY IN NUMBER)
      RETURN NUMBER;
   FUNCTION EXPECTEDUNLOADDATE(
      P_PARCEL_NO IN NUMBER)
      RETURN DATE;
   FUNCTION GETUNLOADVOL(
      P_PARCEL_NO IN NUMBER,
      P_XTRA_QTY IN NUMBER DEFAULT 0)
      RETURN NUMBER;
   FUNCTION CALCAGGRSUBDAYSPLITQTY(
      P_PARCEL_NO IN NUMBER,
      P_COMPANY_ID IN VARCHAR2,
      P_LIFTING_ACCOUNT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_XTRA_QTY IN NUMBER DEFAULT 0)
      RETURN NUMBER;
   FUNCTION GETLIFTEDVOLSUBDAY(
      P_PARCEL_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_SUMMER_TIME IN VARCHAR2,
      P_XTRA_QTY IN NUMBER DEFAULT 0)
      RETURN NUMBER;
   FUNCTION GETLOADBALDELTAVOL(
      P_PARCEL_NO IN NUMBER,
      P_XTRA_QTY IN NUMBER DEFAULT 0)
      RETURN NUMBER;
   FUNCTION AGGRSUBDAYLIFTING(
      P_PARCEL_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COLUMN IN VARCHAR2 DEFAULT NULL,
      P_XTRA_QTY IN NUMBER DEFAULT 0)
      RETURN NUMBER;
   FUNCTION GETPRORATEDMONTHEND(
      P_PARCEL_NO IN NUMBER)
      RETURN NUMBER;
   FUNCTION GETUNLOADBALDELTAVOL(
      P_PARCEL_NO IN NUMBER,
      P_XTRA_QTY IN NUMBER DEFAULT 0)
      RETURN NUMBER;
   FUNCTION CALCACTUALSPLITQTY(
      P_PARCEL_NO IN NUMBER,
      P_COMPANY_ID IN VARCHAR2,
      P_LIFTING_ACCOUNT_ID IN VARCHAR2,
      P_XTRA_QTY IN NUMBER DEFAULT 0)
      RETURN NUMBER;
   FUNCTION GETLIFTEDVOL(
      P_PARCEL_NO IN NUMBER,
      P_XTRA_QTY IN NUMBER DEFAULT 0,
      P_INCL_UNLOAD IN VARCHAR2 DEFAULT 'Y')
      RETURN NUMBER;
   FUNCTION GETNOMTOLERANCEMAXVOL(
      P_PARCEL_NO IN NUMBER)
      RETURN NUMBER;
   FUNCTION INSERTREADYFORHABOUR(
      P_CARGO_STATUS IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION GETNOMTOLERANCEMINVOL(
      P_PARCEL_NO IN NUMBER)
      RETURN NUMBER;
   FUNCTION GETDEFSPLIT(
      P_PARCEL_NO IN NUMBER,
      P_LIFTING_ACCOUNT_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION GETNOMUNIT(
      P_OBJECT_ID IN VARCHAR2,
      P_XTRA_QTY IN NUMBER DEFAULT 0,
      P_LIFTING_EVENT IN VARCHAR2 DEFAULT 'LOAD')
      RETURN VARCHAR2;
   FUNCTION GETLIFTEDVOLBYINCOTERM(
      P_PARCEL_NO IN NUMBER,
      P_XTRA_QTY IN NUMBER)
      RETURN NUMBER;
   FUNCTION GETLOADBALDELTAVOLSUBDAY(
      P_PARCEL_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_SUMMER_TIME IN VARCHAR2,
      P_XTRA_QTY IN NUMBER DEFAULT 0)
      RETURN NUMBER;

END RPBP_STORAGE_LIFT_NOMINATION;

/



CREATE or REPLACE PACKAGE BODY RPBP_STORAGE_LIFT_NOMINATION
IS

   FUNCTION CALCNOMSPLITQTY(
      P_PARCEL_NO IN NUMBER,
      P_COMPANY_ID IN VARCHAR2,
      P_LIFTING_ACCOUNT_ID IN VARCHAR2,
      P_XTRA_QTY IN NUMBER DEFAULT 0)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_STORAGE_LIFT_NOMINATION.CALCNOMSPLITQTY      (
         P_PARCEL_NO,
         P_COMPANY_ID,
         P_LIFTING_ACCOUNT_ID,
         P_XTRA_QTY );
         RETURN ret_value;
   END CALCNOMSPLITQTY;
   FUNCTION CALCSPLITQTY(
      P_PARCEL_NO IN NUMBER,
      P_COMPANY_ID IN VARCHAR2,
      P_LIFTING_ACCOUNT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_QTY IN NUMBER)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_STORAGE_LIFT_NOMINATION.CALCSPLITQTY      (
         P_PARCEL_NO,
         P_COMPANY_ID,
         P_LIFTING_ACCOUNT_ID,
         P_DAYTIME,
         P_QTY );
         RETURN ret_value;
   END CALCSPLITQTY;
   FUNCTION EXPECTEDUNLOADDATE(
      P_PARCEL_NO IN NUMBER)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := ECBP_STORAGE_LIFT_NOMINATION.EXPECTEDUNLOADDATE      (
         P_PARCEL_NO );
         RETURN ret_value;
   END EXPECTEDUNLOADDATE;
   FUNCTION GETUNLOADVOL(
      P_PARCEL_NO IN NUMBER,
      P_XTRA_QTY IN NUMBER DEFAULT 0)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_STORAGE_LIFT_NOMINATION.GETUNLOADVOL      (
         P_PARCEL_NO,
         P_XTRA_QTY );
         RETURN ret_value;
   END GETUNLOADVOL;
   FUNCTION CALCAGGRSUBDAYSPLITQTY(
      P_PARCEL_NO IN NUMBER,
      P_COMPANY_ID IN VARCHAR2,
      P_LIFTING_ACCOUNT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_XTRA_QTY IN NUMBER DEFAULT 0)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_STORAGE_LIFT_NOMINATION.CALCAGGRSUBDAYSPLITQTY      (
         P_PARCEL_NO,
         P_COMPANY_ID,
         P_LIFTING_ACCOUNT_ID,
         P_DAYTIME,
         P_XTRA_QTY );
         RETURN ret_value;
   END CALCAGGRSUBDAYSPLITQTY;
   FUNCTION GETLIFTEDVOLSUBDAY(
      P_PARCEL_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_SUMMER_TIME IN VARCHAR2,
      P_XTRA_QTY IN NUMBER DEFAULT 0)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_STORAGE_LIFT_NOMINATION.GETLIFTEDVOLSUBDAY      (
         P_PARCEL_NO,
         P_DAYTIME,
         P_SUMMER_TIME,
         P_XTRA_QTY );
         RETURN ret_value;
   END GETLIFTEDVOLSUBDAY;
   FUNCTION GETLOADBALDELTAVOL(
      P_PARCEL_NO IN NUMBER,
      P_XTRA_QTY IN NUMBER DEFAULT 0)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_STORAGE_LIFT_NOMINATION.GETLOADBALDELTAVOL      (
         P_PARCEL_NO,
         P_XTRA_QTY );
         RETURN ret_value;
   END GETLOADBALDELTAVOL;
   FUNCTION AGGRSUBDAYLIFTING(
      P_PARCEL_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COLUMN IN VARCHAR2 DEFAULT NULL,
      P_XTRA_QTY IN NUMBER DEFAULT 0)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_STORAGE_LIFT_NOMINATION.AGGRSUBDAYLIFTING      (
         P_PARCEL_NO,
         P_DAYTIME,
         P_COLUMN,
         P_XTRA_QTY );
         RETURN ret_value;
   END AGGRSUBDAYLIFTING;
   FUNCTION GETPRORATEDMONTHEND(
      P_PARCEL_NO IN NUMBER)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_STORAGE_LIFT_NOMINATION.GETPRORATEDMONTHEND      (
         P_PARCEL_NO );
         RETURN ret_value;
   END GETPRORATEDMONTHEND;
   FUNCTION GETUNLOADBALDELTAVOL(
      P_PARCEL_NO IN NUMBER,
      P_XTRA_QTY IN NUMBER DEFAULT 0)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_STORAGE_LIFT_NOMINATION.GETUNLOADBALDELTAVOL      (
         P_PARCEL_NO,
         P_XTRA_QTY );
         RETURN ret_value;
   END GETUNLOADBALDELTAVOL;
   FUNCTION CALCACTUALSPLITQTY(
      P_PARCEL_NO IN NUMBER,
      P_COMPANY_ID IN VARCHAR2,
      P_LIFTING_ACCOUNT_ID IN VARCHAR2,
      P_XTRA_QTY IN NUMBER DEFAULT 0)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_STORAGE_LIFT_NOMINATION.CALCACTUALSPLITQTY      (
         P_PARCEL_NO,
         P_COMPANY_ID,
         P_LIFTING_ACCOUNT_ID,
         P_XTRA_QTY );
         RETURN ret_value;
   END CALCACTUALSPLITQTY;
   FUNCTION GETLIFTEDVOL(
      P_PARCEL_NO IN NUMBER,
      P_XTRA_QTY IN NUMBER DEFAULT 0,
      P_INCL_UNLOAD IN VARCHAR2 DEFAULT 'Y')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_STORAGE_LIFT_NOMINATION.GETLIFTEDVOL      (
         P_PARCEL_NO,
         P_XTRA_QTY,
         P_INCL_UNLOAD );
         RETURN ret_value;
   END GETLIFTEDVOL;
   FUNCTION GETNOMTOLERANCEMAXVOL(
      P_PARCEL_NO IN NUMBER)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_STORAGE_LIFT_NOMINATION.GETNOMTOLERANCEMAXVOL      (
         P_PARCEL_NO );
         RETURN ret_value;
   END GETNOMTOLERANCEMAXVOL;
   FUNCTION INSERTREADYFORHABOUR(
      P_CARGO_STATUS IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECBP_STORAGE_LIFT_NOMINATION.INSERTREADYFORHABOUR      (
         P_CARGO_STATUS );
         RETURN ret_value;
   END INSERTREADYFORHABOUR;
   FUNCTION GETNOMTOLERANCEMINVOL(
      P_PARCEL_NO IN NUMBER)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_STORAGE_LIFT_NOMINATION.GETNOMTOLERANCEMINVOL      (
         P_PARCEL_NO );
         RETURN ret_value;
   END GETNOMTOLERANCEMINVOL;
   FUNCTION GETDEFSPLIT(
      P_PARCEL_NO IN NUMBER,
      P_LIFTING_ACCOUNT_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_STORAGE_LIFT_NOMINATION.GETDEFSPLIT      (
         P_PARCEL_NO,
         P_LIFTING_ACCOUNT_ID );
         RETURN ret_value;
   END GETDEFSPLIT;
   FUNCTION GETNOMUNIT(
      P_OBJECT_ID IN VARCHAR2,
      P_XTRA_QTY IN NUMBER DEFAULT 0,
      P_LIFTING_EVENT IN VARCHAR2 DEFAULT 'LOAD')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECBP_STORAGE_LIFT_NOMINATION.GETNOMUNIT      (
         P_OBJECT_ID,
         P_XTRA_QTY,
         P_LIFTING_EVENT );
         RETURN ret_value;
   END GETNOMUNIT;
   FUNCTION GETLIFTEDVOLBYINCOTERM(
      P_PARCEL_NO IN NUMBER,
      P_XTRA_QTY IN NUMBER)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_STORAGE_LIFT_NOMINATION.GETLIFTEDVOLBYINCOTERM      (
         P_PARCEL_NO,
         P_XTRA_QTY );
         RETURN ret_value;
   END GETLIFTEDVOLBYINCOTERM;
   FUNCTION GETLOADBALDELTAVOLSUBDAY(
      P_PARCEL_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_SUMMER_TIME IN VARCHAR2,
      P_XTRA_QTY IN NUMBER DEFAULT 0)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_STORAGE_LIFT_NOMINATION.GETLOADBALDELTAVOLSUBDAY      (
         P_PARCEL_NO,
         P_DAYTIME,
         P_SUMMER_TIME,
         P_XTRA_QTY );
         RETURN ret_value;
   END GETLOADBALDELTAVOLSUBDAY;

END RPBP_STORAGE_LIFT_NOMINATION;

/
--GRANT EXECUTE ON ECKERNEL_WST.RPBP_STORAGE_LIFT_NOMINATION TO REPORT_ROLE_XXX;



 -- FINISH PKG_GEN_PKGS.sf_get_functions at:11/16/2018 09.34.54 AM


