
 -- START PKG_GEN_PKGS.sf_get_functions at:11/16/2018 09.22.58 AM


CREATE or REPLACE PACKAGE RPDP_MONTH_LOCK
IS

   FUNCTION BUILDIDENTIFIERSTRING(
      P_COL_LIST IN ECDP_MONTH_LOCK.COLUMN_LIST)
      RETURN VARCHAR2;
   FUNCTION LOCALLOCKEDMONTHAFFECTED(
      P_LOCAL_LOCK_LEVEL IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_FROM_DAYTIME IN DATE,
      P_TO_DAYTIME IN DATE)
      RETURN DATE;
   FUNCTION CHECKIFCOLUMNSUPDATED(
      P_COL_LIST IN ECDP_MONTH_LOCK.COLUMN_LIST)
      RETURN BOOLEAN;
   FUNCTION LOCALWITHINLOCKEDMONTH(
      P_LOCAL_LOCK_LEVEL IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN DATE;
   FUNCTION LOCKEDMONTHAFFECTED(
      P_FROM_DAYTIME IN DATE,
      P_TO_DAYTIME IN DATE)
      RETURN DATE;
   FUNCTION ISUPDATING(
      P_UPDATING IN BOOLEAN)
      RETURN VARCHAR2;
   FUNCTION LOCALBUILDIDENTIFIERSTRING(
      P_OBJ_ID IN VARCHAR2,
      P_MSG IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION LOCALLOCKCHECK(
      P_CALL_FUNC IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_FROMDATE IN DATE,
      P_TODATE IN DATE)
      RETURN DATE;
   FUNCTION LOCALLOCKEDMONTHAFFECTED(
      P_ALLOC_NETWORK_ID IN VARCHAR2,
      P_FROM_DAYTIME IN DATE,
      P_TO_DAYTIME IN DATE)
      RETURN DATE;
   FUNCTION WITHINLOCKEDMONTH(
      P_DAYTIME IN DATE)
      RETURN DATE;

END RPDP_MONTH_LOCK;

/



CREATE or REPLACE PACKAGE BODY RPDP_MONTH_LOCK
IS

   FUNCTION BUILDIDENTIFIERSTRING(
      P_COL_LIST IN ECDP_MONTH_LOCK.COLUMN_LIST)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_MONTH_LOCK.BUILDIDENTIFIERSTRING      (
         P_COL_LIST );
         RETURN ret_value;
   END BUILDIDENTIFIERSTRING;
   FUNCTION LOCALLOCKEDMONTHAFFECTED(
      P_LOCAL_LOCK_LEVEL IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_FROM_DAYTIME IN DATE,
      P_TO_DAYTIME IN DATE)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := ECDP_MONTH_LOCK.LOCALLOCKEDMONTHAFFECTED      (
         P_LOCAL_LOCK_LEVEL,
         P_OBJECT_ID,
         P_FROM_DAYTIME,
         P_TO_DAYTIME );
         RETURN ret_value;
   END LOCALLOCKEDMONTHAFFECTED;
   FUNCTION CHECKIFCOLUMNSUPDATED(
      P_COL_LIST IN ECDP_MONTH_LOCK.COLUMN_LIST)
      RETURN BOOLEAN
   IS
      ret_value    BOOLEAN ;
   BEGIN
      ret_value := ECDP_MONTH_LOCK.CHECKIFCOLUMNSUPDATED      (
         P_COL_LIST );
         RETURN ret_value;
   END CHECKIFCOLUMNSUPDATED;
   FUNCTION LOCALWITHINLOCKEDMONTH(
      P_LOCAL_LOCK_LEVEL IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := ECDP_MONTH_LOCK.LOCALWITHINLOCKEDMONTH      (
         P_LOCAL_LOCK_LEVEL,
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END LOCALWITHINLOCKEDMONTH;
   FUNCTION LOCKEDMONTHAFFECTED(
      P_FROM_DAYTIME IN DATE,
      P_TO_DAYTIME IN DATE)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := ECDP_MONTH_LOCK.LOCKEDMONTHAFFECTED      (
         P_FROM_DAYTIME,
         P_TO_DAYTIME );
         RETURN ret_value;
   END LOCKEDMONTHAFFECTED;
   FUNCTION ISUPDATING(
      P_UPDATING IN BOOLEAN)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_MONTH_LOCK.ISUPDATING      (
         P_UPDATING );
         RETURN ret_value;
   END ISUPDATING;
   FUNCTION LOCALBUILDIDENTIFIERSTRING(
      P_OBJ_ID IN VARCHAR2,
      P_MSG IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_MONTH_LOCK.LOCALBUILDIDENTIFIERSTRING      (
         P_OBJ_ID,
         P_MSG );
         RETURN ret_value;
   END LOCALBUILDIDENTIFIERSTRING;
   FUNCTION LOCALLOCKCHECK(
      P_CALL_FUNC IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_FROMDATE IN DATE,
      P_TODATE IN DATE)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := ECDP_MONTH_LOCK.LOCALLOCKCHECK      (
         P_CALL_FUNC,
         P_OBJECT_ID,
         P_FROMDATE,
         P_TODATE );
         RETURN ret_value;
   END LOCALLOCKCHECK;
   FUNCTION LOCALLOCKEDMONTHAFFECTED(
      P_ALLOC_NETWORK_ID IN VARCHAR2,
      P_FROM_DAYTIME IN DATE,
      P_TO_DAYTIME IN DATE)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := ECDP_MONTH_LOCK.LOCALLOCKEDMONTHAFFECTED      (
         P_ALLOC_NETWORK_ID,
         P_FROM_DAYTIME,
         P_TO_DAYTIME );
         RETURN ret_value;
   END LOCALLOCKEDMONTHAFFECTED;
   FUNCTION WITHINLOCKEDMONTH(
      P_DAYTIME IN DATE)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := ECDP_MONTH_LOCK.WITHINLOCKEDMONTH      (
         P_DAYTIME );
         RETURN ret_value;
   END WITHINLOCKEDMONTH;

END RPDP_MONTH_LOCK;

/
--GRANT EXECUTE ON ECKERNEL_WST.RPDP_MONTH_LOCK TO REPORT_ROLE_XXX;



 -- FINISH PKG_GEN_PKGS.sf_get_functions at:11/16/2018 09.23.00 AM


