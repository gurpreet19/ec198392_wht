
 -- START PKG_GEN_PKGS.sf_get_functions at:05/07/2019 11.45.36 AM


CREATE or REPLACE PACKAGE RPDP_STREAM_ANALYSIS
IS

      TYPE REC_GETAGAANALYSIS IS RECORD (
         ANALYSIS_NO NUMBER ,
         ANALYSIS_TYPE VARCHAR2 (32) ,
         OBJECT_ID VARCHAR2 (32) ,
         CLASS_NAME VARCHAR2 (24) ,
         DAYTIME  DATE ,
         VALID_FROM_DATE  DATE ,
         ANALYSIS_STATUS VARCHAR2 (32) ,
         USE_AGA8_IND VARCHAR2 (1) ,
         GS_CALC_METHOD VARCHAR2 (32) ,
         TS NUMBER ,
         PS NUMBER ,
         RHOTP NUMBER ,
         RHOS NUMBER ,
         FPVS NUMBER ,
         VISC NUMBER ,
         KFAC NUMBER ,
         IFLUID VARCHAR2 (1) ,
         GRS NUMBER ,
         ZAIRS NUMBER ,
         HV NUMBER ,
         GRGR NUMBER ,
         X1 NUMBER ,
         X2 NUMBER ,
         X3 NUMBER ,
         X4 NUMBER ,
         TB NUMBER ,
         PB NUMBER ,
         TGR NUMBER ,
         PGR NUMBER ,
         TD NUMBER ,
         PD NUMBER ,
         TH NUMBER ,
         VALUE_1 NUMBER ,
         VALUE_2 NUMBER ,
         VALUE_3 NUMBER ,
         VALUE_4 NUMBER ,
         VALUE_5 NUMBER ,
         VALUE_6 NUMBER ,
         VALUE_7 NUMBER ,
         VALUE_8 NUMBER ,
         VALUE_9 NUMBER ,
         VALUE_10 NUMBER ,
         TEXT_1 VARCHAR2 (16) ,
         TEXT_2 VARCHAR2 (32) ,
         TEXT_3 VARCHAR2 (240) ,
         TEXT_4 VARCHAR2 (2000) ,
         RECORD_STATUS VARCHAR2 (1) ,
         CREATED_BY VARCHAR2 (30) ,
         CREATED_DATE  DATE ,
         LAST_UPDATED_BY VARCHAR2 (30) ,
         LAST_UPDATED_DATE  DATE ,
         REV_NO NUMBER ,
         REV_TEXT VARCHAR2 (2000) ,
         APPROVAL_BY VARCHAR2 (30) ,
         APPROVAL_DATE  DATE ,
         APPROVAL_STATE VARCHAR2 (1) ,
         REC_ID VARCHAR2 (32) ,
         AGA3_TYPE VARCHAR2 (32) ,
         COMPRESSIBILITY_FLOW NUMBER ,
         COMPRESSIBILITY_STD NUMBER ,
         CONDITION_FACTOR NUMBER ,
         EFF_CORR_FACTOR NUMBER  );
   FUNCTION GETAGAANALYSIS(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN REC_GETAGAANALYSIS;
   FUNCTION GETBSWWEIGHTFRAC(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
      TYPE REC_GETNEXTAGAANALYSISSAMPLE IS RECORD (
         ANALYSIS_NO NUMBER ,
         ANALYSIS_TYPE VARCHAR2 (32) ,
         OBJECT_ID VARCHAR2 (32) ,
         CLASS_NAME VARCHAR2 (24) ,
         DAYTIME  DATE ,
         VALID_FROM_DATE  DATE ,
         ANALYSIS_STATUS VARCHAR2 (32) ,
         USE_AGA8_IND VARCHAR2 (1) ,
         GS_CALC_METHOD VARCHAR2 (32) ,
         TS NUMBER ,
         PS NUMBER ,
         RHOTP NUMBER ,
         RHOS NUMBER ,
         FPVS NUMBER ,
         VISC NUMBER ,
         KFAC NUMBER ,
         IFLUID VARCHAR2 (1) ,
         GRS NUMBER ,
         ZAIRS NUMBER ,
         HV NUMBER ,
         GRGR NUMBER ,
         X1 NUMBER ,
         X2 NUMBER ,
         X3 NUMBER ,
         X4 NUMBER ,
         TB NUMBER ,
         PB NUMBER ,
         TGR NUMBER ,
         PGR NUMBER ,
         TD NUMBER ,
         PD NUMBER ,
         TH NUMBER ,
         VALUE_1 NUMBER ,
         VALUE_2 NUMBER ,
         VALUE_3 NUMBER ,
         VALUE_4 NUMBER ,
         VALUE_5 NUMBER ,
         VALUE_6 NUMBER ,
         VALUE_7 NUMBER ,
         VALUE_8 NUMBER ,
         VALUE_9 NUMBER ,
         VALUE_10 NUMBER ,
         TEXT_1 VARCHAR2 (16) ,
         TEXT_2 VARCHAR2 (32) ,
         TEXT_3 VARCHAR2 (240) ,
         TEXT_4 VARCHAR2 (2000) ,
         RECORD_STATUS VARCHAR2 (1) ,
         CREATED_BY VARCHAR2 (30) ,
         CREATED_DATE  DATE ,
         LAST_UPDATED_BY VARCHAR2 (30) ,
         LAST_UPDATED_DATE  DATE ,
         REV_NO NUMBER ,
         REV_TEXT VARCHAR2 (2000) ,
         APPROVAL_BY VARCHAR2 (30) ,
         APPROVAL_DATE  DATE ,
         APPROVAL_STATE VARCHAR2 (1) ,
         REC_ID VARCHAR2 (32) ,
         AGA3_TYPE VARCHAR2 (32) ,
         COMPRESSIBILITY_FLOW NUMBER ,
         COMPRESSIBILITY_STD NUMBER ,
         CONDITION_FACTOR NUMBER ,
         EFF_CORR_FACTOR NUMBER  );
   FUNCTION GETNEXTAGAANALYSISSAMPLE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN REC_GETNEXTAGAANALYSISSAMPLE;
   FUNCTION GETAGAANALYSISITEM(
      P_OBJECT_ID IN VARCHAR2,
      P_ITEM IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION GETBSWVOLFRAC(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION GETCOMPOSITEANALYSISCOMMENT(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN VARCHAR2;
   FUNCTION GETCOMPOSITEANALYSISSTATUS(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN VARCHAR2;
   FUNCTION GETPREVANALYSISDAYTIME(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_ANALYSIS_TYPE IN VARCHAR2,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE;
   FUNCTION GETDAYOILINWATER(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION GETSALTWEIGHTFRAC(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;

END RPDP_STREAM_ANALYSIS;

/



CREATE or REPLACE PACKAGE BODY RPDP_STREAM_ANALYSIS
IS

   FUNCTION GETAGAANALYSIS(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN REC_GETAGAANALYSIS
   IS
      ret_value    REC_GETAGAANALYSIS ;
   BEGIN
      ret_value := ECDP_STREAM_ANALYSIS.GETAGAANALYSIS      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END GETAGAANALYSIS;
   FUNCTION GETBSWWEIGHTFRAC(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECDP_STREAM_ANALYSIS.GETBSWWEIGHTFRAC      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END GETBSWWEIGHTFRAC;
   FUNCTION GETNEXTAGAANALYSISSAMPLE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN REC_GETNEXTAGAANALYSISSAMPLE
   IS
      ret_value    REC_GETNEXTAGAANALYSISSAMPLE ;
   BEGIN
      ret_value := ECDP_STREAM_ANALYSIS.GETNEXTAGAANALYSISSAMPLE      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END GETNEXTAGAANALYSISSAMPLE;
   FUNCTION GETAGAANALYSISITEM(
      P_OBJECT_ID IN VARCHAR2,
      P_ITEM IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECDP_STREAM_ANALYSIS.GETAGAANALYSISITEM      (
         P_OBJECT_ID,
         P_ITEM,
         P_DAYTIME );
         RETURN ret_value;
   END GETAGAANALYSISITEM;
   FUNCTION GETBSWVOLFRAC(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECDP_STREAM_ANALYSIS.GETBSWVOLFRAC      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END GETBSWVOLFRAC;
   FUNCTION GETCOMPOSITEANALYSISCOMMENT(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_STREAM_ANALYSIS.GETCOMPOSITEANALYSISCOMMENT      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END GETCOMPOSITEANALYSISCOMMENT;
   FUNCTION GETCOMPOSITEANALYSISSTATUS(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_STREAM_ANALYSIS.GETCOMPOSITEANALYSISSTATUS      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END GETCOMPOSITEANALYSISSTATUS;
   FUNCTION GETPREVANALYSISDAYTIME(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_ANALYSIS_TYPE IN VARCHAR2,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := ECDP_STREAM_ANALYSIS.GETPREVANALYSISDAYTIME      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_ANALYSIS_TYPE,
         P_NUM_ROWS );
         RETURN ret_value;
   END GETPREVANALYSISDAYTIME;
   FUNCTION GETDAYOILINWATER(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECDP_STREAM_ANALYSIS.GETDAYOILINWATER      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END GETDAYOILINWATER;
   FUNCTION GETSALTWEIGHTFRAC(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECDP_STREAM_ANALYSIS.GETSALTWEIGHTFRAC      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END GETSALTWEIGHTFRAC;

END RPDP_STREAM_ANALYSIS;

/
--GRANT EXECUTE ON ECKERNEL_WST.RPDP_STREAM_ANALYSIS TO REPORT_ROLE_XXX;



 -- FINISH PKG_GEN_PKGS.sf_get_functions at:05/07/2019 11.45.39 AM


