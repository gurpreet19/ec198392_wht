
 -- START PKG_GEN_PKGS.sf_get_functions at:11/15/2018 08.23.42 AM


CREATE or REPLACE PACKAGE RP_PROCESS_MONITOR
IS

   FUNCTION SORT_ORDER(
      P_PROCESS_MONITOR_NO IN NUMBER)
      RETURN NUMBER;
   FUNCTION APPROVAL_BY(
      P_PROCESS_MONITOR_NO IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION APPROVAL_STATE(
      P_PROCESS_MONITOR_NO IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION DATE_IMPL_CLASSPATH(
      P_PROCESS_MONITOR_NO IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION DATE_PARAM(
      P_PROCESS_MONITOR_NO IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION FUNCTIONAL_AREA_ID(
      P_PROCESS_MONITOR_NO IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION USE_POP_UP_ON_DRILL_IND(
      P_PROCESS_MONITOR_NO IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION RECORD_STATUS(
      P_PROCESS_MONITOR_NO IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION APPROVAL_DATE(
      P_PROCESS_MONITOR_NO IN NUMBER)
      RETURN DATE;
   FUNCTION NAME(
      P_PROCESS_MONITOR_NO IN NUMBER)
      RETURN VARCHAR2;
      TYPE REC_ROW_BY_PK IS RECORD (
         PROCESS_MONITOR_NO NUMBER ,
         NAME VARCHAR2 (240) ,
         FUNCTIONAL_AREA_ID VARCHAR2 (32) ,
         DATE_IMPL_CLASSPATH VARCHAR2 (256) ,
         USE_POP_UP_ON_DRILL_IND VARCHAR2 (1) ,
         DATE_PARAM VARCHAR2 (256) ,
         SORT_ORDER NUMBER ,
         RECORD_STATUS VARCHAR2 (1) ,
         CREATED_BY VARCHAR2 (30) ,
         CREATED_DATE  DATE ,
         LAST_UPDATED_BY VARCHAR2 (30) ,
         LAST_UPDATED_DATE  DATE ,
         REV_NO NUMBER ,
         REV_TEXT VARCHAR2 (2000) ,
         APPROVAL_STATE VARCHAR2 (1) ,
         APPROVAL_BY VARCHAR2 (30) ,
         APPROVAL_DATE  DATE ,
         REC_ID VARCHAR2 (32)  );
   FUNCTION ROW_BY_PK(
      P_PROCESS_MONITOR_NO IN NUMBER)
      RETURN REC_ROW_BY_PK;
   FUNCTION REC_ID(
      P_PROCESS_MONITOR_NO IN NUMBER)
      RETURN VARCHAR2;

END RP_PROCESS_MONITOR;

/



CREATE or REPLACE PACKAGE BODY RP_PROCESS_MONITOR
IS

   FUNCTION SORT_ORDER(
      P_PROCESS_MONITOR_NO IN NUMBER)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_PROCESS_MONITOR.SORT_ORDER      (
         P_PROCESS_MONITOR_NO );
         RETURN ret_value;
   END SORT_ORDER;
   FUNCTION APPROVAL_BY(
      P_PROCESS_MONITOR_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (30) ;
   BEGIN
      ret_value := EC_PROCESS_MONITOR.APPROVAL_BY      (
         P_PROCESS_MONITOR_NO );
         RETURN ret_value;
   END APPROVAL_BY;
   FUNCTION APPROVAL_STATE(
      P_PROCESS_MONITOR_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_PROCESS_MONITOR.APPROVAL_STATE      (
         P_PROCESS_MONITOR_NO );
         RETURN ret_value;
   END APPROVAL_STATE;
   FUNCTION DATE_IMPL_CLASSPATH(
      P_PROCESS_MONITOR_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (256) ;
   BEGIN
      ret_value := EC_PROCESS_MONITOR.DATE_IMPL_CLASSPATH      (
         P_PROCESS_MONITOR_NO );
         RETURN ret_value;
   END DATE_IMPL_CLASSPATH;
   FUNCTION DATE_PARAM(
      P_PROCESS_MONITOR_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (256) ;
   BEGIN
      ret_value := EC_PROCESS_MONITOR.DATE_PARAM      (
         P_PROCESS_MONITOR_NO );
         RETURN ret_value;
   END DATE_PARAM;
   FUNCTION FUNCTIONAL_AREA_ID(
      P_PROCESS_MONITOR_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_PROCESS_MONITOR.FUNCTIONAL_AREA_ID      (
         P_PROCESS_MONITOR_NO );
         RETURN ret_value;
   END FUNCTIONAL_AREA_ID;
   FUNCTION USE_POP_UP_ON_DRILL_IND(
      P_PROCESS_MONITOR_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_PROCESS_MONITOR.USE_POP_UP_ON_DRILL_IND      (
         P_PROCESS_MONITOR_NO );
         RETURN ret_value;
   END USE_POP_UP_ON_DRILL_IND;
   FUNCTION RECORD_STATUS(
      P_PROCESS_MONITOR_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_PROCESS_MONITOR.RECORD_STATUS      (
         P_PROCESS_MONITOR_NO );
         RETURN ret_value;
   END RECORD_STATUS;
   FUNCTION APPROVAL_DATE(
      P_PROCESS_MONITOR_NO IN NUMBER)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_PROCESS_MONITOR.APPROVAL_DATE      (
         P_PROCESS_MONITOR_NO );
         RETURN ret_value;
   END APPROVAL_DATE;
   FUNCTION NAME(
      P_PROCESS_MONITOR_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_PROCESS_MONITOR.NAME      (
         P_PROCESS_MONITOR_NO );
         RETURN ret_value;
   END NAME;
   FUNCTION ROW_BY_PK(
      P_PROCESS_MONITOR_NO IN NUMBER)
      RETURN REC_ROW_BY_PK
   IS
      ret_value    REC_ROW_BY_PK ;
   BEGIN
      ret_value := EC_PROCESS_MONITOR.ROW_BY_PK      (
         P_PROCESS_MONITOR_NO );
         RETURN ret_value;
   END ROW_BY_PK;
   FUNCTION REC_ID(
      P_PROCESS_MONITOR_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_PROCESS_MONITOR.REC_ID      (
         P_PROCESS_MONITOR_NO );
         RETURN ret_value;
   END REC_ID;

END RP_PROCESS_MONITOR;

/
--GRANT EXECUTE ON ECKERNEL_WST.RP_PROCESS_MONITOR TO REPORT_ROLE_XXX;



 -- FINISH PKG_GEN_PKGS.sf_get_functions at:11/15/2018 08.23.45 AM


