
 -- START PKG_GEN_PKGS.sf_get_functions at:11/15/2018 08.05.42 AM


CREATE or REPLACE PACKAGE RP_REPORT_DEFINITION
IS

   FUNCTION SORT_ORDER(
      P_REPORT_DEFINITION_NO IN NUMBER)
      RETURN NUMBER;
   FUNCTION TEMPLATE_CODE(
      P_REPORT_DEFINITION_NO IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION APPROVAL_BY(
      P_REPORT_DEFINITION_NO IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION APPROVAL_STATE(
      P_REPORT_DEFINITION_NO IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION REP_GROUP_CODE(
      P_REPORT_DEFINITION_NO IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION NEXT_DAYTIME(
      P_REPORT_DEFINITION_NO IN NUMBER,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE;
   FUNCTION PREV_EQUAL_DAYTIME(
      P_REPORT_DEFINITION_NO IN NUMBER,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE;
   FUNCTION NEXT_EQUAL_DAYTIME(
      P_REPORT_DEFINITION_NO IN NUMBER,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE;
   FUNCTION PREV_DAYTIME(
      P_REPORT_DEFINITION_NO IN NUMBER,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE;
   FUNCTION RECORD_STATUS(
      P_REPORT_DEFINITION_NO IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION APPROVAL_DATE(
      P_REPORT_DEFINITION_NO IN NUMBER)
      RETURN DATE;
      TYPE REC_ROW_BY_PK IS RECORD (
         REPORT_DEFINITION_NO NUMBER ,
         DAYTIME  DATE ,
         REP_GROUP_CODE VARCHAR2 (32) ,
         TEMPLATE_CODE VARCHAR2 (32) ,
         SORT_ORDER NUMBER ,
         RECORD_STATUS VARCHAR2 (1) ,
         CREATED_BY VARCHAR2 (30) ,
         CREATED_DATE  DATE ,
         LAST_UPDATED_BY VARCHAR2 (30) ,
         LAST_UPDATED_DATE  DATE ,
         REV_NO NUMBER ,
         REV_TEXT VARCHAR2 (2000) ,
         APPROVAL_STATE VARCHAR2 (1) ,
         APPROVAL_BY VARCHAR2 (30) ,
         APPROVAL_DATE  DATE ,
         REC_ID VARCHAR2 (32)  );
   FUNCTION ROW_BY_PK(
      P_REPORT_DEFINITION_NO IN NUMBER)
      RETURN REC_ROW_BY_PK;
   FUNCTION REC_ID(
      P_REPORT_DEFINITION_NO IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION DAYTIME(
      P_REPORT_DEFINITION_NO IN NUMBER)
      RETURN DATE;

END RP_REPORT_DEFINITION;

/



CREATE or REPLACE PACKAGE BODY RP_REPORT_DEFINITION
IS

   FUNCTION SORT_ORDER(
      P_REPORT_DEFINITION_NO IN NUMBER)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_REPORT_DEFINITION.SORT_ORDER      (
         P_REPORT_DEFINITION_NO );
         RETURN ret_value;
   END SORT_ORDER;
   FUNCTION TEMPLATE_CODE(
      P_REPORT_DEFINITION_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_REPORT_DEFINITION.TEMPLATE_CODE      (
         P_REPORT_DEFINITION_NO );
         RETURN ret_value;
   END TEMPLATE_CODE;
   FUNCTION APPROVAL_BY(
      P_REPORT_DEFINITION_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (30) ;
   BEGIN
      ret_value := EC_REPORT_DEFINITION.APPROVAL_BY      (
         P_REPORT_DEFINITION_NO );
         RETURN ret_value;
   END APPROVAL_BY;
   FUNCTION APPROVAL_STATE(
      P_REPORT_DEFINITION_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_REPORT_DEFINITION.APPROVAL_STATE      (
         P_REPORT_DEFINITION_NO );
         RETURN ret_value;
   END APPROVAL_STATE;
   FUNCTION REP_GROUP_CODE(
      P_REPORT_DEFINITION_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_REPORT_DEFINITION.REP_GROUP_CODE      (
         P_REPORT_DEFINITION_NO );
         RETURN ret_value;
   END REP_GROUP_CODE;
   FUNCTION NEXT_DAYTIME(
      P_REPORT_DEFINITION_NO IN NUMBER,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_REPORT_DEFINITION.NEXT_DAYTIME      (
         P_REPORT_DEFINITION_NO,
         P_NUM_ROWS );
         RETURN ret_value;
   END NEXT_DAYTIME;
   FUNCTION PREV_EQUAL_DAYTIME(
      P_REPORT_DEFINITION_NO IN NUMBER,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_REPORT_DEFINITION.PREV_EQUAL_DAYTIME      (
         P_REPORT_DEFINITION_NO,
         P_NUM_ROWS );
         RETURN ret_value;
   END PREV_EQUAL_DAYTIME;
   FUNCTION NEXT_EQUAL_DAYTIME(
      P_REPORT_DEFINITION_NO IN NUMBER,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_REPORT_DEFINITION.NEXT_EQUAL_DAYTIME      (
         P_REPORT_DEFINITION_NO,
         P_NUM_ROWS );
         RETURN ret_value;
   END NEXT_EQUAL_DAYTIME;
   FUNCTION PREV_DAYTIME(
      P_REPORT_DEFINITION_NO IN NUMBER,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_REPORT_DEFINITION.PREV_DAYTIME      (
         P_REPORT_DEFINITION_NO,
         P_NUM_ROWS );
         RETURN ret_value;
   END PREV_DAYTIME;
   FUNCTION RECORD_STATUS(
      P_REPORT_DEFINITION_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_REPORT_DEFINITION.RECORD_STATUS      (
         P_REPORT_DEFINITION_NO );
         RETURN ret_value;
   END RECORD_STATUS;
   FUNCTION APPROVAL_DATE(
      P_REPORT_DEFINITION_NO IN NUMBER)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_REPORT_DEFINITION.APPROVAL_DATE      (
         P_REPORT_DEFINITION_NO );
         RETURN ret_value;
   END APPROVAL_DATE;
   FUNCTION ROW_BY_PK(
      P_REPORT_DEFINITION_NO IN NUMBER)
      RETURN REC_ROW_BY_PK
   IS
      ret_value    REC_ROW_BY_PK ;
   BEGIN
      ret_value := EC_REPORT_DEFINITION.ROW_BY_PK      (
         P_REPORT_DEFINITION_NO );
         RETURN ret_value;
   END ROW_BY_PK;
   FUNCTION REC_ID(
      P_REPORT_DEFINITION_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_REPORT_DEFINITION.REC_ID      (
         P_REPORT_DEFINITION_NO );
         RETURN ret_value;
   END REC_ID;
   FUNCTION DAYTIME(
      P_REPORT_DEFINITION_NO IN NUMBER)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_REPORT_DEFINITION.DAYTIME      (
         P_REPORT_DEFINITION_NO );
         RETURN ret_value;
   END DAYTIME;

END RP_REPORT_DEFINITION;

/
--GRANT EXECUTE ON ECKERNEL_WST.RP_REPORT_DEFINITION TO REPORT_ROLE_XXX;



 -- FINISH PKG_GEN_PKGS.sf_get_functions at:11/15/2018 08.05.46 AM


