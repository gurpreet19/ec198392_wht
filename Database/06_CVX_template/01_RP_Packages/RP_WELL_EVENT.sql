
 -- START PKG_GEN_PKGS.sf_get_functions at:05/07/2019 05.17.58 AM


CREATE or REPLACE PACKAGE RP_WELL_EVENT
IS

   FUNCTION BH_TEMP(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION DATE_10(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN DATE;
   FUNCTION EVENT_DURATION(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION GRS_OIL_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION MATH_API(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_AVG_ANNULUS_PRESS_4(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_AVG_ANNULUS_PRESS_5(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_BH_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_BH_TEMP(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_CGR(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_COND_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_DRAINAGE_CONST(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_SALES_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_STROKE_MINUTE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION PUMP_SIZE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION STEAM_QUALITY(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION TEST_DATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN DATE;
   FUNCTION TEXT_3(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;
   FUNCTION TEXT_4(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;
   FUNCTION TEXT_7(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;
   FUNCTION VALUE_16(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION VALUE_18(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION WH_TEMP(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION APPROVAL_BY(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;
   FUNCTION APPROVAL_STATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;
   FUNCTION AVG_ANNULUS_PRESS_3(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION AVG_ANNULUS_PRESS_5(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION GAS_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION MATH_AVG_ANNULUS_PRESS_3(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_GRS_OIL_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_INJECTIVITY_INDEX(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_MOTOR_SIZE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_PUMP_DEPTH(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_RESERVOIR_PRESS_DATUM(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_RUN_HOURS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_VALUE_15(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_VALUE_3(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_VALUE_4(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_VALUE_8(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION NET_OIL_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION PUMP_DEPTH(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION RUN_HOURS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION STATUS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;
   FUNCTION VALUE_5(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION AVG_GL_CHOKE_SIZE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION DATE_7(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN DATE;
   FUNCTION DATE_9(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN DATE;
   FUNCTION DRAINAGE_CONST(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION ESTIMATE_REASON(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;
   FUNCTION INJECTIVITY_INDEX(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION MATH_DILUENT_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_FILTER_DIFF_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_INJ_LINE_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_NET_OIL_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_NON_IDEAL_GAS_BEHAV(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_RPM(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_SUM_INJ_VOL(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_VALUE_11(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_VALUE_19(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_VALUE_20(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_VALUE_6(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_WATER_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION NEXT_DAYTIME(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE;
   FUNCTION NON_IDEAL_GAS_BEHAV(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION PREV_EQUAL_DAYTIME(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE;
   FUNCTION RATE_SOURCE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;
   FUNCTION RPM(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION TEXT_10(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;
   FUNCTION TEXT_18(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;
   FUNCTION TEXT_19(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;
   FUNCTION TEXT_5(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;
   FUNCTION TEXT_6(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;
   FUNCTION USE_IN_ALLOC(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;
   FUNCTION WH_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION AVG_ANNULUS_PRESS_4(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION AVG_CHOKE_SIZE_2(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION AVG_GL_DIFF_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION AVG_GL_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION AVG_WH_DSC_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION COMMENTS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;
   FUNCTION COUNT_ROWS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE)
      RETURN NUMBER;
   FUNCTION DATE_3(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN DATE;
   FUNCTION DATE_5(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN DATE;
   FUNCTION EVENT_DAY(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN DATE;
   FUNCTION GL_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION MATH_AVG_ANNULUS_PRESS_2(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_AVG_GL_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_AVG_INJ_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_BS_W(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_GOR(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_MAX_INJ_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_PUMP_SIZE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_VALUE_1(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_VALUE_5(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_VALUE_7(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_VALUE_9(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MAX_INJ_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION NEXT_EQUAL_DAYTIME(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE;
   FUNCTION RATE_CALC_METHOD(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;
   FUNCTION RESERVOIR_PRESS_DATUM(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION SUM_INJ_VOL(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION TEXT_14(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;
   FUNCTION TEXT_17(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;
   FUNCTION TEXT_20(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;
   FUNCTION UTC_DAYTIME(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN DATE;
   FUNCTION VALUE_12(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION VALUE_6(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION ANNULUS_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION DATE_2(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN DATE;
   FUNCTION GOR(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION INJ_LINE_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION INJ_LINE_TEMP(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION MATH_AVG_GL_CHOKE_SIZE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_AVG_WH_DSC_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_STROKE_LENGTH(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_VALUE_13(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_VALUE_18(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MAX_WH_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION MOTOR_SIZE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION PREV_DAYTIME(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE;
   FUNCTION PUMP_UNIT_SIZE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;
   FUNCTION RECORD_STATUS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;
   FUNCTION STROKE_LENGTH(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION TEXT_16(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;
   FUNCTION VALUE_1(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION VALUE_15(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION VALUE_19(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION WASTE_TYPE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;
   FUNCTION APPROVAL_DATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN DATE;
   FUNCTION AVG_WH_USC_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION CGR(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION CYCLE_DURATION(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION DATE_6(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN DATE;
   FUNCTION ESTIMATE_METHOD(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;
   FUNCTION MATH_AVG_WH_USC_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_EVENT_DURATION(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_GAS_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_GL_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_HERTZ(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_SI_TUB_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_VALUE_12(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_VALUE_17(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_VALUE_2(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_WH_TEMP(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
      TYPE REC_ROW_BY_PK IS RECORD (
         OBJECT_ID VARCHAR2 (32) ,
         EVENT_TYPE VARCHAR2 (32) ,
         DAYTIME  DATE ,
         SUMMER_TIME VARCHAR2 (1) ,
         EVENT_DAY  DATE ,
         EVENT_DURATION NUMBER ,
         RATE_CALC_METHOD VARCHAR2 (32) ,
         RATE_SOURCE VARCHAR2 (32) ,
         CGR NUMBER ,
         CHOKE_SIZE NUMBER ,
         COND_RATE NUMBER ,
         DRAINAGE_CONST NUMBER ,
         BH_PRESS NUMBER ,
         BH_TEMP NUMBER ,
         WH_PRESS NUMBER ,
         WH_TEMP NUMBER ,
         GRS_OIL_RATE NUMBER ,
         BS_W NUMBER ,
         NET_OIL_RATE NUMBER ,
         WATER_RATE NUMBER ,
         GAS_RATE NUMBER ,
         GOR NUMBER ,
         GL_RATE NUMBER ,
         DILUENT_RATE NUMBER ,
         MAX_WH_PRESS NUMBER ,
         API NUMBER ,
         SALES_PRESS NUMBER ,
         SI_TUB_PRESS NUMBER ,
         AVG_INJ_RATE NUMBER ,
         AVG_GL_CHOKE_SIZE NUMBER ,
         AVG_GL_DIFF_PRESS NUMBER ,
         AVG_GL_PRESS NUMBER ,
         AVG_WH_DSC_PRESS NUMBER ,
         AVG_WH_USC_PRESS NUMBER ,
         AVG_CHOKE_SIZE_2 NUMBER ,
         SUM_INJ_VOL NUMBER ,
         WASTE_TYPE VARCHAR2 (240) ,
         ESTIMATE_REASON VARCHAR2 (2000) ,
         MAX_INJ_PRESS NUMBER ,
         MOTOR_SIZE NUMBER ,
         NON_IDEAL_GAS_BEHAV NUMBER ,
         TEST_TYPE VARCHAR2 (32) ,
         TEST_DATE  DATE ,
         CYCLE_DURATION NUMBER ,
         HERTZ NUMBER ,
         PUMP_DEPTH NUMBER ,
         PUMP_SIZE NUMBER ,
         PUMP_UNIT_SIZE VARCHAR2 (32) ,
         RPM NUMBER ,
         RUN_HOURS NUMBER ,
         STROKE_LENGTH NUMBER ,
         STROKE_MINUTE NUMBER ,
         ANNULUS_PRESS NUMBER ,
         FILTER_DIFF_PRESS NUMBER ,
         INJ_LINE_PRESS NUMBER ,
         INJ_LINE_TEMP NUMBER ,
         STEAM_QUALITY NUMBER ,
         STATUS VARCHAR2 (32) ,
         USE_IN_ALLOC VARCHAR2 (1) ,
         ESTIMATE_METHOD VARCHAR2 (32) ,
         COMMENTS VARCHAR2 (2000) ,
         VALUE_1 NUMBER ,
         VALUE_2 NUMBER ,
         VALUE_3 NUMBER ,
         VALUE_4 NUMBER ,
         VALUE_5 NUMBER ,
         VALUE_6 NUMBER ,
         VALUE_7 NUMBER ,
         VALUE_8 NUMBER ,
         VALUE_9 NUMBER ,
         VALUE_10 NUMBER ,
         VALUE_11 NUMBER ,
         VALUE_12 NUMBER ,
         VALUE_13 NUMBER ,
         VALUE_14 NUMBER ,
         VALUE_15 NUMBER ,
         VALUE_16 NUMBER ,
         VALUE_17 NUMBER ,
         VALUE_18 NUMBER ,
         VALUE_19 NUMBER ,
         VALUE_20 NUMBER ,
         TEXT_1 VARCHAR2 (16) ,
         TEXT_2 VARCHAR2 (32) ,
         TEXT_3 VARCHAR2 (240) ,
         TEXT_4 VARCHAR2 (2000) ,
         TEXT_5 VARCHAR2 (2000) ,
         TEXT_6 VARCHAR2 (2000) ,
         TEXT_7 VARCHAR2 (2000) ,
         TEXT_8 VARCHAR2 (2000) ,
         TEXT_9 VARCHAR2 (2000) ,
         TEXT_10 VARCHAR2 (2000) ,
         TEXT_11 VARCHAR2 (2000) ,
         TEXT_12 VARCHAR2 (2000) ,
         TEXT_13 VARCHAR2 (2000) ,
         TEXT_14 VARCHAR2 (2000) ,
         TEXT_15 VARCHAR2 (2000) ,
         TEXT_16 VARCHAR2 (2000) ,
         TEXT_17 VARCHAR2 (2000) ,
         TEXT_18 VARCHAR2 (2000) ,
         TEXT_19 VARCHAR2 (2000) ,
         TEXT_20 VARCHAR2 (2000) ,
         DATE_1  DATE ,
         DATE_2  DATE ,
         DATE_3  DATE ,
         DATE_4  DATE ,
         DATE_5  DATE ,
         DATE_6  DATE ,
         DATE_7  DATE ,
         DATE_8  DATE ,
         DATE_9  DATE ,
         DATE_10  DATE ,
         RECORD_STATUS VARCHAR2 (1) ,
         CREATED_BY VARCHAR2 (30) ,
         CREATED_DATE  DATE ,
         LAST_UPDATED_BY VARCHAR2 (30) ,
         LAST_UPDATED_DATE  DATE ,
         REV_NO NUMBER ,
         REV_TEXT VARCHAR2 (2000) ,
         APPROVAL_BY VARCHAR2 (30) ,
         APPROVAL_DATE  DATE ,
         APPROVAL_STATE VARCHAR2 (1) ,
         REC_ID VARCHAR2 (32) ,
         AVG_ANNULUS_PRESS_2 NUMBER ,
         AVG_ANNULUS_PRESS_3 NUMBER ,
         AVG_ANNULUS_PRESS_4 NUMBER ,
         AVG_ANNULUS_PRESS_5 NUMBER ,
         INJECTIVITY_INDEX NUMBER ,
         RESERVOIR_PRESS_DATUM NUMBER ,
         UTC_DAYTIME  DATE  );
   FUNCTION ROW_BY_PK(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN REC_ROW_BY_PK;
      TYPE REC_ROW_BY_REL_OPERATOR IS RECORD (
         OBJECT_ID VARCHAR2 (32) ,
         EVENT_TYPE VARCHAR2 (32) ,
         DAYTIME  DATE ,
         SUMMER_TIME VARCHAR2 (1) ,
         EVENT_DAY  DATE ,
         EVENT_DURATION NUMBER ,
         RATE_CALC_METHOD VARCHAR2 (32) ,
         RATE_SOURCE VARCHAR2 (32) ,
         CGR NUMBER ,
         CHOKE_SIZE NUMBER ,
         COND_RATE NUMBER ,
         DRAINAGE_CONST NUMBER ,
         BH_PRESS NUMBER ,
         BH_TEMP NUMBER ,
         WH_PRESS NUMBER ,
         WH_TEMP NUMBER ,
         GRS_OIL_RATE NUMBER ,
         BS_W NUMBER ,
         NET_OIL_RATE NUMBER ,
         WATER_RATE NUMBER ,
         GAS_RATE NUMBER ,
         GOR NUMBER ,
         GL_RATE NUMBER ,
         DILUENT_RATE NUMBER ,
         MAX_WH_PRESS NUMBER ,
         API NUMBER ,
         SALES_PRESS NUMBER ,
         SI_TUB_PRESS NUMBER ,
         AVG_INJ_RATE NUMBER ,
         AVG_GL_CHOKE_SIZE NUMBER ,
         AVG_GL_DIFF_PRESS NUMBER ,
         AVG_GL_PRESS NUMBER ,
         AVG_WH_DSC_PRESS NUMBER ,
         AVG_WH_USC_PRESS NUMBER ,
         AVG_CHOKE_SIZE_2 NUMBER ,
         SUM_INJ_VOL NUMBER ,
         WASTE_TYPE VARCHAR2 (240) ,
         ESTIMATE_REASON VARCHAR2 (2000) ,
         MAX_INJ_PRESS NUMBER ,
         MOTOR_SIZE NUMBER ,
         NON_IDEAL_GAS_BEHAV NUMBER ,
         TEST_TYPE VARCHAR2 (32) ,
         TEST_DATE  DATE ,
         CYCLE_DURATION NUMBER ,
         HERTZ NUMBER ,
         PUMP_DEPTH NUMBER ,
         PUMP_SIZE NUMBER ,
         PUMP_UNIT_SIZE VARCHAR2 (32) ,
         RPM NUMBER ,
         RUN_HOURS NUMBER ,
         STROKE_LENGTH NUMBER ,
         STROKE_MINUTE NUMBER ,
         ANNULUS_PRESS NUMBER ,
         FILTER_DIFF_PRESS NUMBER ,
         INJ_LINE_PRESS NUMBER ,
         INJ_LINE_TEMP NUMBER ,
         STEAM_QUALITY NUMBER ,
         STATUS VARCHAR2 (32) ,
         USE_IN_ALLOC VARCHAR2 (1) ,
         ESTIMATE_METHOD VARCHAR2 (32) ,
         COMMENTS VARCHAR2 (2000) ,
         VALUE_1 NUMBER ,
         VALUE_2 NUMBER ,
         VALUE_3 NUMBER ,
         VALUE_4 NUMBER ,
         VALUE_5 NUMBER ,
         VALUE_6 NUMBER ,
         VALUE_7 NUMBER ,
         VALUE_8 NUMBER ,
         VALUE_9 NUMBER ,
         VALUE_10 NUMBER ,
         VALUE_11 NUMBER ,
         VALUE_12 NUMBER ,
         VALUE_13 NUMBER ,
         VALUE_14 NUMBER ,
         VALUE_15 NUMBER ,
         VALUE_16 NUMBER ,
         VALUE_17 NUMBER ,
         VALUE_18 NUMBER ,
         VALUE_19 NUMBER ,
         VALUE_20 NUMBER ,
         TEXT_1 VARCHAR2 (16) ,
         TEXT_2 VARCHAR2 (32) ,
         TEXT_3 VARCHAR2 (240) ,
         TEXT_4 VARCHAR2 (2000) ,
         TEXT_5 VARCHAR2 (2000) ,
         TEXT_6 VARCHAR2 (2000) ,
         TEXT_7 VARCHAR2 (2000) ,
         TEXT_8 VARCHAR2 (2000) ,
         TEXT_9 VARCHAR2 (2000) ,
         TEXT_10 VARCHAR2 (2000) ,
         TEXT_11 VARCHAR2 (2000) ,
         TEXT_12 VARCHAR2 (2000) ,
         TEXT_13 VARCHAR2 (2000) ,
         TEXT_14 VARCHAR2 (2000) ,
         TEXT_15 VARCHAR2 (2000) ,
         TEXT_16 VARCHAR2 (2000) ,
         TEXT_17 VARCHAR2 (2000) ,
         TEXT_18 VARCHAR2 (2000) ,
         TEXT_19 VARCHAR2 (2000) ,
         TEXT_20 VARCHAR2 (2000) ,
         DATE_1  DATE ,
         DATE_2  DATE ,
         DATE_3  DATE ,
         DATE_4  DATE ,
         DATE_5  DATE ,
         DATE_6  DATE ,
         DATE_7  DATE ,
         DATE_8  DATE ,
         DATE_9  DATE ,
         DATE_10  DATE ,
         RECORD_STATUS VARCHAR2 (1) ,
         CREATED_BY VARCHAR2 (30) ,
         CREATED_DATE  DATE ,
         LAST_UPDATED_BY VARCHAR2 (30) ,
         LAST_UPDATED_DATE  DATE ,
         REV_NO NUMBER ,
         REV_TEXT VARCHAR2 (2000) ,
         APPROVAL_BY VARCHAR2 (30) ,
         APPROVAL_DATE  DATE ,
         APPROVAL_STATE VARCHAR2 (1) ,
         REC_ID VARCHAR2 (32) ,
         AVG_ANNULUS_PRESS_2 NUMBER ,
         AVG_ANNULUS_PRESS_3 NUMBER ,
         AVG_ANNULUS_PRESS_4 NUMBER ,
         AVG_ANNULUS_PRESS_5 NUMBER ,
         INJECTIVITY_INDEX NUMBER ,
         RESERVOIR_PRESS_DATUM NUMBER ,
         UTC_DAYTIME  DATE  );
   FUNCTION ROW_BY_REL_OPERATOR(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN REC_ROW_BY_REL_OPERATOR;
   FUNCTION SI_TUB_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION STROKE_MINUTE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION TEXT_13(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;
   FUNCTION TEXT_9(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;
   FUNCTION VALUE_13(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION VALUE_17(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION VALUE_2(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION VALUE_20(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION VALUE_3(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION VALUE_4(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION WATER_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION AVG_ANNULUS_PRESS_2(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION AVG_INJ_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION CHOKE_SIZE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION COND_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION DATE_4(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN DATE;
   FUNCTION FILTER_DIFF_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION HERTZ(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION MATH_AVG_GL_DIFF_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_CHOKE_SIZE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_INJ_LINE_TEMP(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_VALUE_16(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION REC_ID(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;
   FUNCTION TEXT_1(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;
   FUNCTION TEXT_2(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;
   FUNCTION VALUE_7(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION VALUE_9(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION API(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION BH_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION BS_W(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION DATE_1(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN DATE;
   FUNCTION DATE_8(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN DATE;
   FUNCTION DILUENT_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION MATH_ANNULUS_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_AVG_CHOKE_SIZE_2(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_CYCLE_DURATION(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_MAX_WH_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_STEAM_QUALITY(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_VALUE_10(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_VALUE_14(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_WH_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION SALES_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION TEST_TYPE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;
   FUNCTION TEXT_11(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;
   FUNCTION TEXT_12(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;
   FUNCTION TEXT_15(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;
   FUNCTION TEXT_8(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;
   FUNCTION VALUE_10(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION VALUE_11(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION VALUE_14(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION VALUE_8(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;

END RP_WELL_EVENT;

/



CREATE or REPLACE PACKAGE BODY RP_WELL_EVENT
IS

   FUNCTION BH_TEMP(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.BH_TEMP      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END BH_TEMP;
   FUNCTION DATE_10(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_WELL_EVENT.DATE_10      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END DATE_10;
   FUNCTION EVENT_DURATION(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.EVENT_DURATION      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END EVENT_DURATION;
   FUNCTION GRS_OIL_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.GRS_OIL_RATE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END GRS_OIL_RATE;
   FUNCTION MATH_API(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_API      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_API;
   FUNCTION MATH_AVG_ANNULUS_PRESS_4(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_AVG_ANNULUS_PRESS_4      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_AVG_ANNULUS_PRESS_4;
   FUNCTION MATH_AVG_ANNULUS_PRESS_5(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_AVG_ANNULUS_PRESS_5      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_AVG_ANNULUS_PRESS_5;
   FUNCTION MATH_BH_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_BH_PRESS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_BH_PRESS;
   FUNCTION MATH_BH_TEMP(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_BH_TEMP      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_BH_TEMP;
   FUNCTION MATH_CGR(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_CGR      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_CGR;
   FUNCTION MATH_COND_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_COND_RATE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_COND_RATE;
   FUNCTION MATH_DRAINAGE_CONST(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_DRAINAGE_CONST      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_DRAINAGE_CONST;
   FUNCTION MATH_SALES_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_SALES_PRESS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_SALES_PRESS;
   FUNCTION MATH_STROKE_MINUTE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_STROKE_MINUTE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_STROKE_MINUTE;
   FUNCTION PUMP_SIZE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.PUMP_SIZE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END PUMP_SIZE;
   FUNCTION STEAM_QUALITY(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.STEAM_QUALITY      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END STEAM_QUALITY;
   FUNCTION TEST_DATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_WELL_EVENT.TEST_DATE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END TEST_DATE;
   FUNCTION TEXT_3(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_WELL_EVENT.TEXT_3      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END TEXT_3;
   FUNCTION TEXT_4(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_WELL_EVENT.TEXT_4      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END TEXT_4;
   FUNCTION TEXT_7(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_WELL_EVENT.TEXT_7      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END TEXT_7;
   FUNCTION VALUE_16(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.VALUE_16      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END VALUE_16;
   FUNCTION VALUE_18(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.VALUE_18      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END VALUE_18;
   FUNCTION WH_TEMP(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.WH_TEMP      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END WH_TEMP;
   FUNCTION APPROVAL_BY(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (30) ;
   BEGIN
      ret_value := EC_WELL_EVENT.APPROVAL_BY      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END APPROVAL_BY;
   FUNCTION APPROVAL_STATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_WELL_EVENT.APPROVAL_STATE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END APPROVAL_STATE;
   FUNCTION AVG_ANNULUS_PRESS_3(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.AVG_ANNULUS_PRESS_3      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END AVG_ANNULUS_PRESS_3;
   FUNCTION AVG_ANNULUS_PRESS_5(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.AVG_ANNULUS_PRESS_5      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END AVG_ANNULUS_PRESS_5;
   FUNCTION GAS_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.GAS_RATE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END GAS_RATE;
   FUNCTION MATH_AVG_ANNULUS_PRESS_3(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_AVG_ANNULUS_PRESS_3      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_AVG_ANNULUS_PRESS_3;
   FUNCTION MATH_GRS_OIL_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_GRS_OIL_RATE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_GRS_OIL_RATE;
   FUNCTION MATH_INJECTIVITY_INDEX(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_INJECTIVITY_INDEX      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_INJECTIVITY_INDEX;
   FUNCTION MATH_MOTOR_SIZE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_MOTOR_SIZE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_MOTOR_SIZE;
   FUNCTION MATH_PUMP_DEPTH(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_PUMP_DEPTH      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_PUMP_DEPTH;
   FUNCTION MATH_RESERVOIR_PRESS_DATUM(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_RESERVOIR_PRESS_DATUM      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_RESERVOIR_PRESS_DATUM;
   FUNCTION MATH_RUN_HOURS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_RUN_HOURS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_RUN_HOURS;
   FUNCTION MATH_VALUE_15(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_VALUE_15      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_VALUE_15;
   FUNCTION MATH_VALUE_3(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_VALUE_3      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_VALUE_3;
   FUNCTION MATH_VALUE_4(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_VALUE_4      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_VALUE_4;
   FUNCTION MATH_VALUE_8(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_VALUE_8      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_VALUE_8;
   FUNCTION NET_OIL_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.NET_OIL_RATE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END NET_OIL_RATE;
   FUNCTION PUMP_DEPTH(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.PUMP_DEPTH      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END PUMP_DEPTH;
   FUNCTION RUN_HOURS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.RUN_HOURS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END RUN_HOURS;
   FUNCTION STATUS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_WELL_EVENT.STATUS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END STATUS;
   FUNCTION VALUE_5(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.VALUE_5      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END VALUE_5;
   FUNCTION AVG_GL_CHOKE_SIZE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.AVG_GL_CHOKE_SIZE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END AVG_GL_CHOKE_SIZE;
   FUNCTION DATE_7(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_WELL_EVENT.DATE_7      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END DATE_7;
   FUNCTION DATE_9(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_WELL_EVENT.DATE_9      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END DATE_9;
   FUNCTION DRAINAGE_CONST(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.DRAINAGE_CONST      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END DRAINAGE_CONST;
   FUNCTION ESTIMATE_REASON(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_WELL_EVENT.ESTIMATE_REASON      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END ESTIMATE_REASON;
   FUNCTION INJECTIVITY_INDEX(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.INJECTIVITY_INDEX      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END INJECTIVITY_INDEX;
   FUNCTION MATH_DILUENT_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_DILUENT_RATE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_DILUENT_RATE;
   FUNCTION MATH_FILTER_DIFF_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_FILTER_DIFF_PRESS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_FILTER_DIFF_PRESS;
   FUNCTION MATH_INJ_LINE_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_INJ_LINE_PRESS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_INJ_LINE_PRESS;
   FUNCTION MATH_NET_OIL_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_NET_OIL_RATE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_NET_OIL_RATE;
   FUNCTION MATH_NON_IDEAL_GAS_BEHAV(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_NON_IDEAL_GAS_BEHAV      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_NON_IDEAL_GAS_BEHAV;
   FUNCTION MATH_RPM(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_RPM      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_RPM;
   FUNCTION MATH_SUM_INJ_VOL(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_SUM_INJ_VOL      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_SUM_INJ_VOL;
   FUNCTION MATH_VALUE_11(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_VALUE_11      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_VALUE_11;
   FUNCTION MATH_VALUE_19(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_VALUE_19      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_VALUE_19;
   FUNCTION MATH_VALUE_20(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_VALUE_20      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_VALUE_20;
   FUNCTION MATH_VALUE_6(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_VALUE_6      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_VALUE_6;
   FUNCTION MATH_WATER_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_WATER_RATE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_WATER_RATE;
   FUNCTION NEXT_DAYTIME(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_WELL_EVENT.NEXT_DAYTIME      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_NUM_ROWS );
         RETURN ret_value;
   END NEXT_DAYTIME;
   FUNCTION NON_IDEAL_GAS_BEHAV(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.NON_IDEAL_GAS_BEHAV      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END NON_IDEAL_GAS_BEHAV;
   FUNCTION PREV_EQUAL_DAYTIME(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_WELL_EVENT.PREV_EQUAL_DAYTIME      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_NUM_ROWS );
         RETURN ret_value;
   END PREV_EQUAL_DAYTIME;
   FUNCTION RATE_SOURCE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_WELL_EVENT.RATE_SOURCE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END RATE_SOURCE;
   FUNCTION RPM(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.RPM      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END RPM;
   FUNCTION TEXT_10(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_WELL_EVENT.TEXT_10      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END TEXT_10;
   FUNCTION TEXT_18(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_WELL_EVENT.TEXT_18      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END TEXT_18;
   FUNCTION TEXT_19(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_WELL_EVENT.TEXT_19      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END TEXT_19;
   FUNCTION TEXT_5(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_WELL_EVENT.TEXT_5      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END TEXT_5;
   FUNCTION TEXT_6(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_WELL_EVENT.TEXT_6      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END TEXT_6;
   FUNCTION USE_IN_ALLOC(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_WELL_EVENT.USE_IN_ALLOC      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END USE_IN_ALLOC;
   FUNCTION WH_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.WH_PRESS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END WH_PRESS;
   FUNCTION AVG_ANNULUS_PRESS_4(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.AVG_ANNULUS_PRESS_4      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END AVG_ANNULUS_PRESS_4;
   FUNCTION AVG_CHOKE_SIZE_2(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.AVG_CHOKE_SIZE_2      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END AVG_CHOKE_SIZE_2;
   FUNCTION AVG_GL_DIFF_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.AVG_GL_DIFF_PRESS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END AVG_GL_DIFF_PRESS;
   FUNCTION AVG_GL_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.AVG_GL_PRESS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END AVG_GL_PRESS;
   FUNCTION AVG_WH_DSC_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.AVG_WH_DSC_PRESS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END AVG_WH_DSC_PRESS;
   FUNCTION COMMENTS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_WELL_EVENT.COMMENTS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END COMMENTS;
   FUNCTION COUNT_ROWS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.COUNT_ROWS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY );
         RETURN ret_value;
   END COUNT_ROWS;
   FUNCTION DATE_3(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_WELL_EVENT.DATE_3      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END DATE_3;
   FUNCTION DATE_5(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_WELL_EVENT.DATE_5      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END DATE_5;
   FUNCTION EVENT_DAY(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_WELL_EVENT.EVENT_DAY      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END EVENT_DAY;
   FUNCTION GL_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.GL_RATE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END GL_RATE;
   FUNCTION MATH_AVG_ANNULUS_PRESS_2(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_AVG_ANNULUS_PRESS_2      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_AVG_ANNULUS_PRESS_2;
   FUNCTION MATH_AVG_GL_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_AVG_GL_PRESS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_AVG_GL_PRESS;
   FUNCTION MATH_AVG_INJ_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_AVG_INJ_RATE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_AVG_INJ_RATE;
   FUNCTION MATH_BS_W(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_BS_W      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_BS_W;
   FUNCTION MATH_GOR(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_GOR      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_GOR;
   FUNCTION MATH_MAX_INJ_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_MAX_INJ_PRESS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_MAX_INJ_PRESS;
   FUNCTION MATH_PUMP_SIZE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_PUMP_SIZE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_PUMP_SIZE;
   FUNCTION MATH_VALUE_1(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_VALUE_1      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_VALUE_1;
   FUNCTION MATH_VALUE_5(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_VALUE_5      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_VALUE_5;
   FUNCTION MATH_VALUE_7(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_VALUE_7      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_VALUE_7;
   FUNCTION MATH_VALUE_9(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_VALUE_9      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_VALUE_9;
   FUNCTION MAX_INJ_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MAX_INJ_PRESS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END MAX_INJ_PRESS;
   FUNCTION NEXT_EQUAL_DAYTIME(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_WELL_EVENT.NEXT_EQUAL_DAYTIME      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_NUM_ROWS );
         RETURN ret_value;
   END NEXT_EQUAL_DAYTIME;
   FUNCTION RATE_CALC_METHOD(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_WELL_EVENT.RATE_CALC_METHOD      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END RATE_CALC_METHOD;
   FUNCTION RESERVOIR_PRESS_DATUM(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.RESERVOIR_PRESS_DATUM      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END RESERVOIR_PRESS_DATUM;
   FUNCTION SUM_INJ_VOL(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.SUM_INJ_VOL      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END SUM_INJ_VOL;
   FUNCTION TEXT_14(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_WELL_EVENT.TEXT_14      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END TEXT_14;
   FUNCTION TEXT_17(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_WELL_EVENT.TEXT_17      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END TEXT_17;
   FUNCTION TEXT_20(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_WELL_EVENT.TEXT_20      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END TEXT_20;
   FUNCTION UTC_DAYTIME(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_WELL_EVENT.UTC_DAYTIME      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END UTC_DAYTIME;
   FUNCTION VALUE_12(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.VALUE_12      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END VALUE_12;
   FUNCTION VALUE_6(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.VALUE_6      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END VALUE_6;
   FUNCTION ANNULUS_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.ANNULUS_PRESS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END ANNULUS_PRESS;
   FUNCTION DATE_2(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_WELL_EVENT.DATE_2      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END DATE_2;
   FUNCTION GOR(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.GOR      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END GOR;
   FUNCTION INJ_LINE_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.INJ_LINE_PRESS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END INJ_LINE_PRESS;
   FUNCTION INJ_LINE_TEMP(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.INJ_LINE_TEMP      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END INJ_LINE_TEMP;
   FUNCTION MATH_AVG_GL_CHOKE_SIZE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_AVG_GL_CHOKE_SIZE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_AVG_GL_CHOKE_SIZE;
   FUNCTION MATH_AVG_WH_DSC_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_AVG_WH_DSC_PRESS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_AVG_WH_DSC_PRESS;
   FUNCTION MATH_STROKE_LENGTH(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_STROKE_LENGTH      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_STROKE_LENGTH;
   FUNCTION MATH_VALUE_13(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_VALUE_13      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_VALUE_13;
   FUNCTION MATH_VALUE_18(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_VALUE_18      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_VALUE_18;
   FUNCTION MAX_WH_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MAX_WH_PRESS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END MAX_WH_PRESS;
   FUNCTION MOTOR_SIZE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MOTOR_SIZE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END MOTOR_SIZE;
   FUNCTION PREV_DAYTIME(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_WELL_EVENT.PREV_DAYTIME      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_NUM_ROWS );
         RETURN ret_value;
   END PREV_DAYTIME;
   FUNCTION PUMP_UNIT_SIZE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_WELL_EVENT.PUMP_UNIT_SIZE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END PUMP_UNIT_SIZE;
   FUNCTION RECORD_STATUS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_WELL_EVENT.RECORD_STATUS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END RECORD_STATUS;
   FUNCTION STROKE_LENGTH(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.STROKE_LENGTH      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END STROKE_LENGTH;
   FUNCTION TEXT_16(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_WELL_EVENT.TEXT_16      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END TEXT_16;
   FUNCTION VALUE_1(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.VALUE_1      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END VALUE_1;
   FUNCTION VALUE_15(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.VALUE_15      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END VALUE_15;
   FUNCTION VALUE_19(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.VALUE_19      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END VALUE_19;
   FUNCTION WASTE_TYPE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_WELL_EVENT.WASTE_TYPE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END WASTE_TYPE;
   FUNCTION APPROVAL_DATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_WELL_EVENT.APPROVAL_DATE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END APPROVAL_DATE;
   FUNCTION AVG_WH_USC_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.AVG_WH_USC_PRESS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END AVG_WH_USC_PRESS;
   FUNCTION CGR(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.CGR      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END CGR;
   FUNCTION CYCLE_DURATION(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.CYCLE_DURATION      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END CYCLE_DURATION;
   FUNCTION DATE_6(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_WELL_EVENT.DATE_6      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END DATE_6;
   FUNCTION ESTIMATE_METHOD(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_WELL_EVENT.ESTIMATE_METHOD      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END ESTIMATE_METHOD;
   FUNCTION MATH_AVG_WH_USC_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_AVG_WH_USC_PRESS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_AVG_WH_USC_PRESS;
   FUNCTION MATH_EVENT_DURATION(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_EVENT_DURATION      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_EVENT_DURATION;
   FUNCTION MATH_GAS_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_GAS_RATE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_GAS_RATE;
   FUNCTION MATH_GL_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_GL_RATE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_GL_RATE;
   FUNCTION MATH_HERTZ(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_HERTZ      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_HERTZ;
   FUNCTION MATH_SI_TUB_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_SI_TUB_PRESS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_SI_TUB_PRESS;
   FUNCTION MATH_VALUE_12(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_VALUE_12      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_VALUE_12;
   FUNCTION MATH_VALUE_17(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_VALUE_17      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_VALUE_17;
   FUNCTION MATH_VALUE_2(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_VALUE_2      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_VALUE_2;
   FUNCTION MATH_WH_TEMP(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_WH_TEMP      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_WH_TEMP;
   FUNCTION ROW_BY_PK(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN REC_ROW_BY_PK
   IS
      ret_value    REC_ROW_BY_PK ;
   BEGIN
      ret_value := EC_WELL_EVENT.ROW_BY_PK      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END ROW_BY_PK;
   FUNCTION ROW_BY_REL_OPERATOR(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN REC_ROW_BY_REL_OPERATOR
   IS
      ret_value    REC_ROW_BY_REL_OPERATOR ;
   BEGIN
      ret_value := EC_WELL_EVENT.ROW_BY_REL_OPERATOR      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END ROW_BY_REL_OPERATOR;
   FUNCTION SI_TUB_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.SI_TUB_PRESS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END SI_TUB_PRESS;
   FUNCTION STROKE_MINUTE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.STROKE_MINUTE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END STROKE_MINUTE;
   FUNCTION TEXT_13(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_WELL_EVENT.TEXT_13      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END TEXT_13;
   FUNCTION TEXT_9(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_WELL_EVENT.TEXT_9      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END TEXT_9;
   FUNCTION VALUE_13(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.VALUE_13      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END VALUE_13;
   FUNCTION VALUE_17(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.VALUE_17      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END VALUE_17;
   FUNCTION VALUE_2(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.VALUE_2      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END VALUE_2;
   FUNCTION VALUE_20(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.VALUE_20      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END VALUE_20;
   FUNCTION VALUE_3(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.VALUE_3      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END VALUE_3;
   FUNCTION VALUE_4(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.VALUE_4      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END VALUE_4;
   FUNCTION WATER_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.WATER_RATE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END WATER_RATE;
   FUNCTION AVG_ANNULUS_PRESS_2(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.AVG_ANNULUS_PRESS_2      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END AVG_ANNULUS_PRESS_2;
   FUNCTION AVG_INJ_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.AVG_INJ_RATE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END AVG_INJ_RATE;
   FUNCTION CHOKE_SIZE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.CHOKE_SIZE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END CHOKE_SIZE;
   FUNCTION COND_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.COND_RATE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END COND_RATE;
   FUNCTION DATE_4(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_WELL_EVENT.DATE_4      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END DATE_4;
   FUNCTION FILTER_DIFF_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.FILTER_DIFF_PRESS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END FILTER_DIFF_PRESS;
   FUNCTION HERTZ(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.HERTZ      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END HERTZ;
   FUNCTION MATH_AVG_GL_DIFF_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_AVG_GL_DIFF_PRESS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_AVG_GL_DIFF_PRESS;
   FUNCTION MATH_CHOKE_SIZE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_CHOKE_SIZE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_CHOKE_SIZE;
   FUNCTION MATH_INJ_LINE_TEMP(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_INJ_LINE_TEMP      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_INJ_LINE_TEMP;
   FUNCTION MATH_VALUE_16(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_VALUE_16      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_VALUE_16;
   FUNCTION REC_ID(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_WELL_EVENT.REC_ID      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END REC_ID;
   FUNCTION TEXT_1(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (16) ;
   BEGIN
      ret_value := EC_WELL_EVENT.TEXT_1      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END TEXT_1;
   FUNCTION TEXT_2(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_WELL_EVENT.TEXT_2      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END TEXT_2;
   FUNCTION VALUE_7(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.VALUE_7      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END VALUE_7;
   FUNCTION VALUE_9(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.VALUE_9      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END VALUE_9;
   FUNCTION API(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.API      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END API;
   FUNCTION BH_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.BH_PRESS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END BH_PRESS;
   FUNCTION BS_W(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.BS_W      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END BS_W;
   FUNCTION DATE_1(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_WELL_EVENT.DATE_1      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END DATE_1;
   FUNCTION DATE_8(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_WELL_EVENT.DATE_8      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END DATE_8;
   FUNCTION DILUENT_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.DILUENT_RATE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END DILUENT_RATE;
   FUNCTION MATH_ANNULUS_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_ANNULUS_PRESS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_ANNULUS_PRESS;
   FUNCTION MATH_AVG_CHOKE_SIZE_2(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_AVG_CHOKE_SIZE_2      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_AVG_CHOKE_SIZE_2;
   FUNCTION MATH_CYCLE_DURATION(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_CYCLE_DURATION      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_CYCLE_DURATION;
   FUNCTION MATH_MAX_WH_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_MAX_WH_PRESS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_MAX_WH_PRESS;
   FUNCTION MATH_STEAM_QUALITY(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_STEAM_QUALITY      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_STEAM_QUALITY;
   FUNCTION MATH_VALUE_10(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_VALUE_10      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_VALUE_10;
   FUNCTION MATH_VALUE_14(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_VALUE_14      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_VALUE_14;
   FUNCTION MATH_WH_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.MATH_WH_PRESS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_WH_PRESS;
   FUNCTION SALES_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.SALES_PRESS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END SALES_PRESS;
   FUNCTION TEST_TYPE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_WELL_EVENT.TEST_TYPE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END TEST_TYPE;
   FUNCTION TEXT_11(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_WELL_EVENT.TEXT_11      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END TEXT_11;
   FUNCTION TEXT_12(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_WELL_EVENT.TEXT_12      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END TEXT_12;
   FUNCTION TEXT_15(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_WELL_EVENT.TEXT_15      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END TEXT_15;
   FUNCTION TEXT_8(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_WELL_EVENT.TEXT_8      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END TEXT_8;
   FUNCTION VALUE_10(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.VALUE_10      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END VALUE_10;
   FUNCTION VALUE_11(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.VALUE_11      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END VALUE_11;
   FUNCTION VALUE_14(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.VALUE_14      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END VALUE_14;
   FUNCTION VALUE_8(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=',
      P_SUMMERTIME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_WELL_EVENT.VALUE_8      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER,
         P_SUMMERTIME );
         RETURN ret_value;
   END VALUE_8;

END RP_WELL_EVENT;

/
--GRANT EXECUTE ON ECKERNEL_WST.RP_WELL_EVENT TO REPORT_ROLE_XXX;



 -- FINISH PKG_GEN_PKGS.sf_get_functions at:05/07/2019 05.19.17 AM


