
 -- START PKG_GEN_PKGS.sf_get_functions at:05/07/2019 11.51.17 AM


CREATE or REPLACE PACKAGE RPDP_CLASSMETA
IS

   FUNCTION GETCLASSATTRDBSQLSYNTAX(
      P_CLASS_NAME IN VARCHAR2,
      P_ATTRIBUTE_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION GETCLASSKEYS(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION GETGROUPMODELLABEL(
      P_GROUP_TYPE IN VARCHAR2,
      P_OBJECT_TYPE IN VARCHAR2,
      P_PARENT_GROUP_TYPE IN VARCHAR2,
      P_PARENT_OBJECT_TYPE IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION GETGROUPMODELLEVELSORTORDER(
      P_GROUP_TYPE IN VARCHAR2,
      P_CHILD_CLASS IN VARCHAR2,
      P_PARENT_CLASS IN VARCHAR2,
      P_ROLE_NAME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION GETPROPERTYVALUEFROMCLASS(
      P_CLASS_NAME IN VARCHAR2,
      P_PROPERTY_CODE IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION GETRELIDFROMCOLUMNNAME(
      P_CLASS_NAME IN VARCHAR2,
      P_COLUMN_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION GETSCHEMANAME
      RETURN VARCHAR2;
   FUNCTION GETVIEWCOLUMNISKEY(
      P_VIEW_NAME IN VARCHAR2,
      P_COLUMN_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION ISREVTEXTMANDATORY(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION GETCLASSDBATTRIBUTETABLE(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION ISUSINGUSERFUNCTION
      RETURN VARCHAR2;
   FUNCTION GETCLASSWHERECONDITION(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION GETPRESSYNTAXPROSTYCODE(
      P_CODE IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION GETRELATIONCOLUMNNAME(
      P_CLASS_NAME IN VARCHAR2,
      P_REF_OBJ_ID_NO IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION ISIMPLEMENTATIONSDEFINED(
      P_INTERFACE_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION GETSTATICPRES(
      P_CLASS_NAME IN VARCHAR2,
      P_ATTRIBUTE_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION GETVIEWCOLUMNMANDATORY(
      P_VIEW_NAME IN VARCHAR2,
      P_COLUMN_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION HASJOURNALVIEW(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION COUNTATTRRECORDS(
      P_CLASS_NAME IN VARCHAR2,
      P_TABLE_NAME IN VARCHAR2,
      P_COLUMN_NAME IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION GETCLASSATTRIBUTEDATATYPE(
      P_CLASS_NAME IN VARCHAR2,
      P_ATTRIBUTE_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION GETCLASSDATEHANDELING(
      P_CLASS_NAME IN VARCHAR2,
      P_CLASS_TYPE IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION GETGROUPMODELDEPPOPUPPRES(
      P_CHILD_CLASS IN VARCHAR2,
      P_PARENT_CLASS IN VARCHAR2,
      P_ROLE_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION GETGROUPMODELDEPPOPUPSORTORDER(
      P_CHILD_CLASS IN VARCHAR2,
      P_PARENT_CLASS IN VARCHAR2,
      P_ROLE_NAME IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION ISVALIDATTRIBUTE(
      P_CLASS_NAME IN VARCHAR2,
      P_ATTRIBUTE_NAME IN VARCHAR2)
      RETURN BOOLEAN;
   FUNCTION GETCLASSNONKEYSMANDATORY(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION GETCLASSRELDBMAPPINGTYPE(
      P_FROM_CLASS_NAME IN VARCHAR2,
      P_TO_CLASS_NAME IN VARCHAR2,
      P_ROLE_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION GETECPACKAGE(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION GETOBJECTREFCLASSNAME(
      P_CLASS_NAME IN VARCHAR2,
      P_REF_OBJ_ID_NO IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION HASTABLECOLUMN(
      P_TABLE_NAME IN VARCHAR2,
      P_COLUMN_NAME IN VARCHAR2)
      RETURN BOOLEAN;
   FUNCTION ISVALIDTABCOL(
      P_CLASS_NAME IN VARCHAR2,
      P_TABLE_OWNER IN VARCHAR2,
      P_TABLE_NAME IN VARCHAR2,
      P_COLUMN_NAME IN VARCHAR2)
      RETURN BOOLEAN;
   FUNCTION ISVALIDTABCOL(
      P_TABLE_NAME IN VARCHAR2,
      P_COLUMN_NAME IN VARCHAR2)
      RETURN BOOLEAN;
   FUNCTION GETCLASSJOURNALIFCONDITION(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION GETCLASSTYPE(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION GETUOMCODE(
      P_CLASS_NAME IN VARCHAR2,
      P_ATTRIBUTE_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION ISFUNCTION(
      P_CLASS_NAME IN VARCHAR2,
      P_ATTRIBUTE_NAME IN VARCHAR2)
      RETURN BOOLEAN;
   FUNCTION ISPARENTRELATION(
      P_CHILD_CLASS IN VARCHAR2,
      P_PARENT_CLASS IN VARCHAR2,
      P_ROLE_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION GETCLASSATTRIBUTEDBMAPPINGTYPE(
      P_CLASS_NAME IN VARCHAR2,
      P_ATTRIBUTE_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION GETCLASSATTRIBUTELABEL(
      P_CLASS_NAME IN VARCHAR2,
      P_ATTRIBUTE_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION GETCLASSDBTABLE(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION GETCLASSRELDBSQLSYNTAX(
      P_FROM_CLASS_NAME IN VARCHAR2,
      P_TO_CLASS_NAME IN VARCHAR2,
      P_ROLE_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION GETCLASSVIEWNAME(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION GETDATATYPE(
      P_DATA_TYPE IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION GETTRUNCATEDDATE(
      P_CLASS_NAME IN VARCHAR2,
      P_DATE IN DATE)
      RETURN DATE;
   FUNCTION ISPROPERTYMANDATORY(
      P_CLASS_NAME IN VARCHAR2,
      P_PROPERTY_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION ISREADONLYCLASS(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION OWNERCLASSNAME(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION SUPERCLASSNAME(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2;

END RPDP_CLASSMETA;

/



CREATE or REPLACE PACKAGE BODY RPDP_CLASSMETA
IS

   FUNCTION GETCLASSATTRDBSQLSYNTAX(
      P_CLASS_NAME IN VARCHAR2,
      P_ATTRIBUTE_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_CLASSMETA.GETCLASSATTRDBSQLSYNTAX      (
         P_CLASS_NAME,
         P_ATTRIBUTE_NAME );
         RETURN ret_value;
   END GETCLASSATTRDBSQLSYNTAX;
   FUNCTION GETCLASSKEYS(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_CLASSMETA.GETCLASSKEYS      (
         P_CLASS_NAME );
         RETURN ret_value;
   END GETCLASSKEYS;
   FUNCTION GETGROUPMODELLABEL(
      P_GROUP_TYPE IN VARCHAR2,
      P_OBJECT_TYPE IN VARCHAR2,
      P_PARENT_GROUP_TYPE IN VARCHAR2,
      P_PARENT_OBJECT_TYPE IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_CLASSMETA.GETGROUPMODELLABEL      (
         P_GROUP_TYPE,
         P_OBJECT_TYPE,
         P_PARENT_GROUP_TYPE,
         P_PARENT_OBJECT_TYPE );
         RETURN ret_value;
   END GETGROUPMODELLABEL;
   FUNCTION GETGROUPMODELLEVELSORTORDER(
      P_GROUP_TYPE IN VARCHAR2,
      P_CHILD_CLASS IN VARCHAR2,
      P_PARENT_CLASS IN VARCHAR2,
      P_ROLE_NAME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECDP_CLASSMETA.GETGROUPMODELLEVELSORTORDER      (
         P_GROUP_TYPE,
         P_CHILD_CLASS,
         P_PARENT_CLASS,
         P_ROLE_NAME );
         RETURN ret_value;
   END GETGROUPMODELLEVELSORTORDER;
   FUNCTION GETPROPERTYVALUEFROMCLASS(
      P_CLASS_NAME IN VARCHAR2,
      P_PROPERTY_CODE IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_CLASSMETA.GETPROPERTYVALUEFROMCLASS      (
         P_CLASS_NAME,
         P_PROPERTY_CODE );
         RETURN ret_value;
   END GETPROPERTYVALUEFROMCLASS;
   FUNCTION GETRELIDFROMCOLUMNNAME(
      P_CLASS_NAME IN VARCHAR2,
      P_COLUMN_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_CLASSMETA.GETRELIDFROMCOLUMNNAME      (
         P_CLASS_NAME,
         P_COLUMN_NAME );
         RETURN ret_value;
   END GETRELIDFROMCOLUMNNAME;
   FUNCTION GETSCHEMANAME
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN

         ret_value := ECDP_CLASSMETA.GETSCHEMANAME ;
         RETURN ret_value;
   END GETSCHEMANAME;
   FUNCTION GETVIEWCOLUMNISKEY(
      P_VIEW_NAME IN VARCHAR2,
      P_COLUMN_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_CLASSMETA.GETVIEWCOLUMNISKEY      (
         P_VIEW_NAME,
         P_COLUMN_NAME );
         RETURN ret_value;
   END GETVIEWCOLUMNISKEY;
   FUNCTION ISREVTEXTMANDATORY(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_CLASSMETA.ISREVTEXTMANDATORY      (
         P_CLASS_NAME );
         RETURN ret_value;
   END ISREVTEXTMANDATORY;
   FUNCTION GETCLASSDBATTRIBUTETABLE(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_CLASSMETA.GETCLASSDBATTRIBUTETABLE      (
         P_CLASS_NAME );
         RETURN ret_value;
   END GETCLASSDBATTRIBUTETABLE;
   FUNCTION ISUSINGUSERFUNCTION
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN

         ret_value := ECDP_CLASSMETA.ISUSINGUSERFUNCTION ;
         RETURN ret_value;
   END ISUSINGUSERFUNCTION;
   FUNCTION GETCLASSWHERECONDITION(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_CLASSMETA.GETCLASSWHERECONDITION      (
         P_CLASS_NAME );
         RETURN ret_value;
   END GETCLASSWHERECONDITION;
   FUNCTION GETPRESSYNTAXPROSTYCODE(
      P_CODE IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_CLASSMETA.GETPRESSYNTAXPROSTYCODE      (
         P_CODE );
         RETURN ret_value;
   END GETPRESSYNTAXPROSTYCODE;
   FUNCTION GETRELATIONCOLUMNNAME(
      P_CLASS_NAME IN VARCHAR2,
      P_REF_OBJ_ID_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_CLASSMETA.GETRELATIONCOLUMNNAME      (
         P_CLASS_NAME,
         P_REF_OBJ_ID_NO );
         RETURN ret_value;
   END GETRELATIONCOLUMNNAME;
   FUNCTION ISIMPLEMENTATIONSDEFINED(
      P_INTERFACE_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_CLASSMETA.ISIMPLEMENTATIONSDEFINED      (
         P_INTERFACE_NAME );
         RETURN ret_value;
   END ISIMPLEMENTATIONSDEFINED;
   FUNCTION GETSTATICPRES(
      P_CLASS_NAME IN VARCHAR2,
      P_ATTRIBUTE_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_CLASSMETA.GETSTATICPRES      (
         P_CLASS_NAME,
         P_ATTRIBUTE_NAME );
         RETURN ret_value;
   END GETSTATICPRES;
   FUNCTION GETVIEWCOLUMNMANDATORY(
      P_VIEW_NAME IN VARCHAR2,
      P_COLUMN_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_CLASSMETA.GETVIEWCOLUMNMANDATORY      (
         P_VIEW_NAME,
         P_COLUMN_NAME );
         RETURN ret_value;
   END GETVIEWCOLUMNMANDATORY;
   FUNCTION HASJOURNALVIEW(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_CLASSMETA.HASJOURNALVIEW      (
         P_CLASS_NAME );
         RETURN ret_value;
   END HASJOURNALVIEW;
   FUNCTION COUNTATTRRECORDS(
      P_CLASS_NAME IN VARCHAR2,
      P_TABLE_NAME IN VARCHAR2,
      P_COLUMN_NAME IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECDP_CLASSMETA.COUNTATTRRECORDS      (
         P_CLASS_NAME,
         P_TABLE_NAME,
         P_COLUMN_NAME );
         RETURN ret_value;
   END COUNTATTRRECORDS;
   FUNCTION GETCLASSATTRIBUTEDATATYPE(
      P_CLASS_NAME IN VARCHAR2,
      P_ATTRIBUTE_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_CLASSMETA.GETCLASSATTRIBUTEDATATYPE      (
         P_CLASS_NAME,
         P_ATTRIBUTE_NAME );
         RETURN ret_value;
   END GETCLASSATTRIBUTEDATATYPE;
   FUNCTION GETCLASSDATEHANDELING(
      P_CLASS_NAME IN VARCHAR2,
      P_CLASS_TYPE IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_CLASSMETA.GETCLASSDATEHANDELING      (
         P_CLASS_NAME,
         P_CLASS_TYPE );
         RETURN ret_value;
   END GETCLASSDATEHANDELING;
   FUNCTION GETGROUPMODELDEPPOPUPPRES(
      P_CHILD_CLASS IN VARCHAR2,
      P_PARENT_CLASS IN VARCHAR2,
      P_ROLE_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_CLASSMETA.GETGROUPMODELDEPPOPUPPRES      (
         P_CHILD_CLASS,
         P_PARENT_CLASS,
         P_ROLE_NAME );
         RETURN ret_value;
   END GETGROUPMODELDEPPOPUPPRES;
   FUNCTION GETGROUPMODELDEPPOPUPSORTORDER(
      P_CHILD_CLASS IN VARCHAR2,
      P_PARENT_CLASS IN VARCHAR2,
      P_ROLE_NAME IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECDP_CLASSMETA.GETGROUPMODELDEPPOPUPSORTORDER      (
         P_CHILD_CLASS,
         P_PARENT_CLASS,
         P_ROLE_NAME );
         RETURN ret_value;
   END GETGROUPMODELDEPPOPUPSORTORDER;
   FUNCTION ISVALIDATTRIBUTE(
      P_CLASS_NAME IN VARCHAR2,
      P_ATTRIBUTE_NAME IN VARCHAR2)
      RETURN BOOLEAN
   IS
      ret_value    BOOLEAN ;
   BEGIN
      ret_value := ECDP_CLASSMETA.ISVALIDATTRIBUTE      (
         P_CLASS_NAME,
         P_ATTRIBUTE_NAME );
         RETURN ret_value;
   END ISVALIDATTRIBUTE;
   FUNCTION GETCLASSNONKEYSMANDATORY(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_CLASSMETA.GETCLASSNONKEYSMANDATORY      (
         P_CLASS_NAME );
         RETURN ret_value;
   END GETCLASSNONKEYSMANDATORY;
   FUNCTION GETCLASSRELDBMAPPINGTYPE(
      P_FROM_CLASS_NAME IN VARCHAR2,
      P_TO_CLASS_NAME IN VARCHAR2,
      P_ROLE_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_CLASSMETA.GETCLASSRELDBMAPPINGTYPE      (
         P_FROM_CLASS_NAME,
         P_TO_CLASS_NAME,
         P_ROLE_NAME );
         RETURN ret_value;
   END GETCLASSRELDBMAPPINGTYPE;
   FUNCTION GETECPACKAGE(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_CLASSMETA.GETECPACKAGE      (
         P_CLASS_NAME );
         RETURN ret_value;
   END GETECPACKAGE;
   FUNCTION GETOBJECTREFCLASSNAME(
      P_CLASS_NAME IN VARCHAR2,
      P_REF_OBJ_ID_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_CLASSMETA.GETOBJECTREFCLASSNAME      (
         P_CLASS_NAME,
         P_REF_OBJ_ID_NO );
         RETURN ret_value;
   END GETOBJECTREFCLASSNAME;
   FUNCTION HASTABLECOLUMN(
      P_TABLE_NAME IN VARCHAR2,
      P_COLUMN_NAME IN VARCHAR2)
      RETURN BOOLEAN
   IS
      ret_value    BOOLEAN ;
   BEGIN
      ret_value := ECDP_CLASSMETA.HASTABLECOLUMN      (
         P_TABLE_NAME,
         P_COLUMN_NAME );
         RETURN ret_value;
   END HASTABLECOLUMN;
   FUNCTION ISVALIDTABCOL(
      P_CLASS_NAME IN VARCHAR2,
      P_TABLE_OWNER IN VARCHAR2,
      P_TABLE_NAME IN VARCHAR2,
      P_COLUMN_NAME IN VARCHAR2)
      RETURN BOOLEAN
   IS
      ret_value    BOOLEAN ;
   BEGIN
      ret_value := ECDP_CLASSMETA.ISVALIDTABCOL      (
         P_CLASS_NAME,
         P_TABLE_OWNER,
         P_TABLE_NAME,
         P_COLUMN_NAME );
         RETURN ret_value;
   END ISVALIDTABCOL;
   FUNCTION ISVALIDTABCOL(
      P_TABLE_NAME IN VARCHAR2,
      P_COLUMN_NAME IN VARCHAR2)
      RETURN BOOLEAN
   IS
      ret_value    BOOLEAN ;
   BEGIN
      ret_value := ECDP_CLASSMETA.ISVALIDTABCOL      (
         P_TABLE_NAME,
         P_COLUMN_NAME );
         RETURN ret_value;
   END ISVALIDTABCOL;
   FUNCTION GETCLASSJOURNALIFCONDITION(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_CLASSMETA.GETCLASSJOURNALIFCONDITION      (
         P_CLASS_NAME );
         RETURN ret_value;
   END GETCLASSJOURNALIFCONDITION;
   FUNCTION GETCLASSTYPE(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_CLASSMETA.GETCLASSTYPE      (
         P_CLASS_NAME );
         RETURN ret_value;
   END GETCLASSTYPE;
   FUNCTION GETUOMCODE(
      P_CLASS_NAME IN VARCHAR2,
      P_ATTRIBUTE_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_CLASSMETA.GETUOMCODE      (
         P_CLASS_NAME,
         P_ATTRIBUTE_NAME );
         RETURN ret_value;
   END GETUOMCODE;
   FUNCTION ISFUNCTION(
      P_CLASS_NAME IN VARCHAR2,
      P_ATTRIBUTE_NAME IN VARCHAR2)
      RETURN BOOLEAN
   IS
      ret_value    BOOLEAN ;
   BEGIN
      ret_value := ECDP_CLASSMETA.ISFUNCTION      (
         P_CLASS_NAME,
         P_ATTRIBUTE_NAME );
         RETURN ret_value;
   END ISFUNCTION;
   FUNCTION ISPARENTRELATION(
      P_CHILD_CLASS IN VARCHAR2,
      P_PARENT_CLASS IN VARCHAR2,
      P_ROLE_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_CLASSMETA.ISPARENTRELATION      (
         P_CHILD_CLASS,
         P_PARENT_CLASS,
         P_ROLE_NAME );
         RETURN ret_value;
   END ISPARENTRELATION;
   FUNCTION GETCLASSATTRIBUTEDBMAPPINGTYPE(
      P_CLASS_NAME IN VARCHAR2,
      P_ATTRIBUTE_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_CLASSMETA.GETCLASSATTRIBUTEDBMAPPINGTYPE      (
         P_CLASS_NAME,
         P_ATTRIBUTE_NAME );
         RETURN ret_value;
   END GETCLASSATTRIBUTEDBMAPPINGTYPE;
   FUNCTION GETCLASSATTRIBUTELABEL(
      P_CLASS_NAME IN VARCHAR2,
      P_ATTRIBUTE_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_CLASSMETA.GETCLASSATTRIBUTELABEL      (
         P_CLASS_NAME,
         P_ATTRIBUTE_NAME );
         RETURN ret_value;
   END GETCLASSATTRIBUTELABEL;
   FUNCTION GETCLASSDBTABLE(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_CLASSMETA.GETCLASSDBTABLE      (
         P_CLASS_NAME );
         RETURN ret_value;
   END GETCLASSDBTABLE;
   FUNCTION GETCLASSRELDBSQLSYNTAX(
      P_FROM_CLASS_NAME IN VARCHAR2,
      P_TO_CLASS_NAME IN VARCHAR2,
      P_ROLE_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_CLASSMETA.GETCLASSRELDBSQLSYNTAX      (
         P_FROM_CLASS_NAME,
         P_TO_CLASS_NAME,
         P_ROLE_NAME );
         RETURN ret_value;
   END GETCLASSRELDBSQLSYNTAX;
   FUNCTION GETCLASSVIEWNAME(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_CLASSMETA.GETCLASSVIEWNAME      (
         P_CLASS_NAME );
         RETURN ret_value;
   END GETCLASSVIEWNAME;
   FUNCTION GETDATATYPE(
      P_DATA_TYPE IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_CLASSMETA.GETDATATYPE      (
         P_DATA_TYPE );
         RETURN ret_value;
   END GETDATATYPE;
   FUNCTION GETTRUNCATEDDATE(
      P_CLASS_NAME IN VARCHAR2,
      P_DATE IN DATE)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := ECDP_CLASSMETA.GETTRUNCATEDDATE      (
         P_CLASS_NAME,
         P_DATE );
         RETURN ret_value;
   END GETTRUNCATEDDATE;
   FUNCTION ISPROPERTYMANDATORY(
      P_CLASS_NAME IN VARCHAR2,
      P_PROPERTY_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_CLASSMETA.ISPROPERTYMANDATORY      (
         P_CLASS_NAME,
         P_PROPERTY_NAME );
         RETURN ret_value;
   END ISPROPERTYMANDATORY;
   FUNCTION ISREADONLYCLASS(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_CLASSMETA.ISREADONLYCLASS      (
         P_CLASS_NAME );
         RETURN ret_value;
   END ISREADONLYCLASS;
   FUNCTION OWNERCLASSNAME(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_CLASSMETA.OWNERCLASSNAME      (
         P_CLASS_NAME );
         RETURN ret_value;
   END OWNERCLASSNAME;
   FUNCTION SUPERCLASSNAME(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_CLASSMETA.SUPERCLASSNAME      (
         P_CLASS_NAME );
         RETURN ret_value;
   END SUPERCLASSNAME;

END RPDP_CLASSMETA;

/
--GRANT EXECUTE ON ECKERNEL_WST.RPDP_CLASSMETA TO REPORT_ROLE_XXX;



 -- FINISH PKG_GEN_PKGS.sf_get_functions at:05/07/2019 11.51.26 AM


