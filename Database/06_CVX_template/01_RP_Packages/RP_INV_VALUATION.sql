
 -- START PKG_GEN_PKGS.sf_get_functions at:05/07/2019 09.17.44 AM


CREATE or REPLACE PACKAGE RP_INV_VALUATION
IS

   FUNCTION CLOSING_PRICE_VALUE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION FX_SOURCE_ID(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION GROUP_CURRENCY_ID(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION OL_BOOKING_CURRENCY_ID(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION OL_BOOKING_LOCAL_FOREX_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION PS_CLOSING_POS_QTY1(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION PS_CLOSING_PRICING_VALUE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION SET_TO_BOOKED_DATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN DATE;
   FUNCTION TEXT_3(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION TOTAL_MOV_QTY2(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION UL_AVG_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION UL_BOOKING_LOCAL_FOREX_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION UL_BOOKING_VALUE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION UL_CLOSING_POS_QTY2(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION APPROVAL_BY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION APPROVAL_STATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION BOOKING_DATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN DATE;
   FUNCTION CLOSING_BOOKING_VALUE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION FX_TYPE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION INV_MONEY_DIST_METHOD(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION OL_AVG_PRICE_STATUS(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION OL_CLOSING_POS_QTY2(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION OL_MEMO_CURRENCY_ID(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION PS_MEMO_VALUE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION UL_BOOKING_CURRENCY_ID(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION UL_MEMO_CURRENCY_ID(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION VALUE_5(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION YTD_OL_MOV_QTY2(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION YTD_PROD_QTY1(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION YTD_PS_MOV_QTY2(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION BOOKED_USER_ID(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION ERP_FEEDBACK_ERROR_MESS(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION NEXT_DAYTIME(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE;
   FUNCTION OL_BOOKING_MEMO_FOREX_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION OL_OPENING_QTY1(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION PREV_EQUAL_DAYTIME(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE;
   FUNCTION PS_AVG_RATE_STATUS(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION TEXT_7(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION TEXT_8(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION TOTAL_CLOSING_POS_QTY2(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION TRANSFER_DATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN DATE;
   FUNCTION UL_BOOKING_GROUP_FOREX_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION UL_OPENING_POS_QTY2(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION UL_PRICING_CURRENCY_ID(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION YTD_PROD_QTY2(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION YTD_UL_MOV_QTY2(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION CLOSING_MEMO_VALUE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION COMMENTS(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION DATE_3(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN DATE;
   FUNCTION DATE_5(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN DATE;
   FUNCTION DOCUMENT_LEVEL_CODE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION ERP_FEEDBACK_STATUS(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION HISTORIC(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION NEXT_EQUAL_DAYTIME(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE;
   FUNCTION OL_BOOKING_GROUP_FOREX_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION OL_OPENING_QTY2(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION PS_CLOSING_BOOKING_VALUE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION PS_CLOSING_POS_QTY2(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION PS_PRICE_VALUE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION PS_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION TEXT_1(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION TEXT_6(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION TEXT_9(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION TOTAL_CLOSING_POS_QTY1(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION UL_MEMO_VALUE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION UL_OPENING_POS_QTY1(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION YTD_UL_MOV_QTY1(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION BOOK_CATEGORY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION DATE_2(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN DATE;
   FUNCTION OL_CLOSING_POS_QTY1(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION PREV_DAYTIME(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE;
   FUNCTION PS_OPENING_QTY1(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION RECORD_STATUS(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION TOTAL_MOV_QTY1(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION TRANSFER_USER_ID(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION UL_AVG_RATE_STATUS(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION UL_BOOKING_MEMO_FOREX_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION VALID2_USER_ID(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION VALUE_1(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION YTD_OL_MOV_QTY1(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION APPROVAL_DATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN DATE;
   FUNCTION DESCRIPTION(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION ERP_FEEDBACK_DATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN DATE;
   FUNCTION LOCAL_CURRENCY_ID(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION NAME(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION POSTING_TYPE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION PS_AVG_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION PS_OPENING_QTY2(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
      TYPE REC_ROW_BY_PK IS RECORD (
         OBJECT_ID VARCHAR2 (32) ,
         DAYTIME  DATE ,
         BOOK_CATEGORY VARCHAR2 (32) ,
         VALUATION_METHOD VARCHAR2 (32) ,
         VALUATION_LEVEL VARCHAR2 (32) ,
         FX_TYPE VARCHAR2 (32) ,
         FX_SOURCE_CODE VARCHAR2 (32) ,
         FX_SOURCE_ID VARCHAR2 (32) ,
         NAME VARCHAR2 (240) ,
         DESCRIPTION VARCHAR2 (240) ,
         CLOSING_PRICE_VALUE NUMBER ,
         CLOSING_MEMO_VALUE NUMBER ,
         CLOSING_BOOKING_VALUE NUMBER ,
         UL_AVG_RATE NUMBER ,
         OL_AVG_RATE NUMBER ,
         UL_PRICE_VALUE NUMBER ,
         UL_MEMO_VALUE NUMBER ,
         UL_BOOKING_VALUE NUMBER ,
         OL_PRICE_VALUE NUMBER ,
         OL_MEMO_VALUE NUMBER ,
         OL_BOOKING_VALUE NUMBER ,
         UOM1_CODE VARCHAR2 (16) ,
         UOM2_CODE VARCHAR2 (16) ,
         UL_PRICING_CURRENCY_ID VARCHAR2 (32) ,
         UL_BOOKING_CURRENCY_ID VARCHAR2 (32) ,
         UL_MEMO_CURRENCY_ID VARCHAR2 (32) ,
         OL_PRICING_CURRENCY_ID VARCHAR2 (32) ,
         OL_BOOKING_CURRENCY_ID VARCHAR2 (32) ,
         OL_MEMO_CURRENCY_ID VARCHAR2 (32) ,
         YTD_UL_MOV_QTY1 NUMBER ,
         YTD_UL_MOV_QTY2 NUMBER ,
         TOTAL_MOV_QTY1 NUMBER ,
         TOTAL_MOV_QTY2 NUMBER ,
         UL_OPENING_POS_QTY1 NUMBER ,
         UL_OPENING_POS_QTY2 NUMBER ,
         UL_CLOSING_POS_QTY1 NUMBER ,
         UL_CLOSING_POS_QTY2 NUMBER ,
         YTD_PROD_QTY1 NUMBER ,
         YTD_PROD_QTY2 NUMBER ,
         OL_CLOSING_POS_QTY1 NUMBER ,
         OL_CLOSING_POS_QTY2 NUMBER ,
         VALID1_USER_ID VARCHAR2 (30) ,
         VALID2_USER_ID VARCHAR2 (30) ,
         TRANSFER_USER_ID VARCHAR2 (30) ,
         BOOKED_USER_ID VARCHAR2 (30) ,
         DOCUMENT_LEVEL_CODE VARCHAR2 (32) ,
         UL_RATE NUMBER ,
         SET_TO_NEXT_IND VARCHAR2 (1) ,
         SET_TO_PREV_IND VARCHAR2 (1) ,
         UL_AVG_RATE_STATUS VARCHAR2 (32) ,
         OL_AVG_PRICE_STATUS VARCHAR2 (32) ,
         YTD_OL_MOV_QTY1 NUMBER ,
         YTD_OL_MOV_QTY2 NUMBER ,
         OL_OPENING_QTY1 NUMBER ,
         OL_OPENING_QTY2 NUMBER ,
         TRANSFER_DATE  DATE ,
         BOOKING_DATE  DATE ,
         SET_TO_BOOKED_DATE  DATE ,
         POSTING_TYPE VARCHAR2 (32) ,
         PROCESSED_BY VARCHAR2 (30) ,
         PROCESSED_DATE  DATE ,
         GROUP_CURRENCY_ID VARCHAR2 (32) ,
         LOCAL_CURRENCY_ID VARCHAR2 (32) ,
         OL_BOOKING_GROUP_FOREX_RATE NUMBER ,
         OL_BOOKING_LOCAL_FOREX_RATE NUMBER ,
         OL_BOOKING_MEMO_FOREX_RATE NUMBER ,
         OL_RATE NUMBER ,
         PS_AVG_RATE NUMBER ,
         PS_CLOSING_BOOKING_VALUE NUMBER ,
         PS_CLOSING_MEMO_VALUE NUMBER ,
         PS_CLOSING_POS_QTY1 NUMBER ,
         PS_CLOSING_POS_QTY2 NUMBER ,
         PS_CLOSING_PRICING_VALUE NUMBER ,
         PS_OPENING_QTY1 NUMBER ,
         PS_OPENING_QTY2 NUMBER ,
         PS_RATE NUMBER ,
         PS_BOOKING_VALUE NUMBER ,
         PS_MEMO_VALUE NUMBER ,
         PS_PRICE_VALUE NUMBER ,
         UL_BOOKING_GROUP_FOREX_RATE NUMBER ,
         UL_BOOKING_LOCAL_FOREX_RATE NUMBER ,
         UL_BOOKING_MEMO_FOREX_RATE NUMBER ,
         YTD_PS_MOV_QTY1 NUMBER ,
         YTD_PS_MOV_QTY2 NUMBER ,
         TOTAL_CLOSING_POS_QTY1 NUMBER ,
         TOTAL_CLOSING_POS_QTY2 NUMBER ,
         PS_AVG_RATE_STATUS VARCHAR2 (32) ,
         YEAR_CODE VARCHAR2 (4) ,
         HISTORIC VARCHAR2 (32) ,
         INV_MONEY_DIST_METHOD VARCHAR2 (32) ,
         INV_PRICING_VALUE_METHOD VARCHAR2 (32) ,
         ERP_FEEDBACK_DATE  DATE ,
         ERP_FEEDBACK_ERROR_MESS VARCHAR2 (2000) ,
         ERP_FEEDBACK_REF VARCHAR2 (240) ,
         ERP_FEEDBACK_STATUS VARCHAR2 (240) ,
         COMMENTS VARCHAR2 (2000) ,
         VALUE_1 NUMBER ,
         VALUE_2 NUMBER ,
         VALUE_3 NUMBER ,
         VALUE_4 NUMBER ,
         VALUE_5 NUMBER ,
         TEXT_1 VARCHAR2 (240) ,
         TEXT_2 VARCHAR2 (240) ,
         TEXT_3 VARCHAR2 (240) ,
         TEXT_4 VARCHAR2 (240) ,
         TEXT_5 VARCHAR2 (240) ,
         TEXT_6 VARCHAR2 (240) ,
         TEXT_7 VARCHAR2 (240) ,
         TEXT_8 VARCHAR2 (240) ,
         TEXT_9 VARCHAR2 (240) ,
         TEXT_10 VARCHAR2 (240) ,
         DATE_1  DATE ,
         DATE_2  DATE ,
         DATE_3  DATE ,
         DATE_4  DATE ,
         DATE_5  DATE ,
         RECORD_STATUS VARCHAR2 (1) ,
         CREATED_BY VARCHAR2 (30) ,
         CREATED_DATE  DATE ,
         LAST_UPDATED_BY VARCHAR2 (30) ,
         LAST_UPDATED_DATE  DATE ,
         REV_NO NUMBER ,
         REV_TEXT VARCHAR2 (2000) ,
         APPROVAL_BY VARCHAR2 (30) ,
         APPROVAL_DATE  DATE ,
         APPROVAL_STATE VARCHAR2 (1) ,
         REC_ID VARCHAR2 (32)  );
   FUNCTION ROW_BY_PK(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN REC_ROW_BY_PK;
      TYPE REC_ROW_BY_REL_OPERATOR IS RECORD (
         OBJECT_ID VARCHAR2 (32) ,
         DAYTIME  DATE ,
         BOOK_CATEGORY VARCHAR2 (32) ,
         VALUATION_METHOD VARCHAR2 (32) ,
         VALUATION_LEVEL VARCHAR2 (32) ,
         FX_TYPE VARCHAR2 (32) ,
         FX_SOURCE_CODE VARCHAR2 (32) ,
         FX_SOURCE_ID VARCHAR2 (32) ,
         NAME VARCHAR2 (240) ,
         DESCRIPTION VARCHAR2 (240) ,
         CLOSING_PRICE_VALUE NUMBER ,
         CLOSING_MEMO_VALUE NUMBER ,
         CLOSING_BOOKING_VALUE NUMBER ,
         UL_AVG_RATE NUMBER ,
         OL_AVG_RATE NUMBER ,
         UL_PRICE_VALUE NUMBER ,
         UL_MEMO_VALUE NUMBER ,
         UL_BOOKING_VALUE NUMBER ,
         OL_PRICE_VALUE NUMBER ,
         OL_MEMO_VALUE NUMBER ,
         OL_BOOKING_VALUE NUMBER ,
         UOM1_CODE VARCHAR2 (16) ,
         UOM2_CODE VARCHAR2 (16) ,
         UL_PRICING_CURRENCY_ID VARCHAR2 (32) ,
         UL_BOOKING_CURRENCY_ID VARCHAR2 (32) ,
         UL_MEMO_CURRENCY_ID VARCHAR2 (32) ,
         OL_PRICING_CURRENCY_ID VARCHAR2 (32) ,
         OL_BOOKING_CURRENCY_ID VARCHAR2 (32) ,
         OL_MEMO_CURRENCY_ID VARCHAR2 (32) ,
         YTD_UL_MOV_QTY1 NUMBER ,
         YTD_UL_MOV_QTY2 NUMBER ,
         TOTAL_MOV_QTY1 NUMBER ,
         TOTAL_MOV_QTY2 NUMBER ,
         UL_OPENING_POS_QTY1 NUMBER ,
         UL_OPENING_POS_QTY2 NUMBER ,
         UL_CLOSING_POS_QTY1 NUMBER ,
         UL_CLOSING_POS_QTY2 NUMBER ,
         YTD_PROD_QTY1 NUMBER ,
         YTD_PROD_QTY2 NUMBER ,
         OL_CLOSING_POS_QTY1 NUMBER ,
         OL_CLOSING_POS_QTY2 NUMBER ,
         VALID1_USER_ID VARCHAR2 (30) ,
         VALID2_USER_ID VARCHAR2 (30) ,
         TRANSFER_USER_ID VARCHAR2 (30) ,
         BOOKED_USER_ID VARCHAR2 (30) ,
         DOCUMENT_LEVEL_CODE VARCHAR2 (32) ,
         UL_RATE NUMBER ,
         SET_TO_NEXT_IND VARCHAR2 (1) ,
         SET_TO_PREV_IND VARCHAR2 (1) ,
         UL_AVG_RATE_STATUS VARCHAR2 (32) ,
         OL_AVG_PRICE_STATUS VARCHAR2 (32) ,
         YTD_OL_MOV_QTY1 NUMBER ,
         YTD_OL_MOV_QTY2 NUMBER ,
         OL_OPENING_QTY1 NUMBER ,
         OL_OPENING_QTY2 NUMBER ,
         TRANSFER_DATE  DATE ,
         BOOKING_DATE  DATE ,
         SET_TO_BOOKED_DATE  DATE ,
         POSTING_TYPE VARCHAR2 (32) ,
         PROCESSED_BY VARCHAR2 (30) ,
         PROCESSED_DATE  DATE ,
         GROUP_CURRENCY_ID VARCHAR2 (32) ,
         LOCAL_CURRENCY_ID VARCHAR2 (32) ,
         OL_BOOKING_GROUP_FOREX_RATE NUMBER ,
         OL_BOOKING_LOCAL_FOREX_RATE NUMBER ,
         OL_BOOKING_MEMO_FOREX_RATE NUMBER ,
         OL_RATE NUMBER ,
         PS_AVG_RATE NUMBER ,
         PS_CLOSING_BOOKING_VALUE NUMBER ,
         PS_CLOSING_MEMO_VALUE NUMBER ,
         PS_CLOSING_POS_QTY1 NUMBER ,
         PS_CLOSING_POS_QTY2 NUMBER ,
         PS_CLOSING_PRICING_VALUE NUMBER ,
         PS_OPENING_QTY1 NUMBER ,
         PS_OPENING_QTY2 NUMBER ,
         PS_RATE NUMBER ,
         PS_BOOKING_VALUE NUMBER ,
         PS_MEMO_VALUE NUMBER ,
         PS_PRICE_VALUE NUMBER ,
         UL_BOOKING_GROUP_FOREX_RATE NUMBER ,
         UL_BOOKING_LOCAL_FOREX_RATE NUMBER ,
         UL_BOOKING_MEMO_FOREX_RATE NUMBER ,
         YTD_PS_MOV_QTY1 NUMBER ,
         YTD_PS_MOV_QTY2 NUMBER ,
         TOTAL_CLOSING_POS_QTY1 NUMBER ,
         TOTAL_CLOSING_POS_QTY2 NUMBER ,
         PS_AVG_RATE_STATUS VARCHAR2 (32) ,
         YEAR_CODE VARCHAR2 (4) ,
         HISTORIC VARCHAR2 (32) ,
         INV_MONEY_DIST_METHOD VARCHAR2 (32) ,
         INV_PRICING_VALUE_METHOD VARCHAR2 (32) ,
         ERP_FEEDBACK_DATE  DATE ,
         ERP_FEEDBACK_ERROR_MESS VARCHAR2 (2000) ,
         ERP_FEEDBACK_REF VARCHAR2 (240) ,
         ERP_FEEDBACK_STATUS VARCHAR2 (240) ,
         COMMENTS VARCHAR2 (2000) ,
         VALUE_1 NUMBER ,
         VALUE_2 NUMBER ,
         VALUE_3 NUMBER ,
         VALUE_4 NUMBER ,
         VALUE_5 NUMBER ,
         TEXT_1 VARCHAR2 (240) ,
         TEXT_2 VARCHAR2 (240) ,
         TEXT_3 VARCHAR2 (240) ,
         TEXT_4 VARCHAR2 (240) ,
         TEXT_5 VARCHAR2 (240) ,
         TEXT_6 VARCHAR2 (240) ,
         TEXT_7 VARCHAR2 (240) ,
         TEXT_8 VARCHAR2 (240) ,
         TEXT_9 VARCHAR2 (240) ,
         TEXT_10 VARCHAR2 (240) ,
         DATE_1  DATE ,
         DATE_2  DATE ,
         DATE_3  DATE ,
         DATE_4  DATE ,
         DATE_5  DATE ,
         RECORD_STATUS VARCHAR2 (1) ,
         CREATED_BY VARCHAR2 (30) ,
         CREATED_DATE  DATE ,
         LAST_UPDATED_BY VARCHAR2 (30) ,
         LAST_UPDATED_DATE  DATE ,
         REV_NO NUMBER ,
         REV_TEXT VARCHAR2 (2000) ,
         APPROVAL_BY VARCHAR2 (30) ,
         APPROVAL_DATE  DATE ,
         APPROVAL_STATE VARCHAR2 (1) ,
         REC_ID VARCHAR2 (32)  );
   FUNCTION ROW_BY_REL_OPERATOR(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN REC_ROW_BY_REL_OPERATOR;
   FUNCTION SET_TO_NEXT_IND(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION SET_TO_PREV_IND(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION TEXT_2(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION TEXT_4(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION TEXT_5(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION UL_PRICE_VALUE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION UOM2_CODE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION VALID1_USER_ID(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION VALUATION_METHOD(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION VALUE_2(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION VALUE_3(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION VALUE_4(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION YTD_PS_MOV_QTY1(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION DATE_4(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN DATE;
   FUNCTION ERP_FEEDBACK_REF(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION OL_PRICING_CURRENCY_ID(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION OL_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION PROCESSED_BY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION PROCESSED_DATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN DATE;
   FUNCTION PS_CLOSING_MEMO_VALUE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION REC_ID(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION UL_CLOSING_POS_QTY1(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION VALUATION_LEVEL(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION DATE_1(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN DATE;
   FUNCTION FX_SOURCE_CODE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION INV_PRICING_VALUE_METHOD(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION OL_AVG_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION OL_BOOKING_VALUE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION OL_MEMO_VALUE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION OL_PRICE_VALUE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION PS_BOOKING_VALUE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION TEXT_10(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION UL_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION UOM1_CODE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;

END RP_INV_VALUATION;

/



CREATE or REPLACE PACKAGE BODY RP_INV_VALUATION
IS

   FUNCTION CLOSING_PRICE_VALUE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.CLOSING_PRICE_VALUE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END CLOSING_PRICE_VALUE;
   FUNCTION FX_SOURCE_ID(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_INV_VALUATION.FX_SOURCE_ID      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END FX_SOURCE_ID;
   FUNCTION GROUP_CURRENCY_ID(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_INV_VALUATION.GROUP_CURRENCY_ID      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END GROUP_CURRENCY_ID;
   FUNCTION OL_BOOKING_CURRENCY_ID(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_INV_VALUATION.OL_BOOKING_CURRENCY_ID      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END OL_BOOKING_CURRENCY_ID;
   FUNCTION OL_BOOKING_LOCAL_FOREX_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.OL_BOOKING_LOCAL_FOREX_RATE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END OL_BOOKING_LOCAL_FOREX_RATE;
   FUNCTION PS_CLOSING_POS_QTY1(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.PS_CLOSING_POS_QTY1      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END PS_CLOSING_POS_QTY1;
   FUNCTION PS_CLOSING_PRICING_VALUE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.PS_CLOSING_PRICING_VALUE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END PS_CLOSING_PRICING_VALUE;
   FUNCTION SET_TO_BOOKED_DATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_INV_VALUATION.SET_TO_BOOKED_DATE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END SET_TO_BOOKED_DATE;
   FUNCTION TEXT_3(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_INV_VALUATION.TEXT_3      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END TEXT_3;
   FUNCTION TOTAL_MOV_QTY2(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.TOTAL_MOV_QTY2      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END TOTAL_MOV_QTY2;
   FUNCTION UL_AVG_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.UL_AVG_RATE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END UL_AVG_RATE;
   FUNCTION UL_BOOKING_LOCAL_FOREX_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.UL_BOOKING_LOCAL_FOREX_RATE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END UL_BOOKING_LOCAL_FOREX_RATE;
   FUNCTION UL_BOOKING_VALUE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.UL_BOOKING_VALUE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END UL_BOOKING_VALUE;
   FUNCTION UL_CLOSING_POS_QTY2(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.UL_CLOSING_POS_QTY2      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END UL_CLOSING_POS_QTY2;
   FUNCTION APPROVAL_BY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (30) ;
   BEGIN
      ret_value := EC_INV_VALUATION.APPROVAL_BY      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END APPROVAL_BY;
   FUNCTION APPROVAL_STATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_INV_VALUATION.APPROVAL_STATE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END APPROVAL_STATE;
   FUNCTION BOOKING_DATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_INV_VALUATION.BOOKING_DATE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END BOOKING_DATE;
   FUNCTION CLOSING_BOOKING_VALUE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.CLOSING_BOOKING_VALUE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END CLOSING_BOOKING_VALUE;
   FUNCTION FX_TYPE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_INV_VALUATION.FX_TYPE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END FX_TYPE;
   FUNCTION INV_MONEY_DIST_METHOD(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_INV_VALUATION.INV_MONEY_DIST_METHOD      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END INV_MONEY_DIST_METHOD;
   FUNCTION OL_AVG_PRICE_STATUS(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_INV_VALUATION.OL_AVG_PRICE_STATUS      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END OL_AVG_PRICE_STATUS;
   FUNCTION OL_CLOSING_POS_QTY2(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.OL_CLOSING_POS_QTY2      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END OL_CLOSING_POS_QTY2;
   FUNCTION OL_MEMO_CURRENCY_ID(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_INV_VALUATION.OL_MEMO_CURRENCY_ID      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END OL_MEMO_CURRENCY_ID;
   FUNCTION PS_MEMO_VALUE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.PS_MEMO_VALUE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END PS_MEMO_VALUE;
   FUNCTION UL_BOOKING_CURRENCY_ID(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_INV_VALUATION.UL_BOOKING_CURRENCY_ID      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END UL_BOOKING_CURRENCY_ID;
   FUNCTION UL_MEMO_CURRENCY_ID(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_INV_VALUATION.UL_MEMO_CURRENCY_ID      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END UL_MEMO_CURRENCY_ID;
   FUNCTION VALUE_5(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.VALUE_5      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END VALUE_5;
   FUNCTION YTD_OL_MOV_QTY2(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.YTD_OL_MOV_QTY2      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END YTD_OL_MOV_QTY2;
   FUNCTION YTD_PROD_QTY1(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.YTD_PROD_QTY1      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END YTD_PROD_QTY1;
   FUNCTION YTD_PS_MOV_QTY2(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.YTD_PS_MOV_QTY2      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END YTD_PS_MOV_QTY2;
   FUNCTION BOOKED_USER_ID(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (30) ;
   BEGIN
      ret_value := EC_INV_VALUATION.BOOKED_USER_ID      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END BOOKED_USER_ID;
   FUNCTION ERP_FEEDBACK_ERROR_MESS(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_INV_VALUATION.ERP_FEEDBACK_ERROR_MESS      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END ERP_FEEDBACK_ERROR_MESS;
   FUNCTION NEXT_DAYTIME(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_INV_VALUATION.NEXT_DAYTIME      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_NUM_ROWS );
         RETURN ret_value;
   END NEXT_DAYTIME;
   FUNCTION OL_BOOKING_MEMO_FOREX_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.OL_BOOKING_MEMO_FOREX_RATE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END OL_BOOKING_MEMO_FOREX_RATE;
   FUNCTION OL_OPENING_QTY1(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.OL_OPENING_QTY1      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END OL_OPENING_QTY1;
   FUNCTION PREV_EQUAL_DAYTIME(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_INV_VALUATION.PREV_EQUAL_DAYTIME      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_NUM_ROWS );
         RETURN ret_value;
   END PREV_EQUAL_DAYTIME;
   FUNCTION PS_AVG_RATE_STATUS(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_INV_VALUATION.PS_AVG_RATE_STATUS      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END PS_AVG_RATE_STATUS;
   FUNCTION TEXT_7(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_INV_VALUATION.TEXT_7      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END TEXT_7;
   FUNCTION TEXT_8(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_INV_VALUATION.TEXT_8      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END TEXT_8;
   FUNCTION TOTAL_CLOSING_POS_QTY2(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.TOTAL_CLOSING_POS_QTY2      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END TOTAL_CLOSING_POS_QTY2;
   FUNCTION TRANSFER_DATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_INV_VALUATION.TRANSFER_DATE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END TRANSFER_DATE;
   FUNCTION UL_BOOKING_GROUP_FOREX_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.UL_BOOKING_GROUP_FOREX_RATE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END UL_BOOKING_GROUP_FOREX_RATE;
   FUNCTION UL_OPENING_POS_QTY2(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.UL_OPENING_POS_QTY2      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END UL_OPENING_POS_QTY2;
   FUNCTION UL_PRICING_CURRENCY_ID(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_INV_VALUATION.UL_PRICING_CURRENCY_ID      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END UL_PRICING_CURRENCY_ID;
   FUNCTION YTD_PROD_QTY2(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.YTD_PROD_QTY2      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END YTD_PROD_QTY2;
   FUNCTION YTD_UL_MOV_QTY2(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.YTD_UL_MOV_QTY2      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END YTD_UL_MOV_QTY2;
   FUNCTION CLOSING_MEMO_VALUE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.CLOSING_MEMO_VALUE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END CLOSING_MEMO_VALUE;
   FUNCTION COMMENTS(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_INV_VALUATION.COMMENTS      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END COMMENTS;
   FUNCTION DATE_3(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_INV_VALUATION.DATE_3      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END DATE_3;
   FUNCTION DATE_5(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_INV_VALUATION.DATE_5      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END DATE_5;
   FUNCTION DOCUMENT_LEVEL_CODE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_INV_VALUATION.DOCUMENT_LEVEL_CODE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END DOCUMENT_LEVEL_CODE;
   FUNCTION ERP_FEEDBACK_STATUS(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_INV_VALUATION.ERP_FEEDBACK_STATUS      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END ERP_FEEDBACK_STATUS;
   FUNCTION HISTORIC(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_INV_VALUATION.HISTORIC      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END HISTORIC;
   FUNCTION NEXT_EQUAL_DAYTIME(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_INV_VALUATION.NEXT_EQUAL_DAYTIME      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_NUM_ROWS );
         RETURN ret_value;
   END NEXT_EQUAL_DAYTIME;
   FUNCTION OL_BOOKING_GROUP_FOREX_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.OL_BOOKING_GROUP_FOREX_RATE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END OL_BOOKING_GROUP_FOREX_RATE;
   FUNCTION OL_OPENING_QTY2(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.OL_OPENING_QTY2      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END OL_OPENING_QTY2;
   FUNCTION PS_CLOSING_BOOKING_VALUE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.PS_CLOSING_BOOKING_VALUE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END PS_CLOSING_BOOKING_VALUE;
   FUNCTION PS_CLOSING_POS_QTY2(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.PS_CLOSING_POS_QTY2      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END PS_CLOSING_POS_QTY2;
   FUNCTION PS_PRICE_VALUE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.PS_PRICE_VALUE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END PS_PRICE_VALUE;
   FUNCTION PS_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.PS_RATE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END PS_RATE;
   FUNCTION TEXT_1(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_INV_VALUATION.TEXT_1      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END TEXT_1;
   FUNCTION TEXT_6(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_INV_VALUATION.TEXT_6      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END TEXT_6;
   FUNCTION TEXT_9(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_INV_VALUATION.TEXT_9      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END TEXT_9;
   FUNCTION TOTAL_CLOSING_POS_QTY1(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.TOTAL_CLOSING_POS_QTY1      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END TOTAL_CLOSING_POS_QTY1;
   FUNCTION UL_MEMO_VALUE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.UL_MEMO_VALUE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END UL_MEMO_VALUE;
   FUNCTION UL_OPENING_POS_QTY1(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.UL_OPENING_POS_QTY1      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END UL_OPENING_POS_QTY1;
   FUNCTION YTD_UL_MOV_QTY1(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.YTD_UL_MOV_QTY1      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END YTD_UL_MOV_QTY1;
   FUNCTION BOOK_CATEGORY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_INV_VALUATION.BOOK_CATEGORY      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END BOOK_CATEGORY;
   FUNCTION DATE_2(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_INV_VALUATION.DATE_2      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END DATE_2;
   FUNCTION OL_CLOSING_POS_QTY1(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.OL_CLOSING_POS_QTY1      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END OL_CLOSING_POS_QTY1;
   FUNCTION PREV_DAYTIME(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_INV_VALUATION.PREV_DAYTIME      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_NUM_ROWS );
         RETURN ret_value;
   END PREV_DAYTIME;
   FUNCTION PS_OPENING_QTY1(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.PS_OPENING_QTY1      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END PS_OPENING_QTY1;
   FUNCTION RECORD_STATUS(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_INV_VALUATION.RECORD_STATUS      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END RECORD_STATUS;
   FUNCTION TOTAL_MOV_QTY1(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.TOTAL_MOV_QTY1      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END TOTAL_MOV_QTY1;
   FUNCTION TRANSFER_USER_ID(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (30) ;
   BEGIN
      ret_value := EC_INV_VALUATION.TRANSFER_USER_ID      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END TRANSFER_USER_ID;
   FUNCTION UL_AVG_RATE_STATUS(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_INV_VALUATION.UL_AVG_RATE_STATUS      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END UL_AVG_RATE_STATUS;
   FUNCTION UL_BOOKING_MEMO_FOREX_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.UL_BOOKING_MEMO_FOREX_RATE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END UL_BOOKING_MEMO_FOREX_RATE;
   FUNCTION VALID2_USER_ID(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (30) ;
   BEGIN
      ret_value := EC_INV_VALUATION.VALID2_USER_ID      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END VALID2_USER_ID;
   FUNCTION VALUE_1(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.VALUE_1      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END VALUE_1;
   FUNCTION YTD_OL_MOV_QTY1(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.YTD_OL_MOV_QTY1      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END YTD_OL_MOV_QTY1;
   FUNCTION APPROVAL_DATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_INV_VALUATION.APPROVAL_DATE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END APPROVAL_DATE;
   FUNCTION DESCRIPTION(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_INV_VALUATION.DESCRIPTION      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END DESCRIPTION;
   FUNCTION ERP_FEEDBACK_DATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_INV_VALUATION.ERP_FEEDBACK_DATE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END ERP_FEEDBACK_DATE;
   FUNCTION LOCAL_CURRENCY_ID(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_INV_VALUATION.LOCAL_CURRENCY_ID      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END LOCAL_CURRENCY_ID;
   FUNCTION NAME(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_INV_VALUATION.NAME      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END NAME;
   FUNCTION POSTING_TYPE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_INV_VALUATION.POSTING_TYPE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END POSTING_TYPE;
   FUNCTION PS_AVG_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.PS_AVG_RATE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END PS_AVG_RATE;
   FUNCTION PS_OPENING_QTY2(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.PS_OPENING_QTY2      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END PS_OPENING_QTY2;
   FUNCTION ROW_BY_PK(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN REC_ROW_BY_PK
   IS
      ret_value    REC_ROW_BY_PK ;
   BEGIN
      ret_value := EC_INV_VALUATION.ROW_BY_PK      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END ROW_BY_PK;
   FUNCTION ROW_BY_REL_OPERATOR(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN REC_ROW_BY_REL_OPERATOR
   IS
      ret_value    REC_ROW_BY_REL_OPERATOR ;
   BEGIN
      ret_value := EC_INV_VALUATION.ROW_BY_REL_OPERATOR      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END ROW_BY_REL_OPERATOR;
   FUNCTION SET_TO_NEXT_IND(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_INV_VALUATION.SET_TO_NEXT_IND      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END SET_TO_NEXT_IND;
   FUNCTION SET_TO_PREV_IND(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_INV_VALUATION.SET_TO_PREV_IND      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END SET_TO_PREV_IND;
   FUNCTION TEXT_2(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_INV_VALUATION.TEXT_2      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END TEXT_2;
   FUNCTION TEXT_4(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_INV_VALUATION.TEXT_4      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END TEXT_4;
   FUNCTION TEXT_5(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_INV_VALUATION.TEXT_5      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END TEXT_5;
   FUNCTION UL_PRICE_VALUE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.UL_PRICE_VALUE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END UL_PRICE_VALUE;
   FUNCTION UOM2_CODE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (16) ;
   BEGIN
      ret_value := EC_INV_VALUATION.UOM2_CODE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END UOM2_CODE;
   FUNCTION VALID1_USER_ID(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (30) ;
   BEGIN
      ret_value := EC_INV_VALUATION.VALID1_USER_ID      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END VALID1_USER_ID;
   FUNCTION VALUATION_METHOD(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_INV_VALUATION.VALUATION_METHOD      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END VALUATION_METHOD;
   FUNCTION VALUE_2(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.VALUE_2      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END VALUE_2;
   FUNCTION VALUE_3(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.VALUE_3      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END VALUE_3;
   FUNCTION VALUE_4(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.VALUE_4      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END VALUE_4;
   FUNCTION YTD_PS_MOV_QTY1(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.YTD_PS_MOV_QTY1      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END YTD_PS_MOV_QTY1;
   FUNCTION DATE_4(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_INV_VALUATION.DATE_4      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END DATE_4;
   FUNCTION ERP_FEEDBACK_REF(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_INV_VALUATION.ERP_FEEDBACK_REF      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END ERP_FEEDBACK_REF;
   FUNCTION OL_PRICING_CURRENCY_ID(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_INV_VALUATION.OL_PRICING_CURRENCY_ID      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END OL_PRICING_CURRENCY_ID;
   FUNCTION OL_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.OL_RATE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END OL_RATE;
   FUNCTION PROCESSED_BY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (30) ;
   BEGIN
      ret_value := EC_INV_VALUATION.PROCESSED_BY      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END PROCESSED_BY;
   FUNCTION PROCESSED_DATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_INV_VALUATION.PROCESSED_DATE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END PROCESSED_DATE;
   FUNCTION PS_CLOSING_MEMO_VALUE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.PS_CLOSING_MEMO_VALUE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END PS_CLOSING_MEMO_VALUE;
   FUNCTION REC_ID(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_INV_VALUATION.REC_ID      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END REC_ID;
   FUNCTION UL_CLOSING_POS_QTY1(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.UL_CLOSING_POS_QTY1      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END UL_CLOSING_POS_QTY1;
   FUNCTION VALUATION_LEVEL(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_INV_VALUATION.VALUATION_LEVEL      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END VALUATION_LEVEL;
   FUNCTION DATE_1(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_INV_VALUATION.DATE_1      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END DATE_1;
   FUNCTION FX_SOURCE_CODE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_INV_VALUATION.FX_SOURCE_CODE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END FX_SOURCE_CODE;
   FUNCTION INV_PRICING_VALUE_METHOD(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_INV_VALUATION.INV_PRICING_VALUE_METHOD      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END INV_PRICING_VALUE_METHOD;
   FUNCTION OL_AVG_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.OL_AVG_RATE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END OL_AVG_RATE;
   FUNCTION OL_BOOKING_VALUE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.OL_BOOKING_VALUE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END OL_BOOKING_VALUE;
   FUNCTION OL_MEMO_VALUE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.OL_MEMO_VALUE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END OL_MEMO_VALUE;
   FUNCTION OL_PRICE_VALUE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.OL_PRICE_VALUE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END OL_PRICE_VALUE;
   FUNCTION PS_BOOKING_VALUE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.PS_BOOKING_VALUE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END PS_BOOKING_VALUE;
   FUNCTION TEXT_10(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_INV_VALUATION.TEXT_10      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END TEXT_10;
   FUNCTION UL_RATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_INV_VALUATION.UL_RATE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END UL_RATE;
   FUNCTION UOM1_CODE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_YEAR_CODE IN VARCHAR2,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (16) ;
   BEGIN
      ret_value := EC_INV_VALUATION.UOM1_CODE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_YEAR_CODE,
         P_COMPARE_OPER );
         RETURN ret_value;
   END UOM1_CODE;

END RP_INV_VALUATION;

/
--GRANT EXECUTE ON ECKERNEL_WST.RP_INV_VALUATION TO REPORT_ROLE_XXX;



 -- FINISH PKG_GEN_PKGS.sf_get_functions at:05/07/2019 09.18.09 AM


