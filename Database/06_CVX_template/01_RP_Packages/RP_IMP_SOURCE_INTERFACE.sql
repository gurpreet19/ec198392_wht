
 -- START PKG_GEN_PKGS.sf_get_functions at:05/07/2019 09.20.00 AM


CREATE or REPLACE PACKAGE RP_IMP_SOURCE_INTERFACE
IS

   FUNCTION PRE_STAGING_UE_PATH(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION APPROVAL_BY(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION APPROVAL_STATE(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION FUNCTIONAL_AREA_ID(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION POST_STAGING_UE_PATH(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION PRE_STAGING_UE_TYPE(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION STAGING_VALIDATION_IND(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TRANSACTION_TYPE(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION EC_DATA_LEVEL(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION IMPORT_SORTING(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION OVERWRITE(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION SAVE_UPLOADED_FILE_DAYS(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION POST_TARGET_UE_PATH(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION POST_TARGET_UE_TYPE(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION EC_VALID_LEVEL(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION FORMAT(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION POST_STAGING_UE_TYPE(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION PRE_TARGET_UE_PATH(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION RECORD_STATUS(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION REV_TEXT_VALUE(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION APPROVAL_DATE(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN DATE;
   FUNCTION NAME(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2;
      TYPE REC_ROW_BY_PK IS RECORD (
         INTERFACE_CODE VARCHAR2 (240) ,
         NAME VARCHAR2 (240) ,
         TYPE VARCHAR2 (32) ,
         TRANSACTION_TYPE VARCHAR2 (32) ,
         EC_DATA_LEVEL VARCHAR2 (1) ,
         EC_VALID_LEVEL VARCHAR2 (1) ,
         STAGING_VALIDATION_IND VARCHAR2 (1) ,
         POST_STAGING_UE_PATH VARCHAR2 (240) ,
         POST_STAGING_UE_TYPE VARCHAR2 (32) ,
         POST_TARGET_UE_TYPE VARCHAR2 (32) ,
         POST_TARGET_UE_PATH VARCHAR2 (240) ,
         PRE_STAGING_UE_PATH VARCHAR2 (240) ,
         PRE_STAGING_UE_TYPE VARCHAR2 (32) ,
         PRE_TARGET_UE_PATH VARCHAR2 (240) ,
         PRE_TARGET_UE_TYPE VARCHAR2 (32) ,
         SOURCE_TYPE VARCHAR2 (32) ,
         SAVE_UPLOADED_FILE_DAYS NUMBER ,
         FORMAT VARCHAR2 (32) ,
         OVERWRITE VARCHAR2 (32) ,
         FUNCTIONAL_AREA_ID VARCHAR2 (32) ,
         IMPORT_SORTING VARCHAR2 (32) ,
         REV_TEXT_VALUE VARCHAR2 (240) ,
         RECORD_STATUS VARCHAR2 (1) ,
         CREATED_BY VARCHAR2 (30) ,
         CREATED_DATE  DATE ,
         LAST_UPDATED_BY VARCHAR2 (30) ,
         LAST_UPDATED_DATE  DATE ,
         REV_NO NUMBER ,
         REV_TEXT VARCHAR2 (2000) ,
         APPROVAL_STATE VARCHAR2 (1) ,
         APPROVAL_BY VARCHAR2 (30) ,
         APPROVAL_DATE  DATE ,
         REC_ID VARCHAR2 (32)  );
   FUNCTION ROW_BY_PK(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN REC_ROW_BY_PK;
   FUNCTION TYPE(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION PRE_TARGET_UE_TYPE(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION REC_ID(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION SOURCE_TYPE(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2;

END RP_IMP_SOURCE_INTERFACE;

/



CREATE or REPLACE PACKAGE BODY RP_IMP_SOURCE_INTERFACE
IS

   FUNCTION PRE_STAGING_UE_PATH(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_IMP_SOURCE_INTERFACE.PRE_STAGING_UE_PATH      (
         P_INTERFACE_CODE );
         RETURN ret_value;
   END PRE_STAGING_UE_PATH;
   FUNCTION APPROVAL_BY(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (30) ;
   BEGIN
      ret_value := EC_IMP_SOURCE_INTERFACE.APPROVAL_BY      (
         P_INTERFACE_CODE );
         RETURN ret_value;
   END APPROVAL_BY;
   FUNCTION APPROVAL_STATE(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_IMP_SOURCE_INTERFACE.APPROVAL_STATE      (
         P_INTERFACE_CODE );
         RETURN ret_value;
   END APPROVAL_STATE;
   FUNCTION FUNCTIONAL_AREA_ID(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_IMP_SOURCE_INTERFACE.FUNCTIONAL_AREA_ID      (
         P_INTERFACE_CODE );
         RETURN ret_value;
   END FUNCTIONAL_AREA_ID;
   FUNCTION POST_STAGING_UE_PATH(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_IMP_SOURCE_INTERFACE.POST_STAGING_UE_PATH      (
         P_INTERFACE_CODE );
         RETURN ret_value;
   END POST_STAGING_UE_PATH;
   FUNCTION PRE_STAGING_UE_TYPE(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_IMP_SOURCE_INTERFACE.PRE_STAGING_UE_TYPE      (
         P_INTERFACE_CODE );
         RETURN ret_value;
   END PRE_STAGING_UE_TYPE;
   FUNCTION STAGING_VALIDATION_IND(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_IMP_SOURCE_INTERFACE.STAGING_VALIDATION_IND      (
         P_INTERFACE_CODE );
         RETURN ret_value;
   END STAGING_VALIDATION_IND;
   FUNCTION TRANSACTION_TYPE(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_IMP_SOURCE_INTERFACE.TRANSACTION_TYPE      (
         P_INTERFACE_CODE );
         RETURN ret_value;
   END TRANSACTION_TYPE;
   FUNCTION EC_DATA_LEVEL(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_IMP_SOURCE_INTERFACE.EC_DATA_LEVEL      (
         P_INTERFACE_CODE );
         RETURN ret_value;
   END EC_DATA_LEVEL;
   FUNCTION IMPORT_SORTING(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_IMP_SOURCE_INTERFACE.IMPORT_SORTING      (
         P_INTERFACE_CODE );
         RETURN ret_value;
   END IMPORT_SORTING;
   FUNCTION OVERWRITE(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_IMP_SOURCE_INTERFACE.OVERWRITE      (
         P_INTERFACE_CODE );
         RETURN ret_value;
   END OVERWRITE;
   FUNCTION SAVE_UPLOADED_FILE_DAYS(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_IMP_SOURCE_INTERFACE.SAVE_UPLOADED_FILE_DAYS      (
         P_INTERFACE_CODE );
         RETURN ret_value;
   END SAVE_UPLOADED_FILE_DAYS;
   FUNCTION POST_TARGET_UE_PATH(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_IMP_SOURCE_INTERFACE.POST_TARGET_UE_PATH      (
         P_INTERFACE_CODE );
         RETURN ret_value;
   END POST_TARGET_UE_PATH;
   FUNCTION POST_TARGET_UE_TYPE(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_IMP_SOURCE_INTERFACE.POST_TARGET_UE_TYPE      (
         P_INTERFACE_CODE );
         RETURN ret_value;
   END POST_TARGET_UE_TYPE;
   FUNCTION EC_VALID_LEVEL(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_IMP_SOURCE_INTERFACE.EC_VALID_LEVEL      (
         P_INTERFACE_CODE );
         RETURN ret_value;
   END EC_VALID_LEVEL;
   FUNCTION FORMAT(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_IMP_SOURCE_INTERFACE.FORMAT      (
         P_INTERFACE_CODE );
         RETURN ret_value;
   END FORMAT;
   FUNCTION POST_STAGING_UE_TYPE(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_IMP_SOURCE_INTERFACE.POST_STAGING_UE_TYPE      (
         P_INTERFACE_CODE );
         RETURN ret_value;
   END POST_STAGING_UE_TYPE;
   FUNCTION PRE_TARGET_UE_PATH(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_IMP_SOURCE_INTERFACE.PRE_TARGET_UE_PATH      (
         P_INTERFACE_CODE );
         RETURN ret_value;
   END PRE_TARGET_UE_PATH;
   FUNCTION RECORD_STATUS(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_IMP_SOURCE_INTERFACE.RECORD_STATUS      (
         P_INTERFACE_CODE );
         RETURN ret_value;
   END RECORD_STATUS;
   FUNCTION REV_TEXT_VALUE(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_IMP_SOURCE_INTERFACE.REV_TEXT_VALUE      (
         P_INTERFACE_CODE );
         RETURN ret_value;
   END REV_TEXT_VALUE;
   FUNCTION APPROVAL_DATE(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_IMP_SOURCE_INTERFACE.APPROVAL_DATE      (
         P_INTERFACE_CODE );
         RETURN ret_value;
   END APPROVAL_DATE;
   FUNCTION NAME(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_IMP_SOURCE_INTERFACE.NAME      (
         P_INTERFACE_CODE );
         RETURN ret_value;
   END NAME;
   FUNCTION ROW_BY_PK(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN REC_ROW_BY_PK
   IS
      ret_value    REC_ROW_BY_PK ;
   BEGIN
      ret_value := EC_IMP_SOURCE_INTERFACE.ROW_BY_PK      (
         P_INTERFACE_CODE );
         RETURN ret_value;
   END ROW_BY_PK;
   FUNCTION TYPE(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_IMP_SOURCE_INTERFACE.TYPE      (
         P_INTERFACE_CODE );
         RETURN ret_value;
   END TYPE;
   FUNCTION PRE_TARGET_UE_TYPE(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_IMP_SOURCE_INTERFACE.PRE_TARGET_UE_TYPE      (
         P_INTERFACE_CODE );
         RETURN ret_value;
   END PRE_TARGET_UE_TYPE;
   FUNCTION REC_ID(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_IMP_SOURCE_INTERFACE.REC_ID      (
         P_INTERFACE_CODE );
         RETURN ret_value;
   END REC_ID;
   FUNCTION SOURCE_TYPE(
      P_INTERFACE_CODE IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_IMP_SOURCE_INTERFACE.SOURCE_TYPE      (
         P_INTERFACE_CODE );
         RETURN ret_value;
   END SOURCE_TYPE;

END RP_IMP_SOURCE_INTERFACE;

/
--GRANT EXECUTE ON ECKERNEL_WST.RP_IMP_SOURCE_INTERFACE TO REPORT_ROLE_XXX;



 -- FINISH PKG_GEN_PKGS.sf_get_functions at:05/07/2019 09.20.06 AM


