
 -- START PKG_GEN_PKGS.sf_get_functions at:11/15/2018 10.44.50 AM


CREATE or REPLACE PACKAGE RP_CLASS
IS

   FUNCTION CREATE_EV_IND(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION APPROVAL_BY(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION APPROVAL_STATE(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION LABEL(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION READ_ONLY_IND(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION DESCRIPTION(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION INCLUDE_WEBSERVICE(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TIME_SCOPE_CODE(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION ACCESS_CONTROL_IND(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION CALC_MAPPING_SYNTAX(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION CLASS_TYPE(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION LOCK_RULE(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION APP_SPACE_CODE(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION JOURNAL_RULE_DB_SYNTAX(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION LOCK_IND(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION RECORD_STATUS(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION APPROVAL_DATE(
      P_CLASS_NAME IN VARCHAR2)
      RETURN DATE;
   FUNCTION APPROVAL_IND(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2;
      TYPE REC_ROW_BY_PK IS RECORD (
         CLASS_NAME VARCHAR2 (24) ,
         SUPER_CLASS VARCHAR2 (24) ,
         CLASS_TYPE VARCHAR2 (32) ,
         APP_SPACE_CODE VARCHAR2 (32) ,
         TIME_SCOPE_CODE VARCHAR2 (32) ,
         OWNER_CLASS_NAME VARCHAR2 (24) ,
         CLASS_SHORT_CODE VARCHAR2 (24) ,
         LABEL VARCHAR2 (100) ,
         ENSURE_REV_TEXT_ON_UPD VARCHAR2 (1) ,
         READ_ONLY_IND VARCHAR2 (1) ,
         INCLUDE_IN_VALIDATION VARCHAR2 (1) ,
         CALC_ENGINE_TABLE_WRITE_IND VARCHAR2 (1) ,
         JOURNAL_RULE_DB_SYNTAX VARCHAR2 (4000) ,
         CALC_MAPPING_SYNTAX VARCHAR2 (4000) ,
         LOCK_RULE VARCHAR2 (4000) ,
         LOCK_IND VARCHAR2 (1) ,
         ACCESS_CONTROL_IND VARCHAR2 (1) ,
         APPROVAL_IND VARCHAR2 (1) ,
         SKIP_TRG_CHECK_IND VARCHAR2 (1) ,
         INCLUDE_WEBSERVICE VARCHAR2 (1) ,
         CREATE_EV_IND VARCHAR2 (1) ,
         INCLUDE_IN_MAPPING_IND VARCHAR2 (1) ,
         DESCRIPTION VARCHAR2 (4000) ,
         CLASS_VERSION VARCHAR2 (24) ,
         RECORD_STATUS VARCHAR2 (1) ,
         CREATED_BY VARCHAR2 (30) ,
         CREATED_DATE  DATE ,
         LAST_UPDATED_BY VARCHAR2 (30) ,
         LAST_UPDATED_DATE  DATE ,
         REV_NO NUMBER ,
         REV_TEXT VARCHAR2 (2000) ,
         APPROVAL_STATE VARCHAR2 (1) ,
         APPROVAL_BY VARCHAR2 (30) ,
         APPROVAL_DATE  DATE ,
         REC_ID VARCHAR2 (32)  );
   FUNCTION ROW_BY_PK(
      P_CLASS_NAME IN VARCHAR2)
      RETURN REC_ROW_BY_PK;
   FUNCTION SKIP_TRG_CHECK_IND(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION INCLUDE_IN_VALIDATION(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION OWNER_CLASS_NAME(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION REC_ID(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION SUPER_CLASS(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION CLASS_SHORT_CODE(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION CLASS_VERSION(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION ENSURE_REV_TEXT_ON_UPD(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2;

END RP_CLASS;

/



CREATE or REPLACE PACKAGE BODY RP_CLASS
IS

   FUNCTION CREATE_EV_IND(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_CLASS.CREATE_EV_IND      (
         P_CLASS_NAME );
         RETURN ret_value;
   END CREATE_EV_IND;
   FUNCTION APPROVAL_BY(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (30) ;
   BEGIN
      ret_value := EC_CLASS.APPROVAL_BY      (
         P_CLASS_NAME );
         RETURN ret_value;
   END APPROVAL_BY;
   FUNCTION APPROVAL_STATE(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_CLASS.APPROVAL_STATE      (
         P_CLASS_NAME );
         RETURN ret_value;
   END APPROVAL_STATE;
   FUNCTION LABEL(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (100) ;
   BEGIN
      ret_value := EC_CLASS.LABEL      (
         P_CLASS_NAME );
         RETURN ret_value;
   END LABEL;
   FUNCTION READ_ONLY_IND(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_CLASS.READ_ONLY_IND      (
         P_CLASS_NAME );
         RETURN ret_value;
   END READ_ONLY_IND;
   FUNCTION DESCRIPTION(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (4000) ;
   BEGIN
      ret_value := EC_CLASS.DESCRIPTION      (
         P_CLASS_NAME );
         RETURN ret_value;
   END DESCRIPTION;
   FUNCTION INCLUDE_WEBSERVICE(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_CLASS.INCLUDE_WEBSERVICE      (
         P_CLASS_NAME );
         RETURN ret_value;
   END INCLUDE_WEBSERVICE;
   FUNCTION TIME_SCOPE_CODE(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CLASS.TIME_SCOPE_CODE      (
         P_CLASS_NAME );
         RETURN ret_value;
   END TIME_SCOPE_CODE;
   FUNCTION ACCESS_CONTROL_IND(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_CLASS.ACCESS_CONTROL_IND      (
         P_CLASS_NAME );
         RETURN ret_value;
   END ACCESS_CONTROL_IND;
   FUNCTION CALC_MAPPING_SYNTAX(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (4000) ;
   BEGIN
      ret_value := EC_CLASS.CALC_MAPPING_SYNTAX      (
         P_CLASS_NAME );
         RETURN ret_value;
   END CALC_MAPPING_SYNTAX;
   FUNCTION CLASS_TYPE(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CLASS.CLASS_TYPE      (
         P_CLASS_NAME );
         RETURN ret_value;
   END CLASS_TYPE;
   FUNCTION LOCK_RULE(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (4000) ;
   BEGIN
      ret_value := EC_CLASS.LOCK_RULE      (
         P_CLASS_NAME );
         RETURN ret_value;
   END LOCK_RULE;
   FUNCTION APP_SPACE_CODE(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CLASS.APP_SPACE_CODE      (
         P_CLASS_NAME );
         RETURN ret_value;
   END APP_SPACE_CODE;
   FUNCTION JOURNAL_RULE_DB_SYNTAX(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (4000) ;
   BEGIN
      ret_value := EC_CLASS.JOURNAL_RULE_DB_SYNTAX      (
         P_CLASS_NAME );
         RETURN ret_value;
   END JOURNAL_RULE_DB_SYNTAX;
   FUNCTION LOCK_IND(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_CLASS.LOCK_IND      (
         P_CLASS_NAME );
         RETURN ret_value;
   END LOCK_IND;
   FUNCTION RECORD_STATUS(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_CLASS.RECORD_STATUS      (
         P_CLASS_NAME );
         RETURN ret_value;
   END RECORD_STATUS;
   FUNCTION APPROVAL_DATE(
      P_CLASS_NAME IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CLASS.APPROVAL_DATE      (
         P_CLASS_NAME );
         RETURN ret_value;
   END APPROVAL_DATE;
   FUNCTION APPROVAL_IND(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_CLASS.APPROVAL_IND      (
         P_CLASS_NAME );
         RETURN ret_value;
   END APPROVAL_IND;
   FUNCTION ROW_BY_PK(
      P_CLASS_NAME IN VARCHAR2)
      RETURN REC_ROW_BY_PK
   IS
      ret_value    REC_ROW_BY_PK ;
   BEGIN
      ret_value := EC_CLASS.ROW_BY_PK      (
         P_CLASS_NAME );
         RETURN ret_value;
   END ROW_BY_PK;
   FUNCTION SKIP_TRG_CHECK_IND(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_CLASS.SKIP_TRG_CHECK_IND      (
         P_CLASS_NAME );
         RETURN ret_value;
   END SKIP_TRG_CHECK_IND;
   FUNCTION INCLUDE_IN_VALIDATION(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_CLASS.INCLUDE_IN_VALIDATION      (
         P_CLASS_NAME );
         RETURN ret_value;
   END INCLUDE_IN_VALIDATION;
   FUNCTION OWNER_CLASS_NAME(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (24) ;
   BEGIN
      ret_value := EC_CLASS.OWNER_CLASS_NAME      (
         P_CLASS_NAME );
         RETURN ret_value;
   END OWNER_CLASS_NAME;
   FUNCTION REC_ID(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CLASS.REC_ID      (
         P_CLASS_NAME );
         RETURN ret_value;
   END REC_ID;
   FUNCTION SUPER_CLASS(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (24) ;
   BEGIN
      ret_value := EC_CLASS.SUPER_CLASS      (
         P_CLASS_NAME );
         RETURN ret_value;
   END SUPER_CLASS;
   FUNCTION CLASS_SHORT_CODE(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (24) ;
   BEGIN
      ret_value := EC_CLASS.CLASS_SHORT_CODE      (
         P_CLASS_NAME );
         RETURN ret_value;
   END CLASS_SHORT_CODE;
   FUNCTION CLASS_VERSION(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (24) ;
   BEGIN
      ret_value := EC_CLASS.CLASS_VERSION      (
         P_CLASS_NAME );
         RETURN ret_value;
   END CLASS_VERSION;
   FUNCTION ENSURE_REV_TEXT_ON_UPD(
      P_CLASS_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_CLASS.ENSURE_REV_TEXT_ON_UPD      (
         P_CLASS_NAME );
         RETURN ret_value;
   END ENSURE_REV_TEXT_ON_UPD;

END RP_CLASS;

/
--GRANT EXECUTE ON ECKERNEL_WST.RP_CLASS TO REPORT_ROLE_XXX;



 -- FINISH PKG_GEN_PKGS.sf_get_functions at:11/15/2018 10.44.55 AM


