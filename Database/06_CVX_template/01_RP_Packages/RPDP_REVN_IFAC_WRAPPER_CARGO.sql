
 -- START PKG_GEN_PKGS.sf_get_functions at:11/16/2018 09.21.12 AM


CREATE or REPLACE PACKAGE RPDP_REVN_IFAC_WRAPPER_CARGO
IS

   FUNCTION AGGREGATE(
      P_COLLECTION IN OUT T_TABLE_IFAC_CARGO_VALUE,
      P_BY IN VARCHAR2)
      RETURN T_TABLE_VARCHAR2;
   FUNCTION FILTER(
      P_COLLECTION IN OUT T_TABLE_IFAC_CARGO_VALUE,
      P_CONDITION IN VARCHAR2)
      RETURN T_TABLE_IFAC_CARGO_VALUE;
   FUNCTION FIND_ONE(
      P_IFAC IN OUT T_TABLE_IFAC_CARGO_VALUE,
      P_RANGE IN T_TABLE_NUMBER DEFAULT NULL,
      P_LEVEL IN VARCHAR2 default null,
      P_TRANS_ID IN NUMBER default null,
      P_LI_ID IN NUMBER default null,
      P_TRANSACTION_KEY IN VARCHAR2 default null,
      P_LINE_ITEM_KEY IN VARCHAR2 default NULL,
      P_PROFIT_CENTER_ID IN VARCHAR2 DEFAULT NULL,
      P_VENDOR_ID IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION GETIFACRELATESTO(
      P_SOURCE_ENTRY_NO IN NUMBER,
      P_SCOPE IN VARCHAR2)
      RETURN T_TABLE_IFAC_CARGO_VALUE;
   FUNCTION GETVENDORLEVELIFACRECORDS(
      P_RECORDS IN T_TABLE_IFAC_CARGO_VALUE,
      P_PC_LEVEL_RECORD IN T_IFAC_CARGO_VALUE,
      P_VENDOR_ID IN VARCHAR2 DEFAULT NULL)
      RETURN T_TABLE_IFAC_CARGO_VALUE;
   FUNCTION SORT(
      P_COLLECTION IN OUT T_TABLE_IFAC_CARGO_VALUE,
      P_BY IN VARCHAR2 DEFAULT NULL,
      P_DECODES IN VARCHAR2 DEFAULT NULL)
      RETURN T_TABLE_IFAC_CARGO_VALUE;
   FUNCTION GETIFACFORDOCUMENT(
      P_CONTRACT_ID IN VARCHAR2,
      P_CARGO_NO IN VARCHAR2,
      P_PARCEL_NO IN VARCHAR2,
      P_POINT_OF_SALE_DATE IN DATE,
      P_CONTRACT_DOC_ID IN VARCHAR2,
      P_CUSTOMER_ID IN VARCHAR2)
      RETURN T_TABLE_IFAC_CARGO_VALUE;
   FUNCTION GETTRANSACTIONLEVELIFACRECORDS(
      P_RECORDS IN T_TABLE_IFAC_CARGO_VALUE)
      RETURN T_TABLE_IFAC_CARGO_VALUE;
   FUNCTION GETIFACFORLINEITEM(
      P_CONTRACT_ID IN VARCHAR2,
      P_CUSTOMER_ID IN VARCHAR2,
      P_CARGO_NO IN VARCHAR2,
      P_PARCEL_NO IN VARCHAR2,
      P_UOM1_CODE IN VARCHAR2,
      P_DOC_STATUS IN VARCHAR2,
      P_CLI_UK1 IN VARCHAR2,
      P_CLI_UK2 IN VARCHAR2,
      P_IFAC_TT_CONN_CODE IN VARCHAR2,
      P_IFAC_LI_CONN_CODE IN VARCHAR2,
      P_PRICE_CONCEPT_CODE IN VARCHAR2,
      P_PRICE_OBJECT_ID IN VARCHAR2,
      P_TRANS_TEMP_ID IN VARCHAR2,
      P_QTY_PC_SHARE IN OUT T_TABLE_REVN_DIST_INFO,
      P_LINE_ITEM_BASED_TYPE IN VARCHAR2 DEFAULT 'QTY',
      P_LINE_ITEM_TYPE IN VARCHAR2 DEFAULT NULL,
      P_LINE_ITEM_CODE IN VARCHAR2 DEFAULT NULL)
      RETURN T_TABLE_IFAC_CARGO_VALUE;
   FUNCTION GETPCLEVELIFACRECORDS(
      P_RECORDS IN T_TABLE_IFAC_CARGO_VALUE,
      P_TRANSACTION_LEVEL_RECORD IN T_IFAC_CARGO_VALUE,
      P_PROFIT_CENTER_ID IN VARCHAR2 DEFAULT NULL)
      RETURN T_TABLE_IFAC_CARGO_VALUE;
   FUNCTION IFACRECORDHASVENDORPC(
      P_SOURCE_ENTRY_NO IN NUMBER,
      P_VENDOR_ID IN VARCHAR2 default 'XX',
      P_PROFIT_CENTRE IN VARCHAR2 default 'XX')
      RETURN VARCHAR2;
   FUNCTION FILTER(
      P_COLLECTION IN OUT T_TABLE_IFAC_CARGO_VALUE,
      P_LEVEL IN VARCHAR2,
      P_TRANS_ID IN NUMBER,
      P_LI_ID IN NUMBER,
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN T_TABLE_IFAC_CARGO_VALUE;
   FUNCTION FIND(
      P_IFAC IN OUT T_TABLE_IFAC_CARGO_VALUE,
      P_RANGE IN T_TABLE_NUMBER DEFAULT NULL,
      P_LEVEL IN VARCHAR2 default null,
      P_TRANS_ID IN NUMBER default null,
      P_LI_ID IN NUMBER default null,
      P_TRANSACTION_KEY IN VARCHAR2 default null,
      P_LINE_ITEM_KEY IN VARCHAR2 default NULL,
      P_PROFIT_CENTER_ID IN VARCHAR2 DEFAULT NULL,
      P_VENDOR_ID IN VARCHAR2 DEFAULT NULL)
      RETURN T_TABLE_NUMBER;

END RPDP_REVN_IFAC_WRAPPER_CARGO;

/



CREATE or REPLACE PACKAGE BODY RPDP_REVN_IFAC_WRAPPER_CARGO
IS

   FUNCTION AGGREGATE(
      P_COLLECTION IN OUT T_TABLE_IFAC_CARGO_VALUE,
      P_BY IN VARCHAR2)
      RETURN T_TABLE_VARCHAR2
   IS
      ret_value    T_TABLE_VARCHAR2 ;
   BEGIN
      ret_value := ECDP_REVN_IFAC_WRAPPER_CARGO.AGGREGATE      (
         P_COLLECTION,
         P_BY );
         RETURN ret_value;
   END AGGREGATE;
   FUNCTION FILTER(
      P_COLLECTION IN OUT T_TABLE_IFAC_CARGO_VALUE,
      P_CONDITION IN VARCHAR2)
      RETURN T_TABLE_IFAC_CARGO_VALUE
   IS
      ret_value    T_TABLE_IFAC_CARGO_VALUE ;
   BEGIN
      ret_value := ECDP_REVN_IFAC_WRAPPER_CARGO.FILTER      (
         P_COLLECTION,
         P_CONDITION );
         RETURN ret_value;
   END FILTER;
   FUNCTION FIND_ONE(
      P_IFAC IN OUT T_TABLE_IFAC_CARGO_VALUE,
      P_RANGE IN T_TABLE_NUMBER DEFAULT NULL,
      P_LEVEL IN VARCHAR2 default null,
      P_TRANS_ID IN NUMBER default null,
      P_LI_ID IN NUMBER default null,
      P_TRANSACTION_KEY IN VARCHAR2 default null,
      P_LINE_ITEM_KEY IN VARCHAR2 default NULL,
      P_PROFIT_CENTER_ID IN VARCHAR2 DEFAULT NULL,
      P_VENDOR_ID IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECDP_REVN_IFAC_WRAPPER_CARGO.FIND_ONE      (
         P_IFAC,
         P_RANGE,
         P_LEVEL,
         P_TRANS_ID,
         P_LI_ID,
         P_TRANSACTION_KEY,
         P_LINE_ITEM_KEY,
         P_PROFIT_CENTER_ID,
         P_VENDOR_ID );
         RETURN ret_value;
   END FIND_ONE;
   FUNCTION GETIFACRELATESTO(
      P_SOURCE_ENTRY_NO IN NUMBER,
      P_SCOPE IN VARCHAR2)
      RETURN T_TABLE_IFAC_CARGO_VALUE
   IS
      ret_value    T_TABLE_IFAC_CARGO_VALUE ;
   BEGIN
      ret_value := ECDP_REVN_IFAC_WRAPPER_CARGO.GETIFACRELATESTO      (
         P_SOURCE_ENTRY_NO,
         P_SCOPE );
         RETURN ret_value;
   END GETIFACRELATESTO;
   FUNCTION GETVENDORLEVELIFACRECORDS(
      P_RECORDS IN T_TABLE_IFAC_CARGO_VALUE,
      P_PC_LEVEL_RECORD IN T_IFAC_CARGO_VALUE,
      P_VENDOR_ID IN VARCHAR2 DEFAULT NULL)
      RETURN T_TABLE_IFAC_CARGO_VALUE
   IS
      ret_value    T_TABLE_IFAC_CARGO_VALUE ;
   BEGIN
      ret_value := ECDP_REVN_IFAC_WRAPPER_CARGO.GETVENDORLEVELIFACRECORDS      (
         P_RECORDS,
         P_PC_LEVEL_RECORD,
         P_VENDOR_ID );
         RETURN ret_value;
   END GETVENDORLEVELIFACRECORDS;
   FUNCTION SORT(
      P_COLLECTION IN OUT T_TABLE_IFAC_CARGO_VALUE,
      P_BY IN VARCHAR2 DEFAULT NULL,
      P_DECODES IN VARCHAR2 DEFAULT NULL)
      RETURN T_TABLE_IFAC_CARGO_VALUE
   IS
      ret_value    T_TABLE_IFAC_CARGO_VALUE ;
   BEGIN
      ret_value := ECDP_REVN_IFAC_WRAPPER_CARGO.SORT      (
         P_COLLECTION,
         P_BY,
         P_DECODES );
         RETURN ret_value;
   END SORT;
   FUNCTION GETIFACFORDOCUMENT(
      P_CONTRACT_ID IN VARCHAR2,
      P_CARGO_NO IN VARCHAR2,
      P_PARCEL_NO IN VARCHAR2,
      P_POINT_OF_SALE_DATE IN DATE,
      P_CONTRACT_DOC_ID IN VARCHAR2,
      P_CUSTOMER_ID IN VARCHAR2)
      RETURN T_TABLE_IFAC_CARGO_VALUE
   IS
      ret_value    T_TABLE_IFAC_CARGO_VALUE ;
   BEGIN
      ret_value := ECDP_REVN_IFAC_WRAPPER_CARGO.GETIFACFORDOCUMENT      (
         P_CONTRACT_ID,
         P_CARGO_NO,
         P_PARCEL_NO,
         P_POINT_OF_SALE_DATE,
         P_CONTRACT_DOC_ID,
         P_CUSTOMER_ID );
         RETURN ret_value;
   END GETIFACFORDOCUMENT;
   FUNCTION GETTRANSACTIONLEVELIFACRECORDS(
      P_RECORDS IN T_TABLE_IFAC_CARGO_VALUE)
      RETURN T_TABLE_IFAC_CARGO_VALUE
   IS
      ret_value    T_TABLE_IFAC_CARGO_VALUE ;
   BEGIN
      ret_value := ECDP_REVN_IFAC_WRAPPER_CARGO.GETTRANSACTIONLEVELIFACRECORDS      (
         P_RECORDS );
         RETURN ret_value;
   END GETTRANSACTIONLEVELIFACRECORDS;
   FUNCTION GETIFACFORLINEITEM(
      P_CONTRACT_ID IN VARCHAR2,
      P_CUSTOMER_ID IN VARCHAR2,
      P_CARGO_NO IN VARCHAR2,
      P_PARCEL_NO IN VARCHAR2,
      P_UOM1_CODE IN VARCHAR2,
      P_DOC_STATUS IN VARCHAR2,
      P_CLI_UK1 IN VARCHAR2,
      P_CLI_UK2 IN VARCHAR2,
      P_IFAC_TT_CONN_CODE IN VARCHAR2,
      P_IFAC_LI_CONN_CODE IN VARCHAR2,
      P_PRICE_CONCEPT_CODE IN VARCHAR2,
      P_PRICE_OBJECT_ID IN VARCHAR2,
      P_TRANS_TEMP_ID IN VARCHAR2,
      P_QTY_PC_SHARE IN OUT T_TABLE_REVN_DIST_INFO,
      P_LINE_ITEM_BASED_TYPE IN VARCHAR2 DEFAULT 'QTY',
      P_LINE_ITEM_TYPE IN VARCHAR2 DEFAULT NULL,
      P_LINE_ITEM_CODE IN VARCHAR2 DEFAULT NULL)
      RETURN T_TABLE_IFAC_CARGO_VALUE
   IS
      ret_value    T_TABLE_IFAC_CARGO_VALUE ;
   BEGIN
      ret_value := ECDP_REVN_IFAC_WRAPPER_CARGO.GETIFACFORLINEITEM      (
         P_CONTRACT_ID,
         P_CUSTOMER_ID,
         P_CARGO_NO,
         P_PARCEL_NO,
         P_UOM1_CODE,
         P_DOC_STATUS,
         P_CLI_UK1,
         P_CLI_UK2,
         P_IFAC_TT_CONN_CODE,
         P_IFAC_LI_CONN_CODE,
         P_PRICE_CONCEPT_CODE,
         P_PRICE_OBJECT_ID,
         P_TRANS_TEMP_ID,
         P_QTY_PC_SHARE,
         P_LINE_ITEM_BASED_TYPE,
         P_LINE_ITEM_TYPE,
         P_LINE_ITEM_CODE );
         RETURN ret_value;
   END GETIFACFORLINEITEM;
   FUNCTION GETPCLEVELIFACRECORDS(
      P_RECORDS IN T_TABLE_IFAC_CARGO_VALUE,
      P_TRANSACTION_LEVEL_RECORD IN T_IFAC_CARGO_VALUE,
      P_PROFIT_CENTER_ID IN VARCHAR2 DEFAULT NULL)
      RETURN T_TABLE_IFAC_CARGO_VALUE
   IS
      ret_value    T_TABLE_IFAC_CARGO_VALUE ;
   BEGIN
      ret_value := ECDP_REVN_IFAC_WRAPPER_CARGO.GETPCLEVELIFACRECORDS      (
         P_RECORDS,
         P_TRANSACTION_LEVEL_RECORD,
         P_PROFIT_CENTER_ID );
         RETURN ret_value;
   END GETPCLEVELIFACRECORDS;
   FUNCTION IFACRECORDHASVENDORPC(
      P_SOURCE_ENTRY_NO IN NUMBER,
      P_VENDOR_ID IN VARCHAR2 default 'XX',
      P_PROFIT_CENTRE IN VARCHAR2 default 'XX')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_REVN_IFAC_WRAPPER_CARGO.IFACRECORDHASVENDORPC      (
         P_SOURCE_ENTRY_NO,
         P_VENDOR_ID,
         P_PROFIT_CENTRE );
         RETURN ret_value;
   END IFACRECORDHASVENDORPC;
   FUNCTION FILTER(
      P_COLLECTION IN OUT T_TABLE_IFAC_CARGO_VALUE,
      P_LEVEL IN VARCHAR2,
      P_TRANS_ID IN NUMBER,
      P_LI_ID IN NUMBER,
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN T_TABLE_IFAC_CARGO_VALUE
   IS
      ret_value    T_TABLE_IFAC_CARGO_VALUE ;
   BEGIN
      ret_value := ECDP_REVN_IFAC_WRAPPER_CARGO.FILTER      (
         P_COLLECTION,
         P_LEVEL,
         P_TRANS_ID,
         P_LI_ID,
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END FILTER;
   FUNCTION FIND(
      P_IFAC IN OUT T_TABLE_IFAC_CARGO_VALUE,
      P_RANGE IN T_TABLE_NUMBER DEFAULT NULL,
      P_LEVEL IN VARCHAR2 default null,
      P_TRANS_ID IN NUMBER default null,
      P_LI_ID IN NUMBER default null,
      P_TRANSACTION_KEY IN VARCHAR2 default null,
      P_LINE_ITEM_KEY IN VARCHAR2 default NULL,
      P_PROFIT_CENTER_ID IN VARCHAR2 DEFAULT NULL,
      P_VENDOR_ID IN VARCHAR2 DEFAULT NULL)
      RETURN T_TABLE_NUMBER
   IS
      ret_value    T_TABLE_NUMBER ;
   BEGIN
      ret_value := ECDP_REVN_IFAC_WRAPPER_CARGO.FIND      (
         P_IFAC,
         P_RANGE,
         P_LEVEL,
         P_TRANS_ID,
         P_LI_ID,
         P_TRANSACTION_KEY,
         P_LINE_ITEM_KEY,
         P_PROFIT_CENTER_ID,
         P_VENDOR_ID );
         RETURN ret_value;
   END FIND;

END RPDP_REVN_IFAC_WRAPPER_CARGO;

/
--GRANT EXECUTE ON ECKERNEL_WST.RPDP_REVN_IFAC_WRAPPER_CARGO TO REPORT_ROLE_XXX;



 -- FINISH PKG_GEN_PKGS.sf_get_functions at:11/16/2018 09.21.15 AM


