
 -- START PKG_GEN_PKGS.sf_get_functions at:11/16/2018 09.22.08 AM


CREATE or REPLACE PACKAGE RPDP_PERFORMANCE_CURVE
IS

   FUNCTION GETWELLPERFORMANCECURVEID(
      P_CURVE_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CURVE_PURPOSE IN VARCHAR2,
      P_PHASE IN VARCHAR2 DEFAULT NULL,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION GETNEXTWELLPERFORMANCECURVEID(
      P_CURVE_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CURVE_PURPOSE IN VARCHAR2,
      P_PHASE IN VARCHAR2 DEFAULT NULL,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION GETPREVWELLPERFORMANCECURVEID(
      P_CURVE_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CURVE_PURPOSE IN VARCHAR2,
      P_PHASE IN VARCHAR2 DEFAULT NULL,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION GETSTDRATEFROMPARAMVALUE(
      P_PERF_CURVE_ID IN NUMBER,
      P_PHASE IN VARCHAR2,
      P_PARAM_VALUE IN NUMBER,
      P_THIRD_AXIS_VALUE IN NUMBER)
      RETURN NUMBER;
   FUNCTION GETCURVEIDPHASE(
      P_CURVE_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CURVE_PURPOSE IN VARCHAR2,
      P_PHASE IN VARCHAR2,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;

END RPDP_PERFORMANCE_CURVE;

/



CREATE or REPLACE PACKAGE BODY RPDP_PERFORMANCE_CURVE
IS

   FUNCTION GETWELLPERFORMANCECURVEID(
      P_CURVE_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CURVE_PURPOSE IN VARCHAR2,
      P_PHASE IN VARCHAR2 DEFAULT NULL,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECDP_PERFORMANCE_CURVE.GETWELLPERFORMANCECURVEID      (
         P_CURVE_OBJECT_ID,
         P_DAYTIME,
         P_CURVE_PURPOSE,
         P_PHASE,
         P_CALC_METHOD );
         RETURN ret_value;
   END GETWELLPERFORMANCECURVEID;
   FUNCTION GETNEXTWELLPERFORMANCECURVEID(
      P_CURVE_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CURVE_PURPOSE IN VARCHAR2,
      P_PHASE IN VARCHAR2 DEFAULT NULL,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECDP_PERFORMANCE_CURVE.GETNEXTWELLPERFORMANCECURVEID      (
         P_CURVE_OBJECT_ID,
         P_DAYTIME,
         P_CURVE_PURPOSE,
         P_PHASE,
         P_CALC_METHOD );
         RETURN ret_value;
   END GETNEXTWELLPERFORMANCECURVEID;
   FUNCTION GETPREVWELLPERFORMANCECURVEID(
      P_CURVE_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CURVE_PURPOSE IN VARCHAR2,
      P_PHASE IN VARCHAR2 DEFAULT NULL,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECDP_PERFORMANCE_CURVE.GETPREVWELLPERFORMANCECURVEID      (
         P_CURVE_OBJECT_ID,
         P_DAYTIME,
         P_CURVE_PURPOSE,
         P_PHASE,
         P_CALC_METHOD );
         RETURN ret_value;
   END GETPREVWELLPERFORMANCECURVEID;
   FUNCTION GETSTDRATEFROMPARAMVALUE(
      P_PERF_CURVE_ID IN NUMBER,
      P_PHASE IN VARCHAR2,
      P_PARAM_VALUE IN NUMBER,
      P_THIRD_AXIS_VALUE IN NUMBER)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECDP_PERFORMANCE_CURVE.GETSTDRATEFROMPARAMVALUE      (
         P_PERF_CURVE_ID,
         P_PHASE,
         P_PARAM_VALUE,
         P_THIRD_AXIS_VALUE );
         RETURN ret_value;
   END GETSTDRATEFROMPARAMVALUE;
   FUNCTION GETCURVEIDPHASE(
      P_CURVE_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CURVE_PURPOSE IN VARCHAR2,
      P_PHASE IN VARCHAR2,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_PERFORMANCE_CURVE.GETCURVEIDPHASE      (
         P_CURVE_OBJECT_ID,
         P_DAYTIME,
         P_CURVE_PURPOSE,
         P_PHASE,
         P_CALC_METHOD );
         RETURN ret_value;
   END GETCURVEIDPHASE;

END RPDP_PERFORMANCE_CURVE;

/
--GRANT EXECUTE ON ECKERNEL_WST.RPDP_PERFORMANCE_CURVE TO REPORT_ROLE_XXX;



 -- FINISH PKG_GEN_PKGS.sf_get_functions at:11/16/2018 09.22.09 AM


