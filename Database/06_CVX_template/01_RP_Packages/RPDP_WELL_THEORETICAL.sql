
 -- START PKG_GEN_PKGS.sf_get_functions at:11/16/2018 09.17.42 AM


CREATE or REPLACE PACKAGE RPDP_WELL_THEORETICAL
IS

   FUNCTION GETWATERCUTPCT(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_PHASE IN VARCHAR2,
      P_CALC_METHOD IN VARCHAR2,
      P_CLASS_NAME IN VARCHAR2 DEFAULT NULL,
      P_RESULT_NO IN NUMBER DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION GETPERFORMANCECURVEID(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CURVE_PURPOSE IN VARCHAR2,
      P_PHASE IN VARCHAR2,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION GETWELLCURVEPARAMETERCODE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_PHASE IN VARCHAR2 DEFAULT 'OIL')
      RETURN VARCHAR2;
   FUNCTION GETCURVESTDRATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CURVE_PURPOSE IN VARCHAR2,
      P_PHASE IN VARCHAR2,
      P_PARAM_VALUES IN ECDP_WELL_THEORETICAL.PERFCURVEPARAMREC,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION GETWATERGASRATIO(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_PHASE IN VARCHAR2,
      P_CALC_METHOD IN VARCHAR2,
      P_CLASS_NAME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION GETWATEROILRATIO(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_PHASE IN VARCHAR2,
      P_CALC_METHOD IN VARCHAR2,
      P_CLASS_NAME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION GETCONDENSATEGASRATIO(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_PHASE IN VARCHAR2,
      P_CALC_METHOD IN VARCHAR2,
      P_CLASS_NAME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION GETGASOILRATIO(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_PHASE IN VARCHAR2,
      P_CALC_METHOD IN VARCHAR2,
      P_CLASS_NAME IN VARCHAR2 DEFAULT NULL,
      P_RESULT_NO IN NUMBER DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION GETNEXTPERFORMANCECURVEID(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CURVE_PURPOSE IN VARCHAR2,
      P_PHASE IN VARCHAR2,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION GETLOWPRESSUREGASOILRATIO(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION GETCURVEPARAMVALUE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_PARAM_CODE IN VARCHAR2,
      P_PARAM_VALUES IN ECDP_WELL_THEORETICAL.PERFCURVEPARAMREC)
      RETURN NUMBER;

END RPDP_WELL_THEORETICAL;

/



CREATE or REPLACE PACKAGE BODY RPDP_WELL_THEORETICAL
IS

   FUNCTION GETWATERCUTPCT(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_PHASE IN VARCHAR2,
      P_CALC_METHOD IN VARCHAR2,
      P_CLASS_NAME IN VARCHAR2 DEFAULT NULL,
      P_RESULT_NO IN NUMBER DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECDP_WELL_THEORETICAL.GETWATERCUTPCT      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_PHASE,
         P_CALC_METHOD,
         P_CLASS_NAME,
         P_RESULT_NO );
         RETURN ret_value;
   END GETWATERCUTPCT;
   FUNCTION GETPERFORMANCECURVEID(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CURVE_PURPOSE IN VARCHAR2,
      P_PHASE IN VARCHAR2,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECDP_WELL_THEORETICAL.GETPERFORMANCECURVEID      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_CURVE_PURPOSE,
         P_PHASE,
         P_CALC_METHOD );
         RETURN ret_value;
   END GETPERFORMANCECURVEID;
   FUNCTION GETWELLCURVEPARAMETERCODE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_PHASE IN VARCHAR2 DEFAULT 'OIL')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_WELL_THEORETICAL.GETWELLCURVEPARAMETERCODE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_PHASE );
         RETURN ret_value;
   END GETWELLCURVEPARAMETERCODE;
   FUNCTION GETCURVESTDRATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CURVE_PURPOSE IN VARCHAR2,
      P_PHASE IN VARCHAR2,
      P_PARAM_VALUES IN ECDP_WELL_THEORETICAL.PERFCURVEPARAMREC,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECDP_WELL_THEORETICAL.GETCURVESTDRATE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_CURVE_PURPOSE,
         P_PHASE,
         P_PARAM_VALUES,
         P_CALC_METHOD );
         RETURN ret_value;
   END GETCURVESTDRATE;
   FUNCTION GETWATERGASRATIO(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_PHASE IN VARCHAR2,
      P_CALC_METHOD IN VARCHAR2,
      P_CLASS_NAME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECDP_WELL_THEORETICAL.GETWATERGASRATIO      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_PHASE,
         P_CALC_METHOD,
         P_CLASS_NAME );
         RETURN ret_value;
   END GETWATERGASRATIO;
   FUNCTION GETWATEROILRATIO(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_PHASE IN VARCHAR2,
      P_CALC_METHOD IN VARCHAR2,
      P_CLASS_NAME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECDP_WELL_THEORETICAL.GETWATEROILRATIO      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_PHASE,
         P_CALC_METHOD,
         P_CLASS_NAME );
         RETURN ret_value;
   END GETWATEROILRATIO;
   FUNCTION GETCONDENSATEGASRATIO(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_PHASE IN VARCHAR2,
      P_CALC_METHOD IN VARCHAR2,
      P_CLASS_NAME IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECDP_WELL_THEORETICAL.GETCONDENSATEGASRATIO      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_PHASE,
         P_CALC_METHOD,
         P_CLASS_NAME );
         RETURN ret_value;
   END GETCONDENSATEGASRATIO;
   FUNCTION GETGASOILRATIO(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_PHASE IN VARCHAR2,
      P_CALC_METHOD IN VARCHAR2,
      P_CLASS_NAME IN VARCHAR2 DEFAULT NULL,
      P_RESULT_NO IN NUMBER DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECDP_WELL_THEORETICAL.GETGASOILRATIO      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_PHASE,
         P_CALC_METHOD,
         P_CLASS_NAME,
         P_RESULT_NO );
         RETURN ret_value;
   END GETGASOILRATIO;
   FUNCTION GETNEXTPERFORMANCECURVEID(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_CURVE_PURPOSE IN VARCHAR2,
      P_PHASE IN VARCHAR2,
      P_CALC_METHOD IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECDP_WELL_THEORETICAL.GETNEXTPERFORMANCECURVEID      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_CURVE_PURPOSE,
         P_PHASE,
         P_CALC_METHOD );
         RETURN ret_value;
   END GETNEXTPERFORMANCECURVEID;
   FUNCTION GETLOWPRESSUREGASOILRATIO(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECDP_WELL_THEORETICAL.GETLOWPRESSUREGASOILRATIO      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END GETLOWPRESSUREGASOILRATIO;
   FUNCTION GETCURVEPARAMVALUE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_PARAM_CODE IN VARCHAR2,
      P_PARAM_VALUES IN ECDP_WELL_THEORETICAL.PERFCURVEPARAMREC)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECDP_WELL_THEORETICAL.GETCURVEPARAMVALUE      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_PARAM_CODE,
         P_PARAM_VALUES );
         RETURN ret_value;
   END GETCURVEPARAMVALUE;

END RPDP_WELL_THEORETICAL;

/
--GRANT EXECUTE ON ECKERNEL_WST.RPDP_WELL_THEORETICAL TO REPORT_ROLE_XXX;



 -- FINISH PKG_GEN_PKGS.sf_get_functions at:11/16/2018 09.17.45 AM


