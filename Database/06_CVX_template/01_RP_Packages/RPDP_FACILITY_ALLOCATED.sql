
 -- START PKG_GEN_PKGS.sf_get_functions at:11/16/2018 09.24.02 AM


CREATE or REPLACE PACKAGE RPDP_FACILITY_ALLOCATED
IS

   FUNCTION GETPLATFORMPHASESTDVOLPERIOD(
      P_OBJECT_ID IN VARCHAR2,
      P_FROM_DATE IN DATE,
      P_TO_DATE IN DATE,
      P_PHASE IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION GETFACILITYPHASESTDVOLPERIOD(
      P_OBJECT_ID IN VARCHAR2,
      P_FROM_DATE IN DATE,
      P_TO_DATE IN DATE,
      P_PHASE IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION SUMFCTYALLOCINJMASS(
      P_OBJECT_ID IN VARCHAR2,
      P_PHASE IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION SUMFCTYALLOCPRODVOLUME(
      P_OBJECT_ID IN VARCHAR2,
      P_PHASE IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION SUMFCTYALLOCPRODMASS(
      P_OBJECT_ID IN VARCHAR2,
      P_PHASE IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION SUMFCTYALLOCINJVOLUME(
      P_OBJECT_ID IN VARCHAR2,
      P_PHASE IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION GETSUBSEAPHASESTDVOLPERIOD(
      P_OBJECT_ID IN VARCHAR2,
      P_FROM_DATE IN DATE,
      P_TO_DATE IN DATE,
      P_PHASE IN VARCHAR2)
      RETURN NUMBER;

END RPDP_FACILITY_ALLOCATED;

/



CREATE or REPLACE PACKAGE BODY RPDP_FACILITY_ALLOCATED
IS

   FUNCTION GETPLATFORMPHASESTDVOLPERIOD(
      P_OBJECT_ID IN VARCHAR2,
      P_FROM_DATE IN DATE,
      P_TO_DATE IN DATE,
      P_PHASE IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECDP_FACILITY_ALLOCATED.GETPLATFORMPHASESTDVOLPERIOD      (
         P_OBJECT_ID,
         P_FROM_DATE,
         P_TO_DATE,
         P_PHASE );
         RETURN ret_value;
   END GETPLATFORMPHASESTDVOLPERIOD;
   FUNCTION GETFACILITYPHASESTDVOLPERIOD(
      P_OBJECT_ID IN VARCHAR2,
      P_FROM_DATE IN DATE,
      P_TO_DATE IN DATE,
      P_PHASE IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECDP_FACILITY_ALLOCATED.GETFACILITYPHASESTDVOLPERIOD      (
         P_OBJECT_ID,
         P_FROM_DATE,
         P_TO_DATE,
         P_PHASE );
         RETURN ret_value;
   END GETFACILITYPHASESTDVOLPERIOD;
   FUNCTION SUMFCTYALLOCINJMASS(
      P_OBJECT_ID IN VARCHAR2,
      P_PHASE IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECDP_FACILITY_ALLOCATED.SUMFCTYALLOCINJMASS      (
         P_OBJECT_ID,
         P_PHASE,
         P_DAYTIME );
         RETURN ret_value;
   END SUMFCTYALLOCINJMASS;
   FUNCTION SUMFCTYALLOCPRODVOLUME(
      P_OBJECT_ID IN VARCHAR2,
      P_PHASE IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECDP_FACILITY_ALLOCATED.SUMFCTYALLOCPRODVOLUME      (
         P_OBJECT_ID,
         P_PHASE,
         P_DAYTIME );
         RETURN ret_value;
   END SUMFCTYALLOCPRODVOLUME;
   FUNCTION SUMFCTYALLOCPRODMASS(
      P_OBJECT_ID IN VARCHAR2,
      P_PHASE IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECDP_FACILITY_ALLOCATED.SUMFCTYALLOCPRODMASS      (
         P_OBJECT_ID,
         P_PHASE,
         P_DAYTIME );
         RETURN ret_value;
   END SUMFCTYALLOCPRODMASS;
   FUNCTION SUMFCTYALLOCINJVOLUME(
      P_OBJECT_ID IN VARCHAR2,
      P_PHASE IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECDP_FACILITY_ALLOCATED.SUMFCTYALLOCINJVOLUME      (
         P_OBJECT_ID,
         P_PHASE,
         P_DAYTIME );
         RETURN ret_value;
   END SUMFCTYALLOCINJVOLUME;
   FUNCTION GETSUBSEAPHASESTDVOLPERIOD(
      P_OBJECT_ID IN VARCHAR2,
      P_FROM_DATE IN DATE,
      P_TO_DATE IN DATE,
      P_PHASE IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECDP_FACILITY_ALLOCATED.GETSUBSEAPHASESTDVOLPERIOD      (
         P_OBJECT_ID,
         P_FROM_DATE,
         P_TO_DATE,
         P_PHASE );
         RETURN ret_value;
   END GETSUBSEAPHASESTDVOLPERIOD;

END RPDP_FACILITY_ALLOCATED;

/
--GRANT EXECUTE ON ECKERNEL_WST.RPDP_FACILITY_ALLOCATED TO REPORT_ROLE_XXX;



 -- FINISH PKG_GEN_PKGS.sf_get_functions at:11/16/2018 09.24.03 AM


