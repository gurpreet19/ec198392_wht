
 -- START PKG_GEN_PKGS.sf_get_functions at:05/07/2019 10.33.26 AM


CREATE or REPLACE PACKAGE RP_CTRL_DASHBOARD_PARAM
IS

   FUNCTION SORT_ORDER(
      P_WIDGET_CODE IN VARCHAR2,
      P_NAME IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION APPROVAL_BY(
      P_WIDGET_CODE IN VARCHAR2,
      P_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION APPROVAL_STATE(
      P_WIDGET_CODE IN VARCHAR2,
      P_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION MANDATORY_IND(
      P_WIDGET_CODE IN VARCHAR2,
      P_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION PARAMETER_SUB_TYPE(
      P_WIDGET_CODE IN VARCHAR2,
      P_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION PARAMETER_TYPE(
      P_WIDGET_CODE IN VARCHAR2,
      P_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION LABEL(
      P_WIDGET_CODE IN VARCHAR2,
      P_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION USER_EDITABLE_IND(
      P_WIDGET_CODE IN VARCHAR2,
      P_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION PARAMETER_VALUE(
      P_WIDGET_CODE IN VARCHAR2,
      P_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION RECORD_STATUS(
      P_WIDGET_CODE IN VARCHAR2,
      P_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION RESOLVE_TYPE(
      P_WIDGET_CODE IN VARCHAR2,
      P_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION APPROVAL_DATE(
      P_WIDGET_CODE IN VARCHAR2,
      P_NAME IN VARCHAR2)
      RETURN DATE;
      TYPE REC_ROW_BY_PK IS RECORD (
         WIDGET_CODE VARCHAR2 (32) ,
         NAME VARCHAR2 (1020) ,
         LABEL VARCHAR2 (1020) ,
         RESOLVE_TYPE VARCHAR2 (1020) ,
         PARAMETER_TYPE VARCHAR2 (128) ,
         PARAMETER_SUB_TYPE VARCHAR2 (128) ,
         PARAMETER_VALUE VARCHAR2 (16000) ,
         MANDATORY_IND VARCHAR2 (4) ,
         USER_EDITABLE_IND VARCHAR2 (4) ,
         SORT_ORDER NUMBER ,
         DATA_TYPE VARCHAR2 (1020) ,
         RECORD_STATUS VARCHAR2 (1) ,
         CREATED_BY VARCHAR2 (30) ,
         CREATED_DATE  DATE ,
         LAST_UPDATED_BY VARCHAR2 (30) ,
         LAST_UPDATED_DATE  DATE ,
         REV_NO NUMBER ,
         REV_TEXT VARCHAR2 (2000) ,
         APPROVAL_STATE VARCHAR2 (1) ,
         APPROVAL_BY VARCHAR2 (30) ,
         APPROVAL_DATE  DATE ,
         REC_ID VARCHAR2 (32)  );
   FUNCTION ROW_BY_PK(
      P_WIDGET_CODE IN VARCHAR2,
      P_NAME IN VARCHAR2)
      RETURN REC_ROW_BY_PK;
   FUNCTION DATA_TYPE(
      P_WIDGET_CODE IN VARCHAR2,
      P_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION REC_ID(
      P_WIDGET_CODE IN VARCHAR2,
      P_NAME IN VARCHAR2)
      RETURN VARCHAR2;

END RP_CTRL_DASHBOARD_PARAM;

/



CREATE or REPLACE PACKAGE BODY RP_CTRL_DASHBOARD_PARAM
IS

   FUNCTION SORT_ORDER(
      P_WIDGET_CODE IN VARCHAR2,
      P_NAME IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CTRL_DASHBOARD_PARAM.SORT_ORDER      (
         P_WIDGET_CODE,
         P_NAME );
         RETURN ret_value;
   END SORT_ORDER;
   FUNCTION APPROVAL_BY(
      P_WIDGET_CODE IN VARCHAR2,
      P_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (30) ;
   BEGIN
      ret_value := EC_CTRL_DASHBOARD_PARAM.APPROVAL_BY      (
         P_WIDGET_CODE,
         P_NAME );
         RETURN ret_value;
   END APPROVAL_BY;
   FUNCTION APPROVAL_STATE(
      P_WIDGET_CODE IN VARCHAR2,
      P_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_CTRL_DASHBOARD_PARAM.APPROVAL_STATE      (
         P_WIDGET_CODE,
         P_NAME );
         RETURN ret_value;
   END APPROVAL_STATE;
   FUNCTION MANDATORY_IND(
      P_WIDGET_CODE IN VARCHAR2,
      P_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (4) ;
   BEGIN
      ret_value := EC_CTRL_DASHBOARD_PARAM.MANDATORY_IND      (
         P_WIDGET_CODE,
         P_NAME );
         RETURN ret_value;
   END MANDATORY_IND;
   FUNCTION PARAMETER_SUB_TYPE(
      P_WIDGET_CODE IN VARCHAR2,
      P_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (128) ;
   BEGIN
      ret_value := EC_CTRL_DASHBOARD_PARAM.PARAMETER_SUB_TYPE      (
         P_WIDGET_CODE,
         P_NAME );
         RETURN ret_value;
   END PARAMETER_SUB_TYPE;
   FUNCTION PARAMETER_TYPE(
      P_WIDGET_CODE IN VARCHAR2,
      P_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (128) ;
   BEGIN
      ret_value := EC_CTRL_DASHBOARD_PARAM.PARAMETER_TYPE      (
         P_WIDGET_CODE,
         P_NAME );
         RETURN ret_value;
   END PARAMETER_TYPE;
   FUNCTION LABEL(
      P_WIDGET_CODE IN VARCHAR2,
      P_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1020) ;
   BEGIN
      ret_value := EC_CTRL_DASHBOARD_PARAM.LABEL      (
         P_WIDGET_CODE,
         P_NAME );
         RETURN ret_value;
   END LABEL;
   FUNCTION USER_EDITABLE_IND(
      P_WIDGET_CODE IN VARCHAR2,
      P_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (4) ;
   BEGIN
      ret_value := EC_CTRL_DASHBOARD_PARAM.USER_EDITABLE_IND      (
         P_WIDGET_CODE,
         P_NAME );
         RETURN ret_value;
   END USER_EDITABLE_IND;
   FUNCTION PARAMETER_VALUE(
      P_WIDGET_CODE IN VARCHAR2,
      P_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (16000) ;
   BEGIN
      ret_value := EC_CTRL_DASHBOARD_PARAM.PARAMETER_VALUE      (
         P_WIDGET_CODE,
         P_NAME );
         RETURN ret_value;
   END PARAMETER_VALUE;
   FUNCTION RECORD_STATUS(
      P_WIDGET_CODE IN VARCHAR2,
      P_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_CTRL_DASHBOARD_PARAM.RECORD_STATUS      (
         P_WIDGET_CODE,
         P_NAME );
         RETURN ret_value;
   END RECORD_STATUS;
   FUNCTION RESOLVE_TYPE(
      P_WIDGET_CODE IN VARCHAR2,
      P_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1020) ;
   BEGIN
      ret_value := EC_CTRL_DASHBOARD_PARAM.RESOLVE_TYPE      (
         P_WIDGET_CODE,
         P_NAME );
         RETURN ret_value;
   END RESOLVE_TYPE;
   FUNCTION APPROVAL_DATE(
      P_WIDGET_CODE IN VARCHAR2,
      P_NAME IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CTRL_DASHBOARD_PARAM.APPROVAL_DATE      (
         P_WIDGET_CODE,
         P_NAME );
         RETURN ret_value;
   END APPROVAL_DATE;
   FUNCTION ROW_BY_PK(
      P_WIDGET_CODE IN VARCHAR2,
      P_NAME IN VARCHAR2)
      RETURN REC_ROW_BY_PK
   IS
      ret_value    REC_ROW_BY_PK ;
   BEGIN
      ret_value := EC_CTRL_DASHBOARD_PARAM.ROW_BY_PK      (
         P_WIDGET_CODE,
         P_NAME );
         RETURN ret_value;
   END ROW_BY_PK;
   FUNCTION DATA_TYPE(
      P_WIDGET_CODE IN VARCHAR2,
      P_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1020) ;
   BEGIN
      ret_value := EC_CTRL_DASHBOARD_PARAM.DATA_TYPE      (
         P_WIDGET_CODE,
         P_NAME );
         RETURN ret_value;
   END DATA_TYPE;
   FUNCTION REC_ID(
      P_WIDGET_CODE IN VARCHAR2,
      P_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CTRL_DASHBOARD_PARAM.REC_ID      (
         P_WIDGET_CODE,
         P_NAME );
         RETURN ret_value;
   END REC_ID;

END RP_CTRL_DASHBOARD_PARAM;

/
--GRANT EXECUTE ON ECKERNEL_WST.RP_CTRL_DASHBOARD_PARAM TO REPORT_ROLE_XXX;



 -- FINISH PKG_GEN_PKGS.sf_get_functions at:05/07/2019 10.33.29 AM


