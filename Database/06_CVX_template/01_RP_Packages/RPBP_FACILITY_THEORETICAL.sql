
 -- START PKG_GEN_PKGS.sf_get_functions at:11/16/2018 09.35.34 AM


CREATE or REPLACE PACKAGE RPBP_FACILITY_THEORETICAL
IS

   FUNCTION CALCFACILITYGASINJDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION CALCFACILITYGASLIFTDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION GETFACILITYPHASESTDVOLDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_TYPE IN VARCHAR2,
      P_PHASE IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION CALCFACILITYDILUENTDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION CALCFACILITYSTEAMINJDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION CALCSUMOPERFACILITYGASLIFTDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION CALCFACILITYCO2INJDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION CALCFACILITYGASDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION CALCFACILITYWATDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION CALCPLATFORMPHASESTDVOLPERIOD(
      P_OBJECT_ID IN VARCHAR2,
      P_FROM_DATE IN DATE,
      P_TO_DATE IN DATE,
      P_PHASE IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION CALCSUMOPERFACILITYOILMASSDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION CALCSUMOPERFACILITYWATDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION CALCFACILITYWATMASSDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION CALCSUMOPERFACILITYCO2INJDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION CALCSUMOPERFACILITYCONDMASSDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION CALCSUMOPERFACILITYGASDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION GETFACILITYMASSFACTORDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_PHASE IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION CALCFACILITYCONDDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION CALCFACILITYGASMASSDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION CALCSUMOPERFACILITYCONDDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION CALCSUMOPERFACILITYDILUENTDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION GETFACILITYPHASEVOLDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_TYPE IN VARCHAR2,
      P_PHASE IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION GETFACILITYPHASEVOLMONTH(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_TYPE IN VARCHAR2,
      P_PHASE IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION CALCFACILITYCO2DAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION CALCFACILITYCONDMASSDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION CALCFACILITYOILDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION CALCFACILITYWATINJDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION CALCSUBSEAPHASESTDVOLPERIOD(
      P_OBJECT_ID IN VARCHAR2,
      P_FROM_DATE IN DATE,
      P_TO_DATE IN DATE,
      P_PHASE IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION CALCSUMOPERFACILITYOILDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION CALCSUMOPERFACILITYSTEAMINJDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION CALCSUMOPERFACILITYWATMASSDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION CALCSUMOPERFACILITYCO2DAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION CALCSUMOPERFACILITYGASINJDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION CALCSUMOPERFACILITYGASMASSDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION CALCFACILITYOILMASSDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION CALCSUMOPERFACILITYWATINJDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION GETFACILITYPHASEFACTORDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_PHASE IN VARCHAR2)
      RETURN NUMBER;

END RPBP_FACILITY_THEORETICAL;

/



CREATE or REPLACE PACKAGE BODY RPBP_FACILITY_THEORETICAL
IS

   FUNCTION CALCFACILITYGASINJDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_FACILITY_THEORETICAL.CALCFACILITYGASINJDAY      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END CALCFACILITYGASINJDAY;
   FUNCTION CALCFACILITYGASLIFTDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_FACILITY_THEORETICAL.CALCFACILITYGASLIFTDAY      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END CALCFACILITYGASLIFTDAY;
   FUNCTION GETFACILITYPHASESTDVOLDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_TYPE IN VARCHAR2,
      P_PHASE IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_FACILITY_THEORETICAL.GETFACILITYPHASESTDVOLDAY      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_TYPE,
         P_PHASE );
         RETURN ret_value;
   END GETFACILITYPHASESTDVOLDAY;
   FUNCTION CALCFACILITYDILUENTDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_FACILITY_THEORETICAL.CALCFACILITYDILUENTDAY      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END CALCFACILITYDILUENTDAY;
   FUNCTION CALCFACILITYSTEAMINJDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_FACILITY_THEORETICAL.CALCFACILITYSTEAMINJDAY      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END CALCFACILITYSTEAMINJDAY;
   FUNCTION CALCSUMOPERFACILITYGASLIFTDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_FACILITY_THEORETICAL.CALCSUMOPERFACILITYGASLIFTDAY      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END CALCSUMOPERFACILITYGASLIFTDAY;
   FUNCTION CALCFACILITYCO2INJDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_FACILITY_THEORETICAL.CALCFACILITYCO2INJDAY      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END CALCFACILITYCO2INJDAY;
   FUNCTION CALCFACILITYGASDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_FACILITY_THEORETICAL.CALCFACILITYGASDAY      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END CALCFACILITYGASDAY;
   FUNCTION CALCFACILITYWATDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_FACILITY_THEORETICAL.CALCFACILITYWATDAY      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END CALCFACILITYWATDAY;
   FUNCTION CALCPLATFORMPHASESTDVOLPERIOD(
      P_OBJECT_ID IN VARCHAR2,
      P_FROM_DATE IN DATE,
      P_TO_DATE IN DATE,
      P_PHASE IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_FACILITY_THEORETICAL.CALCPLATFORMPHASESTDVOLPERIOD      (
         P_OBJECT_ID,
         P_FROM_DATE,
         P_TO_DATE,
         P_PHASE );
         RETURN ret_value;
   END CALCPLATFORMPHASESTDVOLPERIOD;
   FUNCTION CALCSUMOPERFACILITYOILMASSDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_FACILITY_THEORETICAL.CALCSUMOPERFACILITYOILMASSDAY      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END CALCSUMOPERFACILITYOILMASSDAY;
   FUNCTION CALCSUMOPERFACILITYWATDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_FACILITY_THEORETICAL.CALCSUMOPERFACILITYWATDAY      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END CALCSUMOPERFACILITYWATDAY;
   FUNCTION CALCFACILITYWATMASSDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_FACILITY_THEORETICAL.CALCFACILITYWATMASSDAY      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END CALCFACILITYWATMASSDAY;
   FUNCTION CALCSUMOPERFACILITYCO2INJDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_FACILITY_THEORETICAL.CALCSUMOPERFACILITYCO2INJDAY      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END CALCSUMOPERFACILITYCO2INJDAY;
   FUNCTION CALCSUMOPERFACILITYCONDMASSDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_FACILITY_THEORETICAL.CALCSUMOPERFACILITYCONDMASSDAY      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END CALCSUMOPERFACILITYCONDMASSDAY;
   FUNCTION CALCSUMOPERFACILITYGASDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_FACILITY_THEORETICAL.CALCSUMOPERFACILITYGASDAY      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END CALCSUMOPERFACILITYGASDAY;
   FUNCTION GETFACILITYMASSFACTORDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_PHASE IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_FACILITY_THEORETICAL.GETFACILITYMASSFACTORDAY      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_PHASE );
         RETURN ret_value;
   END GETFACILITYMASSFACTORDAY;
   FUNCTION CALCFACILITYCONDDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_FACILITY_THEORETICAL.CALCFACILITYCONDDAY      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END CALCFACILITYCONDDAY;
   FUNCTION CALCFACILITYGASMASSDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_FACILITY_THEORETICAL.CALCFACILITYGASMASSDAY      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END CALCFACILITYGASMASSDAY;
   FUNCTION CALCSUMOPERFACILITYCONDDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_FACILITY_THEORETICAL.CALCSUMOPERFACILITYCONDDAY      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END CALCSUMOPERFACILITYCONDDAY;
   FUNCTION CALCSUMOPERFACILITYDILUENTDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_FACILITY_THEORETICAL.CALCSUMOPERFACILITYDILUENTDAY      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END CALCSUMOPERFACILITYDILUENTDAY;
   FUNCTION GETFACILITYPHASEVOLDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_TYPE IN VARCHAR2,
      P_PHASE IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_FACILITY_THEORETICAL.GETFACILITYPHASEVOLDAY      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_TYPE,
         P_PHASE );
         RETURN ret_value;
   END GETFACILITYPHASEVOLDAY;
   FUNCTION GETFACILITYPHASEVOLMONTH(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_TYPE IN VARCHAR2,
      P_PHASE IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_FACILITY_THEORETICAL.GETFACILITYPHASEVOLMONTH      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_TYPE,
         P_PHASE );
         RETURN ret_value;
   END GETFACILITYPHASEVOLMONTH;
   FUNCTION CALCFACILITYCO2DAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_FACILITY_THEORETICAL.CALCFACILITYCO2DAY      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END CALCFACILITYCO2DAY;
   FUNCTION CALCFACILITYCONDMASSDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_FACILITY_THEORETICAL.CALCFACILITYCONDMASSDAY      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END CALCFACILITYCONDMASSDAY;
   FUNCTION CALCFACILITYOILDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_FACILITY_THEORETICAL.CALCFACILITYOILDAY      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END CALCFACILITYOILDAY;
   FUNCTION CALCFACILITYWATINJDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_FACILITY_THEORETICAL.CALCFACILITYWATINJDAY      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END CALCFACILITYWATINJDAY;
   FUNCTION CALCSUBSEAPHASESTDVOLPERIOD(
      P_OBJECT_ID IN VARCHAR2,
      P_FROM_DATE IN DATE,
      P_TO_DATE IN DATE,
      P_PHASE IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_FACILITY_THEORETICAL.CALCSUBSEAPHASESTDVOLPERIOD      (
         P_OBJECT_ID,
         P_FROM_DATE,
         P_TO_DATE,
         P_PHASE );
         RETURN ret_value;
   END CALCSUBSEAPHASESTDVOLPERIOD;
   FUNCTION CALCSUMOPERFACILITYOILDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_FACILITY_THEORETICAL.CALCSUMOPERFACILITYOILDAY      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END CALCSUMOPERFACILITYOILDAY;
   FUNCTION CALCSUMOPERFACILITYSTEAMINJDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_FACILITY_THEORETICAL.CALCSUMOPERFACILITYSTEAMINJDAY      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END CALCSUMOPERFACILITYSTEAMINJDAY;
   FUNCTION CALCSUMOPERFACILITYWATMASSDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_FACILITY_THEORETICAL.CALCSUMOPERFACILITYWATMASSDAY      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END CALCSUMOPERFACILITYWATMASSDAY;
   FUNCTION CALCSUMOPERFACILITYCO2DAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_FACILITY_THEORETICAL.CALCSUMOPERFACILITYCO2DAY      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END CALCSUMOPERFACILITYCO2DAY;
   FUNCTION CALCSUMOPERFACILITYGASINJDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_FACILITY_THEORETICAL.CALCSUMOPERFACILITYGASINJDAY      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END CALCSUMOPERFACILITYGASINJDAY;
   FUNCTION CALCSUMOPERFACILITYGASMASSDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_FACILITY_THEORETICAL.CALCSUMOPERFACILITYGASMASSDAY      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END CALCSUMOPERFACILITYGASMASSDAY;
   FUNCTION CALCFACILITYOILMASSDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_FACILITY_THEORETICAL.CALCFACILITYOILMASSDAY      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END CALCFACILITYOILMASSDAY;
   FUNCTION CALCSUMOPERFACILITYWATINJDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_FACILITY_THEORETICAL.CALCSUMOPERFACILITYWATINJDAY      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END CALCSUMOPERFACILITYWATINJDAY;
   FUNCTION GETFACILITYPHASEFACTORDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_PHASE IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_FACILITY_THEORETICAL.GETFACILITYPHASEFACTORDAY      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_PHASE );
         RETURN ret_value;
   END GETFACILITYPHASEFACTORDAY;

END RPBP_FACILITY_THEORETICAL;

/
--GRANT EXECUTE ON ECKERNEL_WST.RPBP_FACILITY_THEORETICAL TO REPORT_ROLE_XXX;



 -- FINISH PKG_GEN_PKGS.sf_get_functions at:11/16/2018 09.35.42 AM


