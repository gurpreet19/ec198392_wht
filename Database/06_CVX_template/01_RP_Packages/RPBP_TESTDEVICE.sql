
 -- START PKG_GEN_PKGS.sf_get_functions at:05/08/2019 03.36.56 AM


CREATE or REPLACE PACKAGE RPBP_TESTDEVICE
IS

   FUNCTION CALCTOTALIZERVOLUME(
      P_RESULT_NO IN NUMBER,
      P_PHASE IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION FINDDILUENTRATE(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION FINDGLR(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION FINDGRSWATERVOLUME(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION FINDWOR(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION AGASTATICPRESS(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_PHASE IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION CALCIMPURITYRATE(
      P_RESULT_NO IN NUMBER,
      P_GRS_RATE IN NUMBER,
      P_PHASE IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION FINDGRSGASLIFTVOLUME(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION FINDTDEVREFSHRINKAGEFACTOR(
      P_RESULT_NO IN NUMBER,
      P_PHASE IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION FINDWGR(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION AGADIFFPRESS(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_PHASE IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION CALCSHRINKAGEVOLUME(
      P_RESULT_NO IN NUMBER,
      P_NET_RATE IN NUMBER,
      P_PHASE IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION FINDGOR(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION FINDGRSGASVOLUME(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION FINDNETRATE(
      P_RESULT_NO IN NUMBER,
      P_PHASE IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION FINDBSWVOL(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION FINDGRSLIQRATE(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION FINDGRSWATERRATE(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION FINDSTDNETRATE(
      P_RESULT_NO IN NUMBER,
      P_PHASE IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION GETGASMETERTEXT(
      P_CODE IN VARCHAR2,
      P_DATA_CLASS IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION GETJOURNALREVNO(
      P_CLASS IN VARCHAR2,
      P_RECORD_STATUS IN VARCHAR2,
      P_REV_NO IN NUMBER)
      RETURN NUMBER;
   FUNCTION FINDWELLREFSPECGRAVITY(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION GETMETERTEXT(
      P_CODE IN VARCHAR2,
      P_CODE_TYPE IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_DATE IN DATE)
      RETURN VARCHAR2;
   FUNCTION FINDGRSGASLIFTRATE(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION FINDGRSLIQVOLUME(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
      TYPE REC_FINDINVERTEDSHRINKAGEFACTO IS RECORD (
         OBJECT_ID VARCHAR2 (32) ,
         DAYTIME  DATE ,
         DENSITY NUMBER ,
         PRESS NUMBER ,
         TEMP NUMBER ,
         BO NUMBER ,
         BG NUMBER ,
         BW NUMBER ,
         RS NUMBER ,
         SP_GRAV NUMBER ,
         VCF NUMBER ,
         VALUE_1 NUMBER ,
         VALUE_2 NUMBER ,
         VALUE_3 NUMBER ,
         VALUE_4 NUMBER ,
         VALUE_5 NUMBER ,
         VALUE_6 NUMBER ,
         VALUE_7 NUMBER ,
         VALUE_8 NUMBER ,
         VALUE_9 NUMBER ,
         VALUE_10 NUMBER ,
         TEXT_1 VARCHAR2 (16) ,
         TEXT_2 VARCHAR2 (32) ,
         TEXT_3 VARCHAR2 (240) ,
         TEXT_4 VARCHAR2 (2000) ,
         RECORD_STATUS VARCHAR2 (1) ,
         CREATED_BY VARCHAR2 (30) ,
         CREATED_DATE  DATE ,
         LAST_UPDATED_BY VARCHAR2 (30) ,
         LAST_UPDATED_DATE  DATE ,
         REV_NO NUMBER ,
         REV_TEXT VARCHAR2 (2000) ,
         APPROVAL_BY VARCHAR2 (30) ,
         APPROVAL_DATE  DATE ,
         APPROVAL_STATE VARCHAR2 (1) ,
         REC_ID VARCHAR2 (32)  );
   FUNCTION FINDINVERTEDSHRINKAGEFACTORS(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_DENSITY IN NUMBER,
      P_PRESSURE IN NUMBER,
      P_TEMPERATURE IN NUMBER)
      RETURN REC_FINDINVERTEDSHRINKAGEFACTO;
   FUNCTION FINDWETDRYFACTOR(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION LOOKUPGASLIFTHRRATE(
      P_RESULT_NO IN NUMBER,
      P_WELL_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION CALCWATERCUT(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION FINDREFSHRINKAGEFACTOR(
      P_RESULT_NO IN NUMBER,
      P_PHASE IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION FINDTDEVORIFICEPLATE(
      P_RESULT_NO IN NUMBER,
      P_PHASE IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN VARCHAR2;
   FUNCTION FINDWELLREFGASLIFTSPECGRAVITY(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION FINDWELLREFSHRINKAGEFACTOR(
      P_RESULT_NO IN NUMBER,
      P_PHASE IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION FINDWETGASGRAVITY(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION GETOILMETERTEXT(
      P_CODE IN VARCHAR2,
      P_DATA_CLASS IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION FINDCGR(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION FINDDURATION(
      P_RESULT_NO IN NUMBER)
      RETURN NUMBER;
   FUNCTION FINDGRSGASRATE(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION FINDTDEVMETERRUN(
      P_RESULT_NO IN NUMBER,
      P_PHASE IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN VARCHAR2;
   FUNCTION FINDWELLWETGASRATE(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER;
   FUNCTION GETATTRIBUTENAME(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_COLUMN_NAME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION GETMETERFACTOR(
      P_OBJECT_ID IN VARCHAR2,
      P_PHASE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_RESULT_NO IN NUMBER)
      RETURN NUMBER;
   FUNCTION GETPWELRESULTDATE(
      P_RESULT_NO IN NUMBER)
      RETURN DATE;
   FUNCTION GETWATERMETERTEXT(
      P_CODE IN VARCHAR2,
      P_DATA_CLASS IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2)
      RETURN VARCHAR2;

END RPBP_TESTDEVICE;

/



CREATE or REPLACE PACKAGE BODY RPBP_TESTDEVICE
IS

   FUNCTION CALCTOTALIZERVOLUME(
      P_RESULT_NO IN NUMBER,
      P_PHASE IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.CALCTOTALIZERVOLUME      (
         P_RESULT_NO,
         P_PHASE,
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END CALCTOTALIZERVOLUME;
   FUNCTION FINDDILUENTRATE(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.FINDDILUENTRATE      (
         P_RESULT_NO,
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END FINDDILUENTRATE;
   FUNCTION FINDGLR(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.FINDGLR      (
         P_RESULT_NO,
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END FINDGLR;
   FUNCTION FINDGRSWATERVOLUME(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.FINDGRSWATERVOLUME      (
         P_RESULT_NO,
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END FINDGRSWATERVOLUME;
   FUNCTION FINDWOR(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.FINDWOR      (
         P_RESULT_NO,
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END FINDWOR;
   FUNCTION AGASTATICPRESS(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_PHASE IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.AGASTATICPRESS      (
         P_RESULT_NO,
         P_OBJECT_ID,
         P_PHASE );
         RETURN ret_value;
   END AGASTATICPRESS;
   FUNCTION CALCIMPURITYRATE(
      P_RESULT_NO IN NUMBER,
      P_GRS_RATE IN NUMBER,
      P_PHASE IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.CALCIMPURITYRATE      (
         P_RESULT_NO,
         P_GRS_RATE,
         P_PHASE,
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END CALCIMPURITYRATE;
   FUNCTION FINDGRSGASLIFTVOLUME(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.FINDGRSGASLIFTVOLUME      (
         P_RESULT_NO,
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END FINDGRSGASLIFTVOLUME;
   FUNCTION FINDTDEVREFSHRINKAGEFACTOR(
      P_RESULT_NO IN NUMBER,
      P_PHASE IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.FINDTDEVREFSHRINKAGEFACTOR      (
         P_RESULT_NO,
         P_PHASE,
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END FINDTDEVREFSHRINKAGEFACTOR;
   FUNCTION FINDWGR(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.FINDWGR      (
         P_RESULT_NO,
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END FINDWGR;
   FUNCTION AGADIFFPRESS(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_PHASE IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.AGADIFFPRESS      (
         P_RESULT_NO,
         P_OBJECT_ID,
         P_PHASE );
         RETURN ret_value;
   END AGADIFFPRESS;
   FUNCTION CALCSHRINKAGEVOLUME(
      P_RESULT_NO IN NUMBER,
      P_NET_RATE IN NUMBER,
      P_PHASE IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.CALCSHRINKAGEVOLUME      (
         P_RESULT_NO,
         P_NET_RATE,
         P_PHASE,
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END CALCSHRINKAGEVOLUME;
   FUNCTION FINDGOR(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.FINDGOR      (
         P_RESULT_NO,
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END FINDGOR;
   FUNCTION FINDGRSGASVOLUME(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.FINDGRSGASVOLUME      (
         P_RESULT_NO,
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END FINDGRSGASVOLUME;
   FUNCTION FINDNETRATE(
      P_RESULT_NO IN NUMBER,
      P_PHASE IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.FINDNETRATE      (
         P_RESULT_NO,
         P_PHASE,
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END FINDNETRATE;
   FUNCTION FINDBSWVOL(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.FINDBSWVOL      (
         P_RESULT_NO,
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END FINDBSWVOL;
   FUNCTION FINDGRSLIQRATE(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.FINDGRSLIQRATE      (
         P_RESULT_NO,
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END FINDGRSLIQRATE;
   FUNCTION FINDGRSWATERRATE(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.FINDGRSWATERRATE      (
         P_RESULT_NO,
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END FINDGRSWATERRATE;
   FUNCTION FINDSTDNETRATE(
      P_RESULT_NO IN NUMBER,
      P_PHASE IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.FINDSTDNETRATE      (
         P_RESULT_NO,
         P_PHASE,
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END FINDSTDNETRATE;
   FUNCTION GETGASMETERTEXT(
      P_CODE IN VARCHAR2,
      P_DATA_CLASS IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.GETGASMETERTEXT      (
         P_CODE,
         P_DATA_CLASS,
         P_OBJECT_ID );
         RETURN ret_value;
   END GETGASMETERTEXT;
   FUNCTION GETJOURNALREVNO(
      P_CLASS IN VARCHAR2,
      P_RECORD_STATUS IN VARCHAR2,
      P_REV_NO IN NUMBER)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.GETJOURNALREVNO      (
         P_CLASS,
         P_RECORD_STATUS,
         P_REV_NO );
         RETURN ret_value;
   END GETJOURNALREVNO;
   FUNCTION FINDWELLREFSPECGRAVITY(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.FINDWELLREFSPECGRAVITY      (
         P_RESULT_NO,
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END FINDWELLREFSPECGRAVITY;
   FUNCTION GETMETERTEXT(
      P_CODE IN VARCHAR2,
      P_CODE_TYPE IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_DATE IN DATE)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.GETMETERTEXT      (
         P_CODE,
         P_CODE_TYPE,
         P_OBJECT_ID,
         P_DATE );
         RETURN ret_value;
   END GETMETERTEXT;
   FUNCTION FINDGRSGASLIFTRATE(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.FINDGRSGASLIFTRATE      (
         P_RESULT_NO,
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END FINDGRSGASLIFTRATE;
   FUNCTION FINDGRSLIQVOLUME(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.FINDGRSLIQVOLUME      (
         P_RESULT_NO,
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END FINDGRSLIQVOLUME;
   FUNCTION FINDINVERTEDSHRINKAGEFACTORS(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_DENSITY IN NUMBER,
      P_PRESSURE IN NUMBER,
      P_TEMPERATURE IN NUMBER)
      RETURN REC_FINDINVERTEDSHRINKAGEFACTO
   IS
      ret_value    REC_FINDINVERTEDSHRINKAGEFACTO ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.FINDINVERTEDSHRINKAGEFACTORS      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_DENSITY,
         P_PRESSURE,
         P_TEMPERATURE );
         RETURN ret_value;
   END FINDINVERTEDSHRINKAGEFACTORS;
   FUNCTION FINDWETDRYFACTOR(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.FINDWETDRYFACTOR      (
         P_RESULT_NO,
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END FINDWETDRYFACTOR;
   FUNCTION LOOKUPGASLIFTHRRATE(
      P_RESULT_NO IN NUMBER,
      P_WELL_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.LOOKUPGASLIFTHRRATE      (
         P_RESULT_NO,
         P_WELL_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END LOOKUPGASLIFTHRRATE;
   FUNCTION CALCWATERCUT(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.CALCWATERCUT      (
         P_RESULT_NO,
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END CALCWATERCUT;
   FUNCTION FINDREFSHRINKAGEFACTOR(
      P_RESULT_NO IN NUMBER,
      P_PHASE IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.FINDREFSHRINKAGEFACTOR      (
         P_RESULT_NO,
         P_PHASE,
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END FINDREFSHRINKAGEFACTOR;
   FUNCTION FINDTDEVORIFICEPLATE(
      P_RESULT_NO IN NUMBER,
      P_PHASE IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.FINDTDEVORIFICEPLATE      (
         P_RESULT_NO,
         P_PHASE,
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END FINDTDEVORIFICEPLATE;
   FUNCTION FINDWELLREFGASLIFTSPECGRAVITY(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.FINDWELLREFGASLIFTSPECGRAVITY      (
         P_RESULT_NO,
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END FINDWELLREFGASLIFTSPECGRAVITY;
   FUNCTION FINDWELLREFSHRINKAGEFACTOR(
      P_RESULT_NO IN NUMBER,
      P_PHASE IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.FINDWELLREFSHRINKAGEFACTOR      (
         P_RESULT_NO,
         P_PHASE,
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END FINDWELLREFSHRINKAGEFACTOR;
   FUNCTION FINDWETGASGRAVITY(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.FINDWETGASGRAVITY      (
         P_RESULT_NO,
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END FINDWETGASGRAVITY;
   FUNCTION GETOILMETERTEXT(
      P_CODE IN VARCHAR2,
      P_DATA_CLASS IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.GETOILMETERTEXT      (
         P_CODE,
         P_DATA_CLASS,
         P_OBJECT_ID );
         RETURN ret_value;
   END GETOILMETERTEXT;
   FUNCTION FINDCGR(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.FINDCGR      (
         P_RESULT_NO,
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END FINDCGR;
   FUNCTION FINDDURATION(
      P_RESULT_NO IN NUMBER)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.FINDDURATION      (
         P_RESULT_NO );
         RETURN ret_value;
   END FINDDURATION;
   FUNCTION FINDGRSGASRATE(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.FINDGRSGASRATE      (
         P_RESULT_NO,
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END FINDGRSGASRATE;
   FUNCTION FINDTDEVMETERRUN(
      P_RESULT_NO IN NUMBER,
      P_PHASE IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.FINDTDEVMETERRUN      (
         P_RESULT_NO,
         P_PHASE,
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END FINDTDEVMETERRUN;
   FUNCTION FINDWELLWETGASRATE(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.FINDWELLWETGASRATE      (
         P_RESULT_NO,
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END FINDWELLWETGASRATE;
   FUNCTION GETATTRIBUTENAME(
      P_RESULT_NO IN NUMBER,
      P_OBJECT_ID IN VARCHAR2,
      P_COLUMN_NAME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.GETATTRIBUTENAME      (
         P_RESULT_NO,
         P_OBJECT_ID,
         P_COLUMN_NAME );
         RETURN ret_value;
   END GETATTRIBUTENAME;
   FUNCTION GETMETERFACTOR(
      P_OBJECT_ID IN VARCHAR2,
      P_PHASE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_RESULT_NO IN NUMBER)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.GETMETERFACTOR      (
         P_OBJECT_ID,
         P_PHASE,
         P_DAYTIME,
         P_RESULT_NO );
         RETURN ret_value;
   END GETMETERFACTOR;
   FUNCTION GETPWELRESULTDATE(
      P_RESULT_NO IN NUMBER)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.GETPWELRESULTDATE      (
         P_RESULT_NO );
         RETURN ret_value;
   END GETPWELRESULTDATE;
   FUNCTION GETWATERMETERTEXT(
      P_CODE IN VARCHAR2,
      P_DATA_CLASS IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECBP_TESTDEVICE.GETWATERMETERTEXT      (
         P_CODE,
         P_DATA_CLASS,
         P_OBJECT_ID );
         RETURN ret_value;
   END GETWATERMETERTEXT;

END RPBP_TESTDEVICE;

/
--GRANT EXECUTE ON ECKERNEL_WST.RPBP_TESTDEVICE TO REPORT_ROLE_XXX;



 -- FINISH PKG_GEN_PKGS.sf_get_functions at:05/08/2019 03.37.05 AM


