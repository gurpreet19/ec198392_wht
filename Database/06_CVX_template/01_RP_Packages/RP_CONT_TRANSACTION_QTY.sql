
 -- START PKG_GEN_PKGS.sf_get_functions at:11/15/2018 10.19.23 AM


CREATE or REPLACE PACKAGE RP_CONT_TRANSACTION_QTY
IS

   FUNCTION GRS_QTY3(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION NET_GRS_INDICATOR(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION PRE_GRS_QTY1(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION PRE_GRS_QTY2(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION TEXT_3(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TEXT_4(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION APPROVAL_BY(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION APPROVAL_STATE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION NET_QTY1(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION NET_QTY4(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION REPORT_GRS_IND(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION VALUE_5(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION NEXT_DAYTIME(
      P_TRANSACTION_KEY IN VARCHAR2,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE;
   FUNCTION OBJECT_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION PREV_EQUAL_DAYTIME(
      P_TRANSACTION_KEY IN VARCHAR2,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE;
   FUNCTION PRE_NET_QTY2(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION PRE_UOM3_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION DATE_3(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE;
   FUNCTION DATE_5(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE;
   FUNCTION GRS_QTY4(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION NEXT_EQUAL_DAYTIME(
      P_TRANSACTION_KEY IN VARCHAR2,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE;
   FUNCTION REPORT_NET_IND(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION VALUE_6(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION DATE_2(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE;
   FUNCTION GRS_QTY1(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION GRS_QTY2(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION PREV_DAYTIME(
      P_TRANSACTION_KEY IN VARCHAR2,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE;
   FUNCTION RECORD_STATUS(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION UOM3_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION VALUE_1(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION APPROVAL_DATE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE;
   FUNCTION PRE_GRS_QTY4(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION PRE_NET_QTY4(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION PRE_UOM1_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION PRE_UOM4_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
      TYPE REC_ROW_BY_PK IS RECORD (
         OBJECT_ID VARCHAR2 (32) ,
         DAYTIME  DATE ,
         TRANSACTION_KEY VARCHAR2 (32) ,
         NET_GRS_INDICATOR VARCHAR2 (32) ,
         REPORT_NET_IND VARCHAR2 (1) ,
         REPORT_GRS_IND VARCHAR2 (1) ,
         NET_QTY1 NUMBER ,
         NET_QTY2 NUMBER ,
         NET_QTY3 NUMBER ,
         NET_QTY4 NUMBER ,
         GRS_QTY1 NUMBER ,
         GRS_QTY2 NUMBER ,
         GRS_QTY3 NUMBER ,
         GRS_QTY4 NUMBER ,
         UOM1_CODE VARCHAR2 (16) ,
         UOM2_CODE VARCHAR2 (16) ,
         UOM3_CODE VARCHAR2 (16) ,
         UOM4_CODE VARCHAR2 (16) ,
         PRE_NET_QTY1 NUMBER ,
         PRE_NET_QTY2 NUMBER ,
         PRE_NET_QTY3 NUMBER ,
         PRE_NET_QTY4 NUMBER ,
         PRE_GRS_QTY1 NUMBER ,
         PRE_GRS_QTY2 NUMBER ,
         PRE_GRS_QTY3 NUMBER ,
         PRE_GRS_QTY4 NUMBER ,
         PRE_UOM1_CODE VARCHAR2 (16) ,
         PRE_UOM2_CODE VARCHAR2 (16) ,
         PRE_UOM3_CODE VARCHAR2 (16) ,
         PRE_UOM4_CODE VARCHAR2 (16) ,
         VALUE_1 NUMBER ,
         VALUE_2 NUMBER ,
         VALUE_3 NUMBER ,
         VALUE_4 NUMBER ,
         VALUE_5 NUMBER ,
         VALUE_6 NUMBER ,
         VALUE_7 NUMBER ,
         VALUE_8 NUMBER ,
         VALUE_9 NUMBER ,
         VALUE_10 NUMBER ,
         TEXT_1 VARCHAR2 (16) ,
         TEXT_2 VARCHAR2 (32) ,
         TEXT_3 VARCHAR2 (240) ,
         TEXT_4 VARCHAR2 (2000) ,
         DATE_1  DATE ,
         DATE_2  DATE ,
         DATE_3  DATE ,
         DATE_4  DATE ,
         DATE_5  DATE ,
         RECORD_STATUS VARCHAR2 (1) ,
         CREATED_BY VARCHAR2 (30) ,
         CREATED_DATE  DATE ,
         LAST_UPDATED_BY VARCHAR2 (30) ,
         LAST_UPDATED_DATE  DATE ,
         REV_NO NUMBER ,
         REV_TEXT VARCHAR2 (2000) ,
         APPROVAL_BY VARCHAR2 (30) ,
         APPROVAL_DATE  DATE ,
         APPROVAL_STATE VARCHAR2 (1) ,
         REC_ID VARCHAR2 (32)  );
   FUNCTION ROW_BY_PK(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN REC_ROW_BY_PK;
   FUNCTION UOM2_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION VALUE_2(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VALUE_3(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VALUE_4(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION DATE_4(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE;
   FUNCTION PRE_GRS_QTY3(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION REC_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TEXT_1(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TEXT_2(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION UOM4_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION VALUE_7(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VALUE_9(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION DATE_1(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE;
   FUNCTION DAYTIME(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE;
   FUNCTION NET_QTY2(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION NET_QTY3(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION PRE_NET_QTY1(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION PRE_NET_QTY3(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION PRE_UOM2_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION UOM1_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION VALUE_10(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VALUE_8(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;

END RP_CONT_TRANSACTION_QTY;

/



CREATE or REPLACE PACKAGE BODY RP_CONT_TRANSACTION_QTY
IS

   FUNCTION GRS_QTY3(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.GRS_QTY3      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END GRS_QTY3;
   FUNCTION NET_GRS_INDICATOR(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.NET_GRS_INDICATOR      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END NET_GRS_INDICATOR;
   FUNCTION PRE_GRS_QTY1(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.PRE_GRS_QTY1      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END PRE_GRS_QTY1;
   FUNCTION PRE_GRS_QTY2(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.PRE_GRS_QTY2      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END PRE_GRS_QTY2;
   FUNCTION TEXT_3(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.TEXT_3      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END TEXT_3;
   FUNCTION TEXT_4(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.TEXT_4      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END TEXT_4;
   FUNCTION APPROVAL_BY(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (30) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.APPROVAL_BY      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END APPROVAL_BY;
   FUNCTION APPROVAL_STATE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.APPROVAL_STATE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END APPROVAL_STATE;
   FUNCTION NET_QTY1(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.NET_QTY1      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END NET_QTY1;
   FUNCTION NET_QTY4(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.NET_QTY4      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END NET_QTY4;
   FUNCTION REPORT_GRS_IND(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.REPORT_GRS_IND      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END REPORT_GRS_IND;
   FUNCTION VALUE_5(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.VALUE_5      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END VALUE_5;
   FUNCTION NEXT_DAYTIME(
      P_TRANSACTION_KEY IN VARCHAR2,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.NEXT_DAYTIME      (
         P_TRANSACTION_KEY,
         P_NUM_ROWS );
         RETURN ret_value;
   END NEXT_DAYTIME;
   FUNCTION OBJECT_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.OBJECT_ID      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END OBJECT_ID;
   FUNCTION PREV_EQUAL_DAYTIME(
      P_TRANSACTION_KEY IN VARCHAR2,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.PREV_EQUAL_DAYTIME      (
         P_TRANSACTION_KEY,
         P_NUM_ROWS );
         RETURN ret_value;
   END PREV_EQUAL_DAYTIME;
   FUNCTION PRE_NET_QTY2(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.PRE_NET_QTY2      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END PRE_NET_QTY2;
   FUNCTION PRE_UOM3_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (16) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.PRE_UOM3_CODE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END PRE_UOM3_CODE;
   FUNCTION DATE_3(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.DATE_3      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END DATE_3;
   FUNCTION DATE_5(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.DATE_5      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END DATE_5;
   FUNCTION GRS_QTY4(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.GRS_QTY4      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END GRS_QTY4;
   FUNCTION NEXT_EQUAL_DAYTIME(
      P_TRANSACTION_KEY IN VARCHAR2,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.NEXT_EQUAL_DAYTIME      (
         P_TRANSACTION_KEY,
         P_NUM_ROWS );
         RETURN ret_value;
   END NEXT_EQUAL_DAYTIME;
   FUNCTION REPORT_NET_IND(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.REPORT_NET_IND      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END REPORT_NET_IND;
   FUNCTION VALUE_6(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.VALUE_6      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END VALUE_6;
   FUNCTION DATE_2(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.DATE_2      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END DATE_2;
   FUNCTION GRS_QTY1(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.GRS_QTY1      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END GRS_QTY1;
   FUNCTION GRS_QTY2(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.GRS_QTY2      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END GRS_QTY2;
   FUNCTION PREV_DAYTIME(
      P_TRANSACTION_KEY IN VARCHAR2,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.PREV_DAYTIME      (
         P_TRANSACTION_KEY,
         P_NUM_ROWS );
         RETURN ret_value;
   END PREV_DAYTIME;
   FUNCTION RECORD_STATUS(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.RECORD_STATUS      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END RECORD_STATUS;
   FUNCTION UOM3_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (16) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.UOM3_CODE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END UOM3_CODE;
   FUNCTION VALUE_1(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.VALUE_1      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END VALUE_1;
   FUNCTION APPROVAL_DATE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.APPROVAL_DATE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END APPROVAL_DATE;
   FUNCTION PRE_GRS_QTY4(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.PRE_GRS_QTY4      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END PRE_GRS_QTY4;
   FUNCTION PRE_NET_QTY4(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.PRE_NET_QTY4      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END PRE_NET_QTY4;
   FUNCTION PRE_UOM1_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (16) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.PRE_UOM1_CODE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END PRE_UOM1_CODE;
   FUNCTION PRE_UOM4_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (16) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.PRE_UOM4_CODE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END PRE_UOM4_CODE;
   FUNCTION ROW_BY_PK(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN REC_ROW_BY_PK
   IS
      ret_value    REC_ROW_BY_PK ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.ROW_BY_PK      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END ROW_BY_PK;
   FUNCTION UOM2_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (16) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.UOM2_CODE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END UOM2_CODE;
   FUNCTION VALUE_2(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.VALUE_2      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END VALUE_2;
   FUNCTION VALUE_3(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.VALUE_3      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END VALUE_3;
   FUNCTION VALUE_4(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.VALUE_4      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END VALUE_4;
   FUNCTION DATE_4(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.DATE_4      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END DATE_4;
   FUNCTION PRE_GRS_QTY3(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.PRE_GRS_QTY3      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END PRE_GRS_QTY3;
   FUNCTION REC_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.REC_ID      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END REC_ID;
   FUNCTION TEXT_1(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (16) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.TEXT_1      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END TEXT_1;
   FUNCTION TEXT_2(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.TEXT_2      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END TEXT_2;
   FUNCTION UOM4_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (16) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.UOM4_CODE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END UOM4_CODE;
   FUNCTION VALUE_7(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.VALUE_7      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END VALUE_7;
   FUNCTION VALUE_9(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.VALUE_9      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END VALUE_9;
   FUNCTION DATE_1(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.DATE_1      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END DATE_1;
   FUNCTION DAYTIME(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.DAYTIME      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END DAYTIME;
   FUNCTION NET_QTY2(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.NET_QTY2      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END NET_QTY2;
   FUNCTION NET_QTY3(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.NET_QTY3      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END NET_QTY3;
   FUNCTION PRE_NET_QTY1(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.PRE_NET_QTY1      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END PRE_NET_QTY1;
   FUNCTION PRE_NET_QTY3(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.PRE_NET_QTY3      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END PRE_NET_QTY3;
   FUNCTION PRE_UOM2_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (16) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.PRE_UOM2_CODE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END PRE_UOM2_CODE;
   FUNCTION UOM1_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (16) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.UOM1_CODE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END UOM1_CODE;
   FUNCTION VALUE_10(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.VALUE_10      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END VALUE_10;
   FUNCTION VALUE_8(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION_QTY.VALUE_8      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END VALUE_8;

END RP_CONT_TRANSACTION_QTY;

/
--GRANT EXECUTE ON ECKERNEL_WST.RP_CONT_TRANSACTION_QTY TO REPORT_ROLE_XXX;



 -- FINISH PKG_GEN_PKGS.sf_get_functions at:11/15/2018 10.19.35 AM


