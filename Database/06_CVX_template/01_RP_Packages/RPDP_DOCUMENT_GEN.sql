
 -- START PKG_GEN_PKGS.sf_get_functions at:11/16/2018 09.24.17 AM


CREATE or REPLACE PACKAGE RPDP_DOCUMENT_GEN
IS

   FUNCTION GENCARGODOCUMENT(
      P_OBJECT_ID IN VARCHAR2,
      P_CARGO_NO IN VARCHAR2,
      P_PARCEL_NO IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_ACTION IN VARCHAR2,
      P_CONTRACT_DOC_ID IN VARCHAR2,
      P_VALIDATION_LEVEL IN VARCHAR2,
      P_DOCUMENT_DATE IN DATE,
      P_DOCUMENT_STATUS IN VARCHAR2,
      P_GEN_DOC_KEY IN VARCHAR2,
      P_PREC_DOC_KEY IN VARCHAR2,
      P_LOADING_PORT_ID IN VARCHAR2,
      P_CUSTOMER_ID IN VARCHAR2,
      P_SOURCE_NODE_ID IN VARCHAR2,
      P_USER IN VARCHAR2,
      P_OWNER IN VARCHAR2,
      P_LOG_ITEM_NO IN OUT NUMBER,
      P_NEW_DOC_KEY OUT VARCHAR2,
      P_NAV_ID IN VARCHAR2,
      P_SILENT IN VARCHAR2 DEFAULT ecdp_revn_common.gv2_true)
      RETURN VARCHAR2;
   FUNCTION GENPERIODDOCUMENT(
      P_OBJECT_ID IN VARCHAR2,
      P_PROCESSING_PERIOD IN DATE,
      P_PERIOD_FROM IN DATE,
      P_PERIOD_TO IN DATE,
      P_ACTION IN VARCHAR2,
      P_CONTRACT_DOC_ID IN VARCHAR2,
      P_DOCUMENT_DATE IN DATE,
      P_DOCUMENT_STATUS IN VARCHAR2,
      P_PREC_DOC_KEY IN VARCHAR2,
      P_DELIVERY_POINT_ID IN VARCHAR2,
      P_CUSTOMER_ID IN VARCHAR2,
      P_SOURCE_NODE_ID IN VARCHAR2,
      P_USER IN VARCHAR2,
      P_OWNER IN VARCHAR2,
      P_LOG_ITEM_NO IN OUT NUMBER,
      P_NEW_DOC_KEY IN OUT VARCHAR2,
      P_NAV_ID IN VARCHAR2,
      P_SILENT IN VARCHAR2 DEFAULT ecdp_revn_common.gv2_true)
      RETURN VARCHAR2;
      TYPE REC_POPULATEERPDOCRECORD IS RECORD (
         OBJECT_ID VARCHAR2 (32) ,
         DAYTIME  DATE ,
         DOCUMENT_DATE  DATE ,
         DOCUMENT_KEY VARCHAR2 (32) ,
         CONTRACT_DOC_ID VARCHAR2 (32) ,
         DOCUMENT_TYPE VARCHAR2 (32) ,
         CONTRACT_NAME VARCHAR2 (240) ,
         PRECEDING_DOCUMENT_KEY VARCHAR2 (32) ,
         PARENT_DOCUMENT_KEY VARCHAR2 (32) ,
         OPEN_USER_ID VARCHAR2 (30) ,
         VALID1_USER_ID VARCHAR2 (30) ,
         VALID2_USER_ID VARCHAR2 (30) ,
         TRANSFER_USER_ID VARCHAR2 (30) ,
         BOOKED_USER_ID VARCHAR2 (30) ,
         REVERSAL_CODE VARCHAR2 (32) ,
         DOC_TEMPLATE_ID VARCHAR2 (32) ,
         INV_DOC_TEMPLATE_ID VARCHAR2 (32) ,
         DOC_TEMPLATE_NAME VARCHAR2 (240) ,
         INV_DOC_TEMPLATE_NAME VARCHAR2 (240) ,
         CUR_DOC_TEMPLATE_NAME VARCHAR2 (240) ,
         PERFORM_CALC_IND VARCHAR2 (1) ,
         REVERSAL_DATE  DATE ,
         TRANSFER_DATE  DATE ,
         BOOKING_DATE  DATE ,
         REV_ACCRUAL_DATE  DATE ,
         SET_TO_BOOKED_DATE  DATE ,
         ACTUAL_REVERSAL_DATE  DATE ,
         DOCUMENT_NUMBER VARCHAR2 (240) ,
         BOOK_DOCUMENT_IND VARCHAR2 (1) ,
         DOCUMENT_LEVEL_CODE VARCHAR2 (32) ,
         STATUS_CODE VARCHAR2 (32) ,
         REFERENCE VARCHAR2 (2000) ,
         CONTRACT_REFERENCE VARCHAR2 (2000) ,
         OUR_CONTACT VARCHAR2 (2000) ,
         OUR_CONTACT_PHONE VARCHAR2 (1000) ,
         YOUR_CONTACT VARCHAR2 (2000) ,
         AMOUNT_IN_WORDS_IND VARCHAR2 (1) ,
         AMOUNT_IN_WORDS VARCHAR2 (2000) ,
         CONTRACT_AREA_CODE VARCHAR2 (32) ,
         CONTRACT_GROUP_CODE VARCHAR2 (32) ,
         CONTRACT_TERM_CODE VARCHAR2 (32) ,
         OWNER_COMPANY_ID VARCHAR2 (32) ,
         BOOKING_CURRENCY_ID VARCHAR2 (32) ,
         MEMO_CURRENCY_ID VARCHAR2 (32) ,
         BOOKING_CURRENCY_CODE VARCHAR2 (32) ,
         MEMO_CURRENCY_CODE VARCHAR2 (32) ,
         PRICE_BASIS VARCHAR2 (32) ,
         DOC_BOOKING_VALUE NUMBER ,
         DOC_BOOKING_VAT NUMBER ,
         DOC_BOOKING_TOTAL NUMBER ,
         DOC_MEMO_VALUE NUMBER ,
         DOC_MEMO_VAT NUMBER ,
         DOC_MEMO_TOTAL NUMBER ,
         DOC_DATE_CALENDAR_COLL_ID VARCHAR2 (32) ,
         DOC_DATE_TERM_ID VARCHAR2 (32) ,
         DOC_RECEIVED_BASE_CODE VARCHAR2 (32) ,
         DOC_RECEIVED_TERM_ID VARCHAR2 (32) ,
         DOC_REC_CALENDAR_COLL_ID VARCHAR2 (32) ,
         DEBIT_CREDIT_IND VARCHAR2 (1) ,
         USE_CURRENCY_100_IND VARCHAR2 (1) ,
         SET_TO_PREV_IND VARCHAR2 (1) ,
         SET_TO_NEXT_IND VARCHAR2 (1) ,
         PAYMENT_TERM_ID VARCHAR2 (32) ,
         PAYMENT_TERM_NAME VARCHAR2 (240) ,
         PAYMENT_DUE_BASE_DATE  DATE ,
         PAY_DATE  DATE ,
         PAY_TERM_DAYS NUMBER ,
         PAYMENT_CALENDAR_COLL_ID VARCHAR2 (32) ,
         PAYMENT_TERM_BASE_CODE VARCHAR2 (32) ,
         FINANCIAL_CODE VARCHAR2 (32) ,
         SEND_UNIT_PRICE_IND VARCHAR2 (1) ,
         FIN_INTERFACE_FILE VARCHAR2 (240) ,
         BOOKING_PERIOD  DATE ,
         TAXABLE_IND VARCHAR2 (1) ,
         BANK_DETAILS_LEVEL_CODE VARCHAR2 (32) ,
         INT_BASE_AMOUNT_SRC VARCHAR2 (32) ,
         DOCUMENT_CONCEPT VARCHAR2 (32) ,
         DOCUMENT_RECEIVED_DATE  DATE ,
         DOC_RECEIVED_BASE_DATE  DATE ,
         DOC_NUMBER_FORMAT_ACCRUAL VARCHAR2 (240) ,
         DOC_NUMBER_FORMAT_FINAL VARCHAR2 (240) ,
         DOC_SEQUENCE_ACCRUAL_ID VARCHAR2 (32) ,
         DOC_SEQUENCE_FINAL_ID VARCHAR2 (32) ,
         DOC_GROUP_TOTAL NUMBER ,
         DOC_GROUP_VALUE NUMBER ,
         DOC_GROUP_VAT NUMBER ,
         DOC_LOCAL_TOTAL NUMBER ,
         DOC_LOCAL_VALUE NUMBER ,
         DOC_LOCAL_VAT NUMBER ,
         RECON_BASIS_IND VARCHAR2 (1) ,
         REVERSAL_IND VARCHAR2 (1) ,
         PAYMENT_SCHEME_ID VARCHAR2 (32) ,
         ACTION_CODE VARCHAR2 (32) ,
         ERP_FEEDBACK_DATE  DATE ,
         ERP_FEEDBACK_ERROR_MESS VARCHAR2 (2000) ,
         ERP_FEEDBACK_REF VARCHAR2 (240) ,
         ERP_FEEDBACK_STATUS VARCHAR2 (240) ,
         EXT_DOCUMENT_KEY VARCHAR2 (32) ,
         SYSTEM_ACTION_CODE VARCHAR2 (32) ,
         USER_ACTION_CODE VARCHAR2 (32) ,
         PRODUCTION_PERIOD  DATE ,
         PROCESSING_PERIOD  DATE ,
         SINGLE_PARCEL_DOC_IND VARCHAR2 (1) ,
         DOC_SCOPE VARCHAR2 (32) ,
         COMMENTS VARCHAR2 (2000) ,
         REPORT_ACTION_CODE VARCHAR2 (32) ,
         VALUE_1 NUMBER ,
         VALUE_2 NUMBER ,
         VALUE_3 NUMBER ,
         VALUE_4 NUMBER ,
         VALUE_5 NUMBER ,
         VALUE_6 NUMBER ,
         VALUE_7 NUMBER ,
         VALUE_8 NUMBER ,
         VALUE_9 NUMBER ,
         VALUE_10 NUMBER ,
         TEXT_1 VARCHAR2 (240) ,
         TEXT_2 VARCHAR2 (240) ,
         TEXT_3 VARCHAR2 (240) ,
         TEXT_4 VARCHAR2 (240) ,
         TEXT_5 VARCHAR2 (240) ,
         TEXT_6 VARCHAR2 (240) ,
         TEXT_7 VARCHAR2 (240) ,
         TEXT_8 VARCHAR2 (240) ,
         TEXT_9 VARCHAR2 (240) ,
         TEXT_10 VARCHAR2 (240) ,
         DATE_1  DATE ,
         DATE_2  DATE ,
         DATE_3  DATE ,
         DATE_4  DATE ,
         DATE_5  DATE ,
         DATE_6  DATE ,
         DATE_7  DATE ,
         DATE_8  DATE ,
         DATE_9  DATE ,
         DATE_10  DATE ,
         REF_OBJECT_ID_1 VARCHAR2 (32) ,
         REF_OBJECT_ID_2 VARCHAR2 (32) ,
         REF_OBJECT_ID_3 VARCHAR2 (32) ,
         REF_OBJECT_ID_4 VARCHAR2 (32) ,
         REF_OBJECT_ID_5 VARCHAR2 (32) ,
         RECORD_STATUS VARCHAR2 (1) ,
         CREATED_BY VARCHAR2 (30) ,
         CREATED_DATE  DATE ,
         LAST_UPDATED_BY VARCHAR2 (30) ,
         LAST_UPDATED_DATE  DATE ,
         REV_NO NUMBER ,
         REV_TEXT VARCHAR2 (2000) ,
         APPROVAL_BY VARCHAR2 (30) ,
         APPROVAL_DATE  DATE ,
         APPROVAL_STATE VARCHAR2 (1) ,
         REC_ID VARCHAR2 (32) ,
         CUSTOMER_ID VARCHAR2 (32)  );
   FUNCTION POPULATEERPDOCRECORD(
      P_OBJECT_ID IN VARCHAR2,
      P_CONTRACT_DOC_ID IN VARCHAR2,
      P_DOCUMENT_KEY IN VARCHAR2,
      P_PRECEDING_DOC_KEY IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_VENDOR_ID IN VARCHAR2,
      P_STATUS_CODE IN VARCHAR2,
      P_DOCUMENT_TYPE IN VARCHAR2,
      P_EXT_DOC_KEY IN VARCHAR2,
      P_DOCUMENT_NUMBER IN VARCHAR2,
      P_USER IN VARCHAR2,
      P_OPERATION IN VARCHAR2)
      RETURN REC_POPULATEERPDOCRECORD;
   FUNCTION GETERPDOCVENDOR(
      P_CONTRACT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN VARCHAR2;
   FUNCTION GENERPDOCUMENT(
      P_OBJECT_ID IN VARCHAR2,
      P_CONTRACT_DOC_ID IN VARCHAR2,
      P_EXT_DOC_KEY IN VARCHAR2,
      P_PRECEDING_DOCUMENT_KEY IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_STATUS_CODE IN VARCHAR2,
      P_DOCUMENT_NUMBER IN VARCHAR2,
      P_USER IN VARCHAR2,
      P_LOG_ITEM_NO IN OUT NUMBER,
      P_NEW_DOC_KEY OUT VARCHAR2,
      P_NAV_ID IN VARCHAR2)
      RETURN VARCHAR2;

END RPDP_DOCUMENT_GEN;

/



CREATE or REPLACE PACKAGE BODY RPDP_DOCUMENT_GEN
IS

   FUNCTION GENCARGODOCUMENT(
      P_OBJECT_ID IN VARCHAR2,
      P_CARGO_NO IN VARCHAR2,
      P_PARCEL_NO IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_ACTION IN VARCHAR2,
      P_CONTRACT_DOC_ID IN VARCHAR2,
      P_VALIDATION_LEVEL IN VARCHAR2,
      P_DOCUMENT_DATE IN DATE,
      P_DOCUMENT_STATUS IN VARCHAR2,
      P_GEN_DOC_KEY IN VARCHAR2,
      P_PREC_DOC_KEY IN VARCHAR2,
      P_LOADING_PORT_ID IN VARCHAR2,
      P_CUSTOMER_ID IN VARCHAR2,
      P_SOURCE_NODE_ID IN VARCHAR2,
      P_USER IN VARCHAR2,
      P_OWNER IN VARCHAR2,
      P_LOG_ITEM_NO IN OUT NUMBER,
      P_NEW_DOC_KEY OUT VARCHAR2,
      P_NAV_ID IN VARCHAR2,
      P_SILENT IN VARCHAR2 DEFAULT ecdp_revn_common.gv2_true)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_DOCUMENT_GEN.GENCARGODOCUMENT      (
         P_OBJECT_ID,
         P_CARGO_NO,
         P_PARCEL_NO,
         P_DAYTIME,
         P_ACTION,
         P_CONTRACT_DOC_ID,
         P_VALIDATION_LEVEL,
         P_DOCUMENT_DATE,
         P_DOCUMENT_STATUS,
         P_GEN_DOC_KEY,
         P_PREC_DOC_KEY,
         P_LOADING_PORT_ID,
         P_CUSTOMER_ID,
         P_SOURCE_NODE_ID,
         P_USER,
         P_OWNER,
         P_LOG_ITEM_NO,
         P_NEW_DOC_KEY,
         P_NAV_ID,
         P_SILENT );
         RETURN ret_value;
   END GENCARGODOCUMENT;
   FUNCTION GENPERIODDOCUMENT(
      P_OBJECT_ID IN VARCHAR2,
      P_PROCESSING_PERIOD IN DATE,
      P_PERIOD_FROM IN DATE,
      P_PERIOD_TO IN DATE,
      P_ACTION IN VARCHAR2,
      P_CONTRACT_DOC_ID IN VARCHAR2,
      P_DOCUMENT_DATE IN DATE,
      P_DOCUMENT_STATUS IN VARCHAR2,
      P_PREC_DOC_KEY IN VARCHAR2,
      P_DELIVERY_POINT_ID IN VARCHAR2,
      P_CUSTOMER_ID IN VARCHAR2,
      P_SOURCE_NODE_ID IN VARCHAR2,
      P_USER IN VARCHAR2,
      P_OWNER IN VARCHAR2,
      P_LOG_ITEM_NO IN OUT NUMBER,
      P_NEW_DOC_KEY IN OUT VARCHAR2,
      P_NAV_ID IN VARCHAR2,
      P_SILENT IN VARCHAR2 DEFAULT ecdp_revn_common.gv2_true)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_DOCUMENT_GEN.GENPERIODDOCUMENT      (
         P_OBJECT_ID,
         P_PROCESSING_PERIOD,
         P_PERIOD_FROM,
         P_PERIOD_TO,
         P_ACTION,
         P_CONTRACT_DOC_ID,
         P_DOCUMENT_DATE,
         P_DOCUMENT_STATUS,
         P_PREC_DOC_KEY,
         P_DELIVERY_POINT_ID,
         P_CUSTOMER_ID,
         P_SOURCE_NODE_ID,
         P_USER,
         P_OWNER,
         P_LOG_ITEM_NO,
         P_NEW_DOC_KEY,
         P_NAV_ID,
         P_SILENT );
         RETURN ret_value;
   END GENPERIODDOCUMENT;
   FUNCTION POPULATEERPDOCRECORD(
      P_OBJECT_ID IN VARCHAR2,
      P_CONTRACT_DOC_ID IN VARCHAR2,
      P_DOCUMENT_KEY IN VARCHAR2,
      P_PRECEDING_DOC_KEY IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_VENDOR_ID IN VARCHAR2,
      P_STATUS_CODE IN VARCHAR2,
      P_DOCUMENT_TYPE IN VARCHAR2,
      P_EXT_DOC_KEY IN VARCHAR2,
      P_DOCUMENT_NUMBER IN VARCHAR2,
      P_USER IN VARCHAR2,
      P_OPERATION IN VARCHAR2)
      RETURN REC_POPULATEERPDOCRECORD
   IS
      ret_value    REC_POPULATEERPDOCRECORD ;
   BEGIN
      ret_value := ECDP_DOCUMENT_GEN.POPULATEERPDOCRECORD      (
         P_OBJECT_ID,
         P_CONTRACT_DOC_ID,
         P_DOCUMENT_KEY,
         P_PRECEDING_DOC_KEY,
         P_DAYTIME,
         P_VENDOR_ID,
         P_STATUS_CODE,
         P_DOCUMENT_TYPE,
         P_EXT_DOC_KEY,
         P_DOCUMENT_NUMBER,
         P_USER,
         P_OPERATION );
         RETURN ret_value;
   END POPULATEERPDOCRECORD;
   FUNCTION GETERPDOCVENDOR(
      P_CONTRACT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_DOCUMENT_GEN.GETERPDOCVENDOR      (
         P_CONTRACT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END GETERPDOCVENDOR;
   FUNCTION GENERPDOCUMENT(
      P_OBJECT_ID IN VARCHAR2,
      P_CONTRACT_DOC_ID IN VARCHAR2,
      P_EXT_DOC_KEY IN VARCHAR2,
      P_PRECEDING_DOCUMENT_KEY IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_STATUS_CODE IN VARCHAR2,
      P_DOCUMENT_NUMBER IN VARCHAR2,
      P_USER IN VARCHAR2,
      P_LOG_ITEM_NO IN OUT NUMBER,
      P_NEW_DOC_KEY OUT VARCHAR2,
      P_NAV_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_DOCUMENT_GEN.GENERPDOCUMENT      (
         P_OBJECT_ID,
         P_CONTRACT_DOC_ID,
         P_EXT_DOC_KEY,
         P_PRECEDING_DOCUMENT_KEY,
         P_DAYTIME,
         P_STATUS_CODE,
         P_DOCUMENT_NUMBER,
         P_USER,
         P_LOG_ITEM_NO,
         P_NEW_DOC_KEY,
         P_NAV_ID );
         RETURN ret_value;
   END GENERPDOCUMENT;

END RPDP_DOCUMENT_GEN;

/
--GRANT EXECUTE ON ECKERNEL_WST.RPDP_DOCUMENT_GEN TO REPORT_ROLE_XXX;



 -- FINISH PKG_GEN_PKGS.sf_get_functions at:11/16/2018 09.24.19 AM


