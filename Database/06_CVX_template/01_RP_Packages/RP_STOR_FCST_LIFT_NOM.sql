
 -- START PKG_GEN_PKGS.sf_get_functions at:11/15/2018 07.50.14 AM


CREATE or REPLACE PACKAGE RP_STOR_FCST_LIFT_NOM
IS

   FUNCTION BOL_COMMENTS(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION COOLDOWN_IND(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION FIXED_IND(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION GRS_VOL_NOMINATED(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION INCOTERM(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TEXT_3(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TEXT_4(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION UNDO_IND(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION VALUE_16(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VALUE_18(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VALUE_21(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VALUE_27(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VALUE_30(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION APPROVAL_BY(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION APPROVAL_STATE(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION BL_DATE(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN DATE;
   FUNCTION CARRIER_ID(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION CONSIGNEE_ID(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION COOLDOWN_QTY2(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION GRS_VOL_NOMINATED2(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION GRS_VOL_NOMINATED3(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION LAUF_QTY(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION LIFTING_SPLIT_VOL(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION NOM_FIRM_DATE(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN DATE;
   FUNCTION REF_OBJECT_ID_4(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION START_LIFTING_DATE(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN DATE;
   FUNCTION TEXT_25(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION VALUE_23(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VALUE_28(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VALUE_5(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION BL_NUMBER(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION DATE_7(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN DATE;
   FUNCTION GRS_VOL_REQUESTED3(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION GRS_VOL_SCHEDULED3(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION LIFTING_SPLIT_PCT(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION OBJECT_ID(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION PURGE_IND(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION REQUESTED_TOLERANCE_TYPE(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION SCHEDULE_TOLERANCE_TYPE(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TEXT_18(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TEXT_19(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TEXT_21(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TEXT_7(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TEXT_8(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION VALUE_29(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VAPOUR_RETURN_QTY(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION COMMENTS(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION CONSIGNOR_ID(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION DATE_3(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN DATE;
   FUNCTION DATE_5(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN DATE;
   FUNCTION DOC_INSTR_RECEIVED_IND(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION GRS_VOL_REQUESTED2(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION GRS_VOL_SCHEDULE(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION PORT_ID(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION REF_OBJECT_ID_2(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION REF_OBJECT_ID_3(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TEXT_14(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TEXT_17(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TEXT_20(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TEXT_22(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TEXT_6(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TEXT_9(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION UNLOAD_DATE(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN DATE;
   FUNCTION VALUE_12(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VALUE_22(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VALUE_26(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VALUE_6(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION BALANCE_DELTA_QTY2(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION CARGO_NO(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION CONTRACT_ID(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION DATE_2(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN DATE;
   FUNCTION LAUF_QTY2(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION LIFTING_ACCOUNT_ID(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION LIFTING_CODE(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION NOM_SEQUENCE(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION OPPORTUNITY_NO(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION PURGE_QTY(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION PURGE_QTY2(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION PURGE_QTY3(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION RECORD_STATUS(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION REF_OBJECT_ID_5(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TEXT_16(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION VALUE_1(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VALUE_15(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VALUE_19(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VAPOUR_RETURN_QTY2(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION APPROVAL_DATE(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN DATE;
   FUNCTION BALANCE_DELTA_QTY(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION BALANCE_IND(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION COOLDOWN_QTY(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION DATE_6(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN DATE;
   FUNCTION LAUF_QTY3(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION REF_OBJECT_ID_1(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION REQUESTED_DATE(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN DATE;
   FUNCTION REQUESTED_DATE_RANGE(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
      TYPE REC_ROW_BY_PK IS RECORD (
         PARCEL_NO NUMBER ,
         FORECAST_ID VARCHAR2 (32) ,
         OBJECT_ID VARCHAR2 (32) ,
         CARGO_NO NUMBER ,
         LIFTING_ACCOUNT_ID VARCHAR2 (32) ,
         CARRIER_ID VARCHAR2 (32) ,
         CONSIGNOR_ID VARCHAR2 (32) ,
         CONSIGNEE_ID VARCHAR2 (32) ,
         REQUESTED_DATE  DATE ,
         REQUESTED_DATE_RANGE VARCHAR2 (8) ,
         REQUESTED_TOLERANCE_TYPE VARCHAR2 (16) ,
         NOM_FIRM_DATE  DATE ,
         NOM_FIRM_DATE_RANGE VARCHAR2 (8) ,
         NOM_SEQUENCE NUMBER ,
         LIFTING_SPLIT_PCT NUMBER ,
         LIFTING_SPLIT_VOL NUMBER ,
         LIFTING_CODE VARCHAR2 (32) ,
         DELETED_IND VARCHAR2 (1) ,
         INCOTERM VARCHAR2 (32) ,
         CONTRACT_ID VARCHAR2 (32) ,
         TELEX_REF VARCHAR2 (30) ,
         GRAPH_VALUE NUMBER ,
         BALANCE_IND VARCHAR2 (1) ,
         GRS_VOL_REQUESTED NUMBER ,
         GRS_VOL_NOMINATED NUMBER ,
         GRS_VOL_SCHEDULE NUMBER ,
         GRS_VOL_NOMINATED2 NUMBER ,
         GRS_VOL_REQUESTED2 NUMBER ,
         GRS_VOL_SCHEDULED2 NUMBER ,
         GRS_VOL_NOMINATED3 NUMBER ,
         GRS_VOL_REQUESTED3 NUMBER ,
         GRS_VOL_SCHEDULED3 NUMBER ,
         SCHEDULE_TOLERANCE_TYPE VARCHAR2 (16) ,
         BL_NUMBER VARCHAR2 (32) ,
         BL_DATE  DATE ,
         UNLOAD_DATE  DATE ,
         PORT_ID VARCHAR2 (32) ,
         DOC_INSTR_RECEIVED_IND VARCHAR2 (1) ,
         FIXED_IND VARCHAR2 (1) ,
         BOL_COMMENTS VARCHAR2 (32) ,
         CHARTER_PARTY VARCHAR2 (240) ,
         COMMENTS VARCHAR2 (2000) ,
         TEXT_1 VARCHAR2 (16) ,
         TEXT_2 VARCHAR2 (32) ,
         TEXT_3 VARCHAR2 (240) ,
         TEXT_4 VARCHAR2 (2000) ,
         TEXT_5 VARCHAR2 (240) ,
         TEXT_6 VARCHAR2 (240) ,
         TEXT_7 VARCHAR2 (240) ,
         TEXT_8 VARCHAR2 (240) ,
         TEXT_9 VARCHAR2 (240) ,
         TEXT_10 VARCHAR2 (240) ,
         VALUE_1 NUMBER ,
         VALUE_2 NUMBER ,
         VALUE_3 NUMBER ,
         VALUE_4 NUMBER ,
         VALUE_5 NUMBER ,
         VALUE_6 NUMBER ,
         VALUE_7 NUMBER ,
         VALUE_8 NUMBER ,
         VALUE_9 NUMBER ,
         VALUE_10 NUMBER ,
         DATE_1  DATE ,
         DATE_2  DATE ,
         DATE_3  DATE ,
         DATE_4  DATE ,
         DATE_5  DATE ,
         DATE_6  DATE ,
         DATE_7  DATE ,
         REF_OBJECT_ID_1 VARCHAR2 (32) ,
         RECORD_STATUS VARCHAR2 (1) ,
         CREATED_BY VARCHAR2 (30) ,
         CREATED_DATE  DATE ,
         LAST_UPDATED_BY VARCHAR2 (30) ,
         LAST_UPDATED_DATE  DATE ,
         REV_NO NUMBER ,
         REV_TEXT VARCHAR2 (2000) ,
         APPROVAL_STATE VARCHAR2 (1) ,
         APPROVAL_BY VARCHAR2 (30) ,
         APPROVAL_DATE  DATE ,
         REC_ID VARCHAR2 (32) ,
         COOLDOWN_IND VARCHAR2 (1) ,
         COOLDOWN_QTY NUMBER ,
         PURGE_IND VARCHAR2 (1) ,
         PURGE_QTY NUMBER ,
         COOLDOWN_QTY2 NUMBER ,
         COOLDOWN_QTY3 NUMBER ,
         PURGE_QTY2 NUMBER ,
         PURGE_QTY3 NUMBER ,
         VAPOUR_RETURN_QTY NUMBER ,
         VAPOUR_RETURN_QTY2 NUMBER ,
         VAPOUR_RETURN_QTY3 NUMBER ,
         LAUF_QTY NUMBER ,
         LAUF_QTY2 NUMBER ,
         LAUF_QTY3 NUMBER ,
         BALANCE_DELTA_QTY NUMBER ,
         BALANCE_DELTA_QTY2 NUMBER ,
         BALANCE_DELTA_QTY3 NUMBER ,
         START_LIFTING_DATE  DATE ,
         TEXT_11 VARCHAR2 (2000) ,
         TEXT_12 VARCHAR2 (2000) ,
         TEXT_13 VARCHAR2 (2000) ,
         TEXT_14 VARCHAR2 (2000) ,
         TEXT_15 VARCHAR2 (2000) ,
         REF_OBJECT_ID_2 VARCHAR2 (32) ,
         REF_OBJECT_ID_3 VARCHAR2 (32) ,
         REF_OBJECT_ID_4 VARCHAR2 (32) ,
         REF_OBJECT_ID_5 VARCHAR2 (32) ,
         TEXT_16 VARCHAR2 (2000) ,
         TEXT_17 VARCHAR2 (2000) ,
         TEXT_18 VARCHAR2 (2000) ,
         TEXT_19 VARCHAR2 (2000) ,
         TEXT_20 VARCHAR2 (2000) ,
         VALUE_11 NUMBER ,
         VALUE_12 NUMBER ,
         VALUE_13 NUMBER ,
         VALUE_14 NUMBER ,
         VALUE_15 NUMBER ,
         TEXT_21 VARCHAR2 (240) ,
         TEXT_22 VARCHAR2 (240) ,
         TEXT_23 VARCHAR2 (240) ,
         TEXT_24 VARCHAR2 (240) ,
         TEXT_25 VARCHAR2 (240) ,
         OPPORTUNITY_NO NUMBER ,
         UNDO_IND VARCHAR2 (1) ,
         VALUE_16 NUMBER ,
         VALUE_17 NUMBER ,
         VALUE_18 NUMBER ,
         VALUE_19 NUMBER ,
         VALUE_20 NUMBER ,
         VALUE_21 NUMBER ,
         VALUE_22 NUMBER ,
         VALUE_23 NUMBER ,
         VALUE_24 NUMBER ,
         VALUE_25 NUMBER ,
         VALUE_26 NUMBER ,
         VALUE_27 NUMBER ,
         VALUE_28 NUMBER ,
         VALUE_29 NUMBER ,
         VALUE_30 NUMBER  );
   FUNCTION ROW_BY_PK(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN REC_ROW_BY_PK;
   FUNCTION TEXT_13(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TEXT_5(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION VALUE_13(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VALUE_17(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VALUE_2(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VALUE_20(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VALUE_25(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VALUE_3(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VALUE_4(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VAPOUR_RETURN_QTY3(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION CHARTER_PARTY(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION COOLDOWN_QTY3(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION DATE_4(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN DATE;
   FUNCTION GRAPH_VALUE(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION REC_ID(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TELEX_REF(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TEXT_1(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TEXT_2(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION VALUE_7(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VALUE_9(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION BALANCE_DELTA_QTY3(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION DATE_1(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN DATE;
   FUNCTION DELETED_IND(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION GRS_VOL_REQUESTED(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION GRS_VOL_SCHEDULED2(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION NOM_FIRM_DATE_RANGE(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TEXT_10(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TEXT_11(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TEXT_12(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TEXT_15(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TEXT_23(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TEXT_24(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION VALUE_10(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VALUE_11(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VALUE_14(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VALUE_24(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VALUE_8(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER;

END RP_STOR_FCST_LIFT_NOM;

/



CREATE or REPLACE PACKAGE BODY RP_STOR_FCST_LIFT_NOM
IS

   FUNCTION BOL_COMMENTS(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.BOL_COMMENTS      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END BOL_COMMENTS;
   FUNCTION COOLDOWN_IND(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.COOLDOWN_IND      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END COOLDOWN_IND;
   FUNCTION FIXED_IND(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.FIXED_IND      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END FIXED_IND;
   FUNCTION GRS_VOL_NOMINATED(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.GRS_VOL_NOMINATED      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END GRS_VOL_NOMINATED;
   FUNCTION INCOTERM(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.INCOTERM      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END INCOTERM;
   FUNCTION TEXT_3(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.TEXT_3      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END TEXT_3;
   FUNCTION TEXT_4(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.TEXT_4      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END TEXT_4;
   FUNCTION UNDO_IND(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.UNDO_IND      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END UNDO_IND;
   FUNCTION VALUE_16(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.VALUE_16      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END VALUE_16;
   FUNCTION VALUE_18(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.VALUE_18      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END VALUE_18;
   FUNCTION VALUE_21(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.VALUE_21      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END VALUE_21;
   FUNCTION VALUE_27(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.VALUE_27      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END VALUE_27;
   FUNCTION VALUE_30(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.VALUE_30      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END VALUE_30;
   FUNCTION APPROVAL_BY(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (30) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.APPROVAL_BY      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END APPROVAL_BY;
   FUNCTION APPROVAL_STATE(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.APPROVAL_STATE      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END APPROVAL_STATE;
   FUNCTION BL_DATE(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.BL_DATE      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END BL_DATE;
   FUNCTION CARRIER_ID(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.CARRIER_ID      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END CARRIER_ID;
   FUNCTION CONSIGNEE_ID(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.CONSIGNEE_ID      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END CONSIGNEE_ID;
   FUNCTION COOLDOWN_QTY2(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.COOLDOWN_QTY2      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END COOLDOWN_QTY2;
   FUNCTION GRS_VOL_NOMINATED2(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.GRS_VOL_NOMINATED2      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END GRS_VOL_NOMINATED2;
   FUNCTION GRS_VOL_NOMINATED3(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.GRS_VOL_NOMINATED3      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END GRS_VOL_NOMINATED3;
   FUNCTION LAUF_QTY(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.LAUF_QTY      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END LAUF_QTY;
   FUNCTION LIFTING_SPLIT_VOL(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.LIFTING_SPLIT_VOL      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END LIFTING_SPLIT_VOL;
   FUNCTION NOM_FIRM_DATE(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.NOM_FIRM_DATE      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END NOM_FIRM_DATE;
   FUNCTION REF_OBJECT_ID_4(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.REF_OBJECT_ID_4      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END REF_OBJECT_ID_4;
   FUNCTION START_LIFTING_DATE(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.START_LIFTING_DATE      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END START_LIFTING_DATE;
   FUNCTION TEXT_25(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.TEXT_25      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END TEXT_25;
   FUNCTION VALUE_23(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.VALUE_23      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END VALUE_23;
   FUNCTION VALUE_28(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.VALUE_28      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END VALUE_28;
   FUNCTION VALUE_5(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.VALUE_5      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END VALUE_5;
   FUNCTION BL_NUMBER(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.BL_NUMBER      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END BL_NUMBER;
   FUNCTION DATE_7(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.DATE_7      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END DATE_7;
   FUNCTION GRS_VOL_REQUESTED3(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.GRS_VOL_REQUESTED3      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END GRS_VOL_REQUESTED3;
   FUNCTION GRS_VOL_SCHEDULED3(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.GRS_VOL_SCHEDULED3      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END GRS_VOL_SCHEDULED3;
   FUNCTION LIFTING_SPLIT_PCT(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.LIFTING_SPLIT_PCT      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END LIFTING_SPLIT_PCT;
   FUNCTION OBJECT_ID(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.OBJECT_ID      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END OBJECT_ID;
   FUNCTION PURGE_IND(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.PURGE_IND      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END PURGE_IND;
   FUNCTION REQUESTED_TOLERANCE_TYPE(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (16) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.REQUESTED_TOLERANCE_TYPE      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END REQUESTED_TOLERANCE_TYPE;
   FUNCTION SCHEDULE_TOLERANCE_TYPE(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (16) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.SCHEDULE_TOLERANCE_TYPE      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END SCHEDULE_TOLERANCE_TYPE;
   FUNCTION TEXT_18(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.TEXT_18      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END TEXT_18;
   FUNCTION TEXT_19(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.TEXT_19      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END TEXT_19;
   FUNCTION TEXT_21(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.TEXT_21      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END TEXT_21;
   FUNCTION TEXT_7(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.TEXT_7      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END TEXT_7;
   FUNCTION TEXT_8(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.TEXT_8      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END TEXT_8;
   FUNCTION VALUE_29(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.VALUE_29      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END VALUE_29;
   FUNCTION VAPOUR_RETURN_QTY(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.VAPOUR_RETURN_QTY      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END VAPOUR_RETURN_QTY;
   FUNCTION COMMENTS(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.COMMENTS      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END COMMENTS;
   FUNCTION CONSIGNOR_ID(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.CONSIGNOR_ID      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END CONSIGNOR_ID;
   FUNCTION DATE_3(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.DATE_3      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END DATE_3;
   FUNCTION DATE_5(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.DATE_5      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END DATE_5;
   FUNCTION DOC_INSTR_RECEIVED_IND(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.DOC_INSTR_RECEIVED_IND      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END DOC_INSTR_RECEIVED_IND;
   FUNCTION GRS_VOL_REQUESTED2(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.GRS_VOL_REQUESTED2      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END GRS_VOL_REQUESTED2;
   FUNCTION GRS_VOL_SCHEDULE(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.GRS_VOL_SCHEDULE      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END GRS_VOL_SCHEDULE;
   FUNCTION PORT_ID(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.PORT_ID      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END PORT_ID;
   FUNCTION REF_OBJECT_ID_2(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.REF_OBJECT_ID_2      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END REF_OBJECT_ID_2;
   FUNCTION REF_OBJECT_ID_3(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.REF_OBJECT_ID_3      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END REF_OBJECT_ID_3;
   FUNCTION TEXT_14(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.TEXT_14      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END TEXT_14;
   FUNCTION TEXT_17(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.TEXT_17      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END TEXT_17;
   FUNCTION TEXT_20(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.TEXT_20      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END TEXT_20;
   FUNCTION TEXT_22(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.TEXT_22      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END TEXT_22;
   FUNCTION TEXT_6(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.TEXT_6      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END TEXT_6;
   FUNCTION TEXT_9(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.TEXT_9      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END TEXT_9;
   FUNCTION UNLOAD_DATE(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.UNLOAD_DATE      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END UNLOAD_DATE;
   FUNCTION VALUE_12(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.VALUE_12      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END VALUE_12;
   FUNCTION VALUE_22(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.VALUE_22      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END VALUE_22;
   FUNCTION VALUE_26(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.VALUE_26      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END VALUE_26;
   FUNCTION VALUE_6(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.VALUE_6      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END VALUE_6;
   FUNCTION BALANCE_DELTA_QTY2(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.BALANCE_DELTA_QTY2      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END BALANCE_DELTA_QTY2;
   FUNCTION CARGO_NO(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.CARGO_NO      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END CARGO_NO;
   FUNCTION CONTRACT_ID(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.CONTRACT_ID      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END CONTRACT_ID;
   FUNCTION DATE_2(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.DATE_2      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END DATE_2;
   FUNCTION LAUF_QTY2(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.LAUF_QTY2      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END LAUF_QTY2;
   FUNCTION LIFTING_ACCOUNT_ID(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.LIFTING_ACCOUNT_ID      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END LIFTING_ACCOUNT_ID;
   FUNCTION LIFTING_CODE(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.LIFTING_CODE      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END LIFTING_CODE;
   FUNCTION NOM_SEQUENCE(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.NOM_SEQUENCE      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END NOM_SEQUENCE;
   FUNCTION OPPORTUNITY_NO(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.OPPORTUNITY_NO      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END OPPORTUNITY_NO;
   FUNCTION PURGE_QTY(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.PURGE_QTY      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END PURGE_QTY;
   FUNCTION PURGE_QTY2(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.PURGE_QTY2      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END PURGE_QTY2;
   FUNCTION PURGE_QTY3(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.PURGE_QTY3      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END PURGE_QTY3;
   FUNCTION RECORD_STATUS(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.RECORD_STATUS      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END RECORD_STATUS;
   FUNCTION REF_OBJECT_ID_5(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.REF_OBJECT_ID_5      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END REF_OBJECT_ID_5;
   FUNCTION TEXT_16(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.TEXT_16      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END TEXT_16;
   FUNCTION VALUE_1(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.VALUE_1      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END VALUE_1;
   FUNCTION VALUE_15(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.VALUE_15      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END VALUE_15;
   FUNCTION VALUE_19(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.VALUE_19      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END VALUE_19;
   FUNCTION VAPOUR_RETURN_QTY2(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.VAPOUR_RETURN_QTY2      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END VAPOUR_RETURN_QTY2;
   FUNCTION APPROVAL_DATE(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.APPROVAL_DATE      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END APPROVAL_DATE;
   FUNCTION BALANCE_DELTA_QTY(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.BALANCE_DELTA_QTY      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END BALANCE_DELTA_QTY;
   FUNCTION BALANCE_IND(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.BALANCE_IND      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END BALANCE_IND;
   FUNCTION COOLDOWN_QTY(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.COOLDOWN_QTY      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END COOLDOWN_QTY;
   FUNCTION DATE_6(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.DATE_6      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END DATE_6;
   FUNCTION LAUF_QTY3(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.LAUF_QTY3      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END LAUF_QTY3;
   FUNCTION REF_OBJECT_ID_1(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.REF_OBJECT_ID_1      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END REF_OBJECT_ID_1;
   FUNCTION REQUESTED_DATE(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.REQUESTED_DATE      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END REQUESTED_DATE;
   FUNCTION REQUESTED_DATE_RANGE(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (8) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.REQUESTED_DATE_RANGE      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END REQUESTED_DATE_RANGE;
   FUNCTION ROW_BY_PK(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN REC_ROW_BY_PK
   IS
      ret_value    REC_ROW_BY_PK ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.ROW_BY_PK      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END ROW_BY_PK;
   FUNCTION TEXT_13(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.TEXT_13      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END TEXT_13;
   FUNCTION TEXT_5(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.TEXT_5      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END TEXT_5;
   FUNCTION VALUE_13(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.VALUE_13      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END VALUE_13;
   FUNCTION VALUE_17(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.VALUE_17      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END VALUE_17;
   FUNCTION VALUE_2(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.VALUE_2      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END VALUE_2;
   FUNCTION VALUE_20(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.VALUE_20      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END VALUE_20;
   FUNCTION VALUE_25(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.VALUE_25      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END VALUE_25;
   FUNCTION VALUE_3(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.VALUE_3      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END VALUE_3;
   FUNCTION VALUE_4(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.VALUE_4      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END VALUE_4;
   FUNCTION VAPOUR_RETURN_QTY3(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.VAPOUR_RETURN_QTY3      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END VAPOUR_RETURN_QTY3;
   FUNCTION CHARTER_PARTY(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.CHARTER_PARTY      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END CHARTER_PARTY;
   FUNCTION COOLDOWN_QTY3(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.COOLDOWN_QTY3      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END COOLDOWN_QTY3;
   FUNCTION DATE_4(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.DATE_4      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END DATE_4;
   FUNCTION GRAPH_VALUE(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.GRAPH_VALUE      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END GRAPH_VALUE;
   FUNCTION REC_ID(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.REC_ID      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END REC_ID;
   FUNCTION TELEX_REF(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (30) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.TELEX_REF      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END TELEX_REF;
   FUNCTION TEXT_1(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (16) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.TEXT_1      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END TEXT_1;
   FUNCTION TEXT_2(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.TEXT_2      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END TEXT_2;
   FUNCTION VALUE_7(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.VALUE_7      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END VALUE_7;
   FUNCTION VALUE_9(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.VALUE_9      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END VALUE_9;
   FUNCTION BALANCE_DELTA_QTY3(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.BALANCE_DELTA_QTY3      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END BALANCE_DELTA_QTY3;
   FUNCTION DATE_1(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.DATE_1      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END DATE_1;
   FUNCTION DELETED_IND(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.DELETED_IND      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END DELETED_IND;
   FUNCTION GRS_VOL_REQUESTED(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.GRS_VOL_REQUESTED      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END GRS_VOL_REQUESTED;
   FUNCTION GRS_VOL_SCHEDULED2(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.GRS_VOL_SCHEDULED2      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END GRS_VOL_SCHEDULED2;
   FUNCTION NOM_FIRM_DATE_RANGE(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (8) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.NOM_FIRM_DATE_RANGE      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END NOM_FIRM_DATE_RANGE;
   FUNCTION TEXT_10(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.TEXT_10      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END TEXT_10;
   FUNCTION TEXT_11(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.TEXT_11      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END TEXT_11;
   FUNCTION TEXT_12(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.TEXT_12      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END TEXT_12;
   FUNCTION TEXT_15(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.TEXT_15      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END TEXT_15;
   FUNCTION TEXT_23(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.TEXT_23      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END TEXT_23;
   FUNCTION TEXT_24(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.TEXT_24      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END TEXT_24;
   FUNCTION VALUE_10(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.VALUE_10      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END VALUE_10;
   FUNCTION VALUE_11(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.VALUE_11      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END VALUE_11;
   FUNCTION VALUE_14(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.VALUE_14      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END VALUE_14;
   FUNCTION VALUE_24(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.VALUE_24      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END VALUE_24;
   FUNCTION VALUE_8(
      P_PARCEL_NO IN NUMBER,
      P_FORECAST_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STOR_FCST_LIFT_NOM.VALUE_8      (
         P_PARCEL_NO,
         P_FORECAST_ID );
         RETURN ret_value;
   END VALUE_8;

END RP_STOR_FCST_LIFT_NOM;

/
--GRANT EXECUTE ON ECKERNEL_WST.RP_STOR_FCST_LIFT_NOM TO REPORT_ROLE_XXX;



 -- FINISH PKG_GEN_PKGS.sf_get_functions at:11/15/2018 07.50.41 AM


