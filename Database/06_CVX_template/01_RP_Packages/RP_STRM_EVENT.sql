
 -- START PKG_GEN_PKGS.sf_get_functions at:11/15/2018 07.40.36 AM


CREATE or REPLACE PACKAGE RP_STRM_EVENT
IS

   FUNCTION AVG_TEMP(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION DIFF_CHART_TYPE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION GRS_OPENING_VOL(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION MATH_API(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_DENSITY(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_GRS_CLOSING_MASS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_STATIC_CHART_RATING(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_TEMP_FACTOR_OVERRIDE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION ORIFICE_PLATE_OVERRIDE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION RATE_OVERRIDE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION STATIC_CHART_SCALE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION TEMP_FACTOR_OVERRIDE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION TEXT_3(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION TEXT_4(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION APPROVAL_BY(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION APPROVAL_STATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION DIFF_CHART_VALUE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION ENERGY(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION ENERGY_FACTOR_OVERRIDE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION MATH_CORR_API(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_ENERGY(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_PRESSURE_FACTOR_OVERRIDE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_QUANTITY(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_SHRINKAGE_FACTOR_OVERRIDE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_STATIC_CHART_VALUE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_STREAM_QUALITY(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_VALUE_3(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_VALUE_4(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_VALUE_8(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION VALUE_5(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION MATH_BS_W_WT(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_DIFF_CHART_SCALE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_DIFF_CHART_VALUE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_GRS_MASS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_METER_FACTOR_OVERRIDE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_VALUE_6(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION METER_RUN_OVERRIDE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION NET_MASS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION NEXT_DAYTIME(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE;
   FUNCTION PREV_EQUAL_DAYTIME(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE;
   FUNCTION TEXT_7(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION TEXT_8(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION CALC_GAS_VOL(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION COUNT_ROWS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE)
      RETURN NUMBER;
   FUNCTION DATE_3(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN DATE;
   FUNCTION DATE_5(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN DATE;
   FUNCTION EVENT_DAY(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN DATE;
   FUNCTION GRS_CLOSING_VOL(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION MATH_BS_W(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_GRAVITY_FACTOR_OVERRIDE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_GRS_OPENING_MASS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_MANUAL_ADJ_VOL(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_VALUE_1(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_VALUE_5(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_VALUE_7(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_VALUE_9(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION NET_VOL(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION NEXT_EQUAL_DAYTIME(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE;
   FUNCTION SHRINKAGE_FACTOR_OVERRIDE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION STATIC_CHART_RATING(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION TEXT_6(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION TEXT_9(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION VALUE_6(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION VCF(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION DATE_2(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN DATE;
   FUNCTION END_DATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN DATE;
   FUNCTION GRAVITY_FACTOR_OVERRIDE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION MATH_AVG_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_DIFF_CHART_RATING(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_NET_MASS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_RATE_OVERRIDE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_RUN_TEMP(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION PREV_DAYTIME(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE;
   FUNCTION RECORD_STATUS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION STREAM_QUALITY(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION TANK_OBJECT_ID(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION VALUE_1(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION APPROVAL_DATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN DATE;
   FUNCTION AVG_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION CATEGORY_CODE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION DENSITY(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION GRS_CLOSING_MASS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION GRS_OPENING_MASS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION MATH_ENERGY_FACTOR_OVERRIDE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_GRS_CLOSING_VOL(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_VALUE_2(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_VCF(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
      TYPE REC_ROW_BY_PK IS RECORD (
         OBJECT_ID VARCHAR2 (32) ,
         EVENT_TYPE VARCHAR2 (32) ,
         DAYTIME  DATE ,
         EVENT_DAY  DATE ,
         END_DATE  DATE ,
         CATEGORY_CODE VARCHAR2 (32) ,
         TANK_OBJECT_ID VARCHAR2 (32) ,
         NET_VOL NUMBER ,
         GRS_VOL NUMBER ,
         GRS_OPENING_VOL NUMBER ,
         GRS_CLOSING_VOL NUMBER ,
         NET_MASS NUMBER ,
         GRS_MASS NUMBER ,
         GRS_OPENING_MASS NUMBER ,
         GRS_CLOSING_MASS NUMBER ,
         DENSITY NUMBER ,
         BS_W NUMBER ,
         BS_W_WT NUMBER ,
         AVG_TEMP NUMBER ,
         RUN_TEMP NUMBER ,
         QUANTITY NUMBER ,
         RATE_OVERRIDE NUMBER ,
         METER_RUN_OVERRIDE VARCHAR2 (32) ,
         ORIFICE_PLATE_OVERRIDE VARCHAR2 (32) ,
         API NUMBER ,
         CORR_API NUMBER ,
         VCF NUMBER ,
         SALT NUMBER ,
         CALC_GAS_VOL NUMBER ,
         MANUAL_ADJ_VOL NUMBER ,
         AVG_PRESS NUMBER ,
         STATIC_CHART_TYPE VARCHAR2 (32) ,
         STATIC_CHART_SCALE NUMBER ,
         STATIC_CHART_RATING NUMBER ,
         STATIC_CHART_VALUE NUMBER ,
         DIFF_CHART_TYPE VARCHAR2 (32) ,
         DIFF_CHART_SCALE NUMBER ,
         DIFF_CHART_RATING NUMBER ,
         DIFF_CHART_VALUE NUMBER ,
         TICKET_NO VARCHAR2 (30) ,
         METER_FACTOR_OVERRIDE NUMBER ,
         PRESSURE_FACTOR_OVERRIDE NUMBER ,
         SHRINKAGE_FACTOR_OVERRIDE NUMBER ,
         GRAVITY_FACTOR_OVERRIDE NUMBER ,
         TEMP_FACTOR_OVERRIDE NUMBER ,
         ENERGY_FACTOR_OVERRIDE NUMBER ,
         ENERGY NUMBER ,
         STREAM_QUALITY NUMBER ,
         VALUE_1 NUMBER ,
         VALUE_2 NUMBER ,
         VALUE_3 NUMBER ,
         VALUE_4 NUMBER ,
         VALUE_5 NUMBER ,
         VALUE_6 NUMBER ,
         VALUE_7 NUMBER ,
         VALUE_8 NUMBER ,
         VALUE_9 NUMBER ,
         VALUE_10 NUMBER ,
         TEXT_1 VARCHAR2 (16) ,
         TEXT_2 VARCHAR2 (32) ,
         TEXT_3 VARCHAR2 (240) ,
         TEXT_4 VARCHAR2 (2000) ,
         TEXT_5 VARCHAR2 (240) ,
         TEXT_6 VARCHAR2 (240) ,
         TEXT_7 VARCHAR2 (240) ,
         TEXT_8 VARCHAR2 (240) ,
         TEXT_9 VARCHAR2 (240) ,
         TEXT_10 VARCHAR2 (240) ,
         DATE_1  DATE ,
         DATE_2  DATE ,
         RECORD_STATUS VARCHAR2 (1) ,
         CREATED_BY VARCHAR2 (30) ,
         CREATED_DATE  DATE ,
         LAST_UPDATED_BY VARCHAR2 (30) ,
         LAST_UPDATED_DATE  DATE ,
         REV_NO NUMBER ,
         REV_TEXT VARCHAR2 (2000) ,
         APPROVAL_BY VARCHAR2 (30) ,
         APPROVAL_DATE  DATE ,
         APPROVAL_STATE VARCHAR2 (1) ,
         REC_ID VARCHAR2 (32) ,
         DATE_3  DATE ,
         DATE_4  DATE ,
         DATE_5  DATE  );
   FUNCTION ROW_BY_PK(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN REC_ROW_BY_PK;
      TYPE REC_ROW_BY_REL_OPERATOR IS RECORD (
         OBJECT_ID VARCHAR2 (32) ,
         EVENT_TYPE VARCHAR2 (32) ,
         DAYTIME  DATE ,
         EVENT_DAY  DATE ,
         END_DATE  DATE ,
         CATEGORY_CODE VARCHAR2 (32) ,
         TANK_OBJECT_ID VARCHAR2 (32) ,
         NET_VOL NUMBER ,
         GRS_VOL NUMBER ,
         GRS_OPENING_VOL NUMBER ,
         GRS_CLOSING_VOL NUMBER ,
         NET_MASS NUMBER ,
         GRS_MASS NUMBER ,
         GRS_OPENING_MASS NUMBER ,
         GRS_CLOSING_MASS NUMBER ,
         DENSITY NUMBER ,
         BS_W NUMBER ,
         BS_W_WT NUMBER ,
         AVG_TEMP NUMBER ,
         RUN_TEMP NUMBER ,
         QUANTITY NUMBER ,
         RATE_OVERRIDE NUMBER ,
         METER_RUN_OVERRIDE VARCHAR2 (32) ,
         ORIFICE_PLATE_OVERRIDE VARCHAR2 (32) ,
         API NUMBER ,
         CORR_API NUMBER ,
         VCF NUMBER ,
         SALT NUMBER ,
         CALC_GAS_VOL NUMBER ,
         MANUAL_ADJ_VOL NUMBER ,
         AVG_PRESS NUMBER ,
         STATIC_CHART_TYPE VARCHAR2 (32) ,
         STATIC_CHART_SCALE NUMBER ,
         STATIC_CHART_RATING NUMBER ,
         STATIC_CHART_VALUE NUMBER ,
         DIFF_CHART_TYPE VARCHAR2 (32) ,
         DIFF_CHART_SCALE NUMBER ,
         DIFF_CHART_RATING NUMBER ,
         DIFF_CHART_VALUE NUMBER ,
         TICKET_NO VARCHAR2 (30) ,
         METER_FACTOR_OVERRIDE NUMBER ,
         PRESSURE_FACTOR_OVERRIDE NUMBER ,
         SHRINKAGE_FACTOR_OVERRIDE NUMBER ,
         GRAVITY_FACTOR_OVERRIDE NUMBER ,
         TEMP_FACTOR_OVERRIDE NUMBER ,
         ENERGY_FACTOR_OVERRIDE NUMBER ,
         ENERGY NUMBER ,
         STREAM_QUALITY NUMBER ,
         VALUE_1 NUMBER ,
         VALUE_2 NUMBER ,
         VALUE_3 NUMBER ,
         VALUE_4 NUMBER ,
         VALUE_5 NUMBER ,
         VALUE_6 NUMBER ,
         VALUE_7 NUMBER ,
         VALUE_8 NUMBER ,
         VALUE_9 NUMBER ,
         VALUE_10 NUMBER ,
         TEXT_1 VARCHAR2 (16) ,
         TEXT_2 VARCHAR2 (32) ,
         TEXT_3 VARCHAR2 (240) ,
         TEXT_4 VARCHAR2 (2000) ,
         TEXT_5 VARCHAR2 (240) ,
         TEXT_6 VARCHAR2 (240) ,
         TEXT_7 VARCHAR2 (240) ,
         TEXT_8 VARCHAR2 (240) ,
         TEXT_9 VARCHAR2 (240) ,
         TEXT_10 VARCHAR2 (240) ,
         DATE_1  DATE ,
         DATE_2  DATE ,
         RECORD_STATUS VARCHAR2 (1) ,
         CREATED_BY VARCHAR2 (30) ,
         CREATED_DATE  DATE ,
         LAST_UPDATED_BY VARCHAR2 (30) ,
         LAST_UPDATED_DATE  DATE ,
         REV_NO NUMBER ,
         REV_TEXT VARCHAR2 (2000) ,
         APPROVAL_BY VARCHAR2 (30) ,
         APPROVAL_DATE  DATE ,
         APPROVAL_STATE VARCHAR2 (1) ,
         REC_ID VARCHAR2 (32) ,
         DATE_3  DATE ,
         DATE_4  DATE ,
         DATE_5  DATE  );
   FUNCTION ROW_BY_REL_OPERATOR(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN REC_ROW_BY_REL_OPERATOR;
   FUNCTION STATIC_CHART_TYPE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION STATIC_CHART_VALUE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION TEXT_5(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION VALUE_2(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION VALUE_3(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION VALUE_4(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION DATE_4(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN DATE;
   FUNCTION GRS_MASS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION GRS_VOL(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION MANUAL_ADJ_VOL(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION MATH_CALC_GAS_VOL(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_SALT(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION REC_ID(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION RUN_TEMP(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION TEXT_1(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION TEXT_2(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION TICKET_NO(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION VALUE_7(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION VALUE_9(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION API(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION BS_W(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION BS_W_WT(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION CORR_API(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION DATE_1(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN DATE;
   FUNCTION DIFF_CHART_RATING(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION DIFF_CHART_SCALE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION MATH_AVG_TEMP(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_GRS_OPENING_VOL(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_GRS_VOL(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_NET_VOL(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_STATIC_CHART_SCALE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION MATH_VALUE_10(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER;
   FUNCTION METER_FACTOR_OVERRIDE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION PRESSURE_FACTOR_OVERRIDE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION QUANTITY(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION SALT(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION TEXT_10(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION VALUE_10(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION VALUE_8(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;

END RP_STRM_EVENT;

/



CREATE or REPLACE PACKAGE BODY RP_STRM_EVENT
IS

   FUNCTION AVG_TEMP(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.AVG_TEMP      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END AVG_TEMP;
   FUNCTION DIFF_CHART_TYPE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_STRM_EVENT.DIFF_CHART_TYPE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END DIFF_CHART_TYPE;
   FUNCTION GRS_OPENING_VOL(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.GRS_OPENING_VOL      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END GRS_OPENING_VOL;
   FUNCTION MATH_API(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_API      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_API;
   FUNCTION MATH_DENSITY(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_DENSITY      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_DENSITY;
   FUNCTION MATH_GRS_CLOSING_MASS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_GRS_CLOSING_MASS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_GRS_CLOSING_MASS;
   FUNCTION MATH_STATIC_CHART_RATING(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_STATIC_CHART_RATING      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_STATIC_CHART_RATING;
   FUNCTION MATH_TEMP_FACTOR_OVERRIDE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_TEMP_FACTOR_OVERRIDE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_TEMP_FACTOR_OVERRIDE;
   FUNCTION ORIFICE_PLATE_OVERRIDE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_STRM_EVENT.ORIFICE_PLATE_OVERRIDE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END ORIFICE_PLATE_OVERRIDE;
   FUNCTION RATE_OVERRIDE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.RATE_OVERRIDE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END RATE_OVERRIDE;
   FUNCTION STATIC_CHART_SCALE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.STATIC_CHART_SCALE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END STATIC_CHART_SCALE;
   FUNCTION TEMP_FACTOR_OVERRIDE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.TEMP_FACTOR_OVERRIDE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END TEMP_FACTOR_OVERRIDE;
   FUNCTION TEXT_3(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_STRM_EVENT.TEXT_3      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END TEXT_3;
   FUNCTION TEXT_4(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_STRM_EVENT.TEXT_4      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END TEXT_4;
   FUNCTION APPROVAL_BY(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (30) ;
   BEGIN
      ret_value := EC_STRM_EVENT.APPROVAL_BY      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END APPROVAL_BY;
   FUNCTION APPROVAL_STATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_STRM_EVENT.APPROVAL_STATE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END APPROVAL_STATE;
   FUNCTION DIFF_CHART_VALUE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.DIFF_CHART_VALUE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END DIFF_CHART_VALUE;
   FUNCTION ENERGY(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.ENERGY      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END ENERGY;
   FUNCTION ENERGY_FACTOR_OVERRIDE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.ENERGY_FACTOR_OVERRIDE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END ENERGY_FACTOR_OVERRIDE;
   FUNCTION MATH_CORR_API(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_CORR_API      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_CORR_API;
   FUNCTION MATH_ENERGY(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_ENERGY      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_ENERGY;
   FUNCTION MATH_PRESSURE_FACTOR_OVERRIDE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_PRESSURE_FACTOR_OVERRIDE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_PRESSURE_FACTOR_OVERRIDE;
   FUNCTION MATH_QUANTITY(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_QUANTITY      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_QUANTITY;
   FUNCTION MATH_SHRINKAGE_FACTOR_OVERRIDE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_SHRINKAGE_FACTOR_OVERRIDE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_SHRINKAGE_FACTOR_OVERRIDE;
   FUNCTION MATH_STATIC_CHART_VALUE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_STATIC_CHART_VALUE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_STATIC_CHART_VALUE;
   FUNCTION MATH_STREAM_QUALITY(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_STREAM_QUALITY      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_STREAM_QUALITY;
   FUNCTION MATH_VALUE_3(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_VALUE_3      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_VALUE_3;
   FUNCTION MATH_VALUE_4(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_VALUE_4      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_VALUE_4;
   FUNCTION MATH_VALUE_8(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_VALUE_8      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_VALUE_8;
   FUNCTION VALUE_5(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.VALUE_5      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END VALUE_5;
   FUNCTION MATH_BS_W_WT(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_BS_W_WT      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_BS_W_WT;
   FUNCTION MATH_DIFF_CHART_SCALE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_DIFF_CHART_SCALE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_DIFF_CHART_SCALE;
   FUNCTION MATH_DIFF_CHART_VALUE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_DIFF_CHART_VALUE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_DIFF_CHART_VALUE;
   FUNCTION MATH_GRS_MASS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_GRS_MASS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_GRS_MASS;
   FUNCTION MATH_METER_FACTOR_OVERRIDE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_METER_FACTOR_OVERRIDE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_METER_FACTOR_OVERRIDE;
   FUNCTION MATH_VALUE_6(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_VALUE_6      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_VALUE_6;
   FUNCTION METER_RUN_OVERRIDE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_STRM_EVENT.METER_RUN_OVERRIDE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END METER_RUN_OVERRIDE;
   FUNCTION NET_MASS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.NET_MASS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END NET_MASS;
   FUNCTION NEXT_DAYTIME(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_STRM_EVENT.NEXT_DAYTIME      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_NUM_ROWS );
         RETURN ret_value;
   END NEXT_DAYTIME;
   FUNCTION PREV_EQUAL_DAYTIME(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_STRM_EVENT.PREV_EQUAL_DAYTIME      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_NUM_ROWS );
         RETURN ret_value;
   END PREV_EQUAL_DAYTIME;
   FUNCTION TEXT_7(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_STRM_EVENT.TEXT_7      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END TEXT_7;
   FUNCTION TEXT_8(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_STRM_EVENT.TEXT_8      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END TEXT_8;
   FUNCTION CALC_GAS_VOL(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.CALC_GAS_VOL      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END CALC_GAS_VOL;
   FUNCTION COUNT_ROWS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.COUNT_ROWS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY );
         RETURN ret_value;
   END COUNT_ROWS;
   FUNCTION DATE_3(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_STRM_EVENT.DATE_3      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END DATE_3;
   FUNCTION DATE_5(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_STRM_EVENT.DATE_5      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END DATE_5;
   FUNCTION EVENT_DAY(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_STRM_EVENT.EVENT_DAY      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END EVENT_DAY;
   FUNCTION GRS_CLOSING_VOL(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.GRS_CLOSING_VOL      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END GRS_CLOSING_VOL;
   FUNCTION MATH_BS_W(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_BS_W      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_BS_W;
   FUNCTION MATH_GRAVITY_FACTOR_OVERRIDE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_GRAVITY_FACTOR_OVERRIDE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_GRAVITY_FACTOR_OVERRIDE;
   FUNCTION MATH_GRS_OPENING_MASS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_GRS_OPENING_MASS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_GRS_OPENING_MASS;
   FUNCTION MATH_MANUAL_ADJ_VOL(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_MANUAL_ADJ_VOL      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_MANUAL_ADJ_VOL;
   FUNCTION MATH_VALUE_1(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_VALUE_1      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_VALUE_1;
   FUNCTION MATH_VALUE_5(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_VALUE_5      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_VALUE_5;
   FUNCTION MATH_VALUE_7(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_VALUE_7      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_VALUE_7;
   FUNCTION MATH_VALUE_9(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_VALUE_9      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_VALUE_9;
   FUNCTION NET_VOL(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.NET_VOL      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END NET_VOL;
   FUNCTION NEXT_EQUAL_DAYTIME(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_STRM_EVENT.NEXT_EQUAL_DAYTIME      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_NUM_ROWS );
         RETURN ret_value;
   END NEXT_EQUAL_DAYTIME;
   FUNCTION SHRINKAGE_FACTOR_OVERRIDE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.SHRINKAGE_FACTOR_OVERRIDE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END SHRINKAGE_FACTOR_OVERRIDE;
   FUNCTION STATIC_CHART_RATING(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.STATIC_CHART_RATING      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END STATIC_CHART_RATING;
   FUNCTION TEXT_6(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_STRM_EVENT.TEXT_6      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END TEXT_6;
   FUNCTION TEXT_9(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_STRM_EVENT.TEXT_9      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END TEXT_9;
   FUNCTION VALUE_6(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.VALUE_6      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END VALUE_6;
   FUNCTION VCF(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.VCF      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END VCF;
   FUNCTION DATE_2(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_STRM_EVENT.DATE_2      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END DATE_2;
   FUNCTION END_DATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_STRM_EVENT.END_DATE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END END_DATE;
   FUNCTION GRAVITY_FACTOR_OVERRIDE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.GRAVITY_FACTOR_OVERRIDE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END GRAVITY_FACTOR_OVERRIDE;
   FUNCTION MATH_AVG_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_AVG_PRESS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_AVG_PRESS;
   FUNCTION MATH_DIFF_CHART_RATING(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_DIFF_CHART_RATING      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_DIFF_CHART_RATING;
   FUNCTION MATH_NET_MASS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_NET_MASS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_NET_MASS;
   FUNCTION MATH_RATE_OVERRIDE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_RATE_OVERRIDE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_RATE_OVERRIDE;
   FUNCTION MATH_RUN_TEMP(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_RUN_TEMP      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_RUN_TEMP;
   FUNCTION PREV_DAYTIME(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_STRM_EVENT.PREV_DAYTIME      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_NUM_ROWS );
         RETURN ret_value;
   END PREV_DAYTIME;
   FUNCTION RECORD_STATUS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_STRM_EVENT.RECORD_STATUS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END RECORD_STATUS;
   FUNCTION STREAM_QUALITY(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.STREAM_QUALITY      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END STREAM_QUALITY;
   FUNCTION TANK_OBJECT_ID(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_STRM_EVENT.TANK_OBJECT_ID      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END TANK_OBJECT_ID;
   FUNCTION VALUE_1(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.VALUE_1      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END VALUE_1;
   FUNCTION APPROVAL_DATE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_STRM_EVENT.APPROVAL_DATE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END APPROVAL_DATE;
   FUNCTION AVG_PRESS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.AVG_PRESS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END AVG_PRESS;
   FUNCTION CATEGORY_CODE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_STRM_EVENT.CATEGORY_CODE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END CATEGORY_CODE;
   FUNCTION DENSITY(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.DENSITY      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END DENSITY;
   FUNCTION GRS_CLOSING_MASS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.GRS_CLOSING_MASS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END GRS_CLOSING_MASS;
   FUNCTION GRS_OPENING_MASS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.GRS_OPENING_MASS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END GRS_OPENING_MASS;
   FUNCTION MATH_ENERGY_FACTOR_OVERRIDE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_ENERGY_FACTOR_OVERRIDE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_ENERGY_FACTOR_OVERRIDE;
   FUNCTION MATH_GRS_CLOSING_VOL(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_GRS_CLOSING_VOL      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_GRS_CLOSING_VOL;
   FUNCTION MATH_VALUE_2(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_VALUE_2      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_VALUE_2;
   FUNCTION MATH_VCF(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_VCF      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_VCF;
   FUNCTION ROW_BY_PK(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN REC_ROW_BY_PK
   IS
      ret_value    REC_ROW_BY_PK ;
   BEGIN
      ret_value := EC_STRM_EVENT.ROW_BY_PK      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END ROW_BY_PK;
   FUNCTION ROW_BY_REL_OPERATOR(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN REC_ROW_BY_REL_OPERATOR
   IS
      ret_value    REC_ROW_BY_REL_OPERATOR ;
   BEGIN
      ret_value := EC_STRM_EVENT.ROW_BY_REL_OPERATOR      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END ROW_BY_REL_OPERATOR;
   FUNCTION STATIC_CHART_TYPE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_STRM_EVENT.STATIC_CHART_TYPE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END STATIC_CHART_TYPE;
   FUNCTION STATIC_CHART_VALUE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.STATIC_CHART_VALUE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END STATIC_CHART_VALUE;
   FUNCTION TEXT_5(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_STRM_EVENT.TEXT_5      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END TEXT_5;
   FUNCTION VALUE_2(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.VALUE_2      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END VALUE_2;
   FUNCTION VALUE_3(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.VALUE_3      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END VALUE_3;
   FUNCTION VALUE_4(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.VALUE_4      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END VALUE_4;
   FUNCTION DATE_4(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_STRM_EVENT.DATE_4      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END DATE_4;
   FUNCTION GRS_MASS(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.GRS_MASS      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END GRS_MASS;
   FUNCTION GRS_VOL(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.GRS_VOL      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END GRS_VOL;
   FUNCTION MANUAL_ADJ_VOL(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MANUAL_ADJ_VOL      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END MANUAL_ADJ_VOL;
   FUNCTION MATH_CALC_GAS_VOL(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_CALC_GAS_VOL      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_CALC_GAS_VOL;
   FUNCTION MATH_SALT(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_SALT      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_SALT;
   FUNCTION REC_ID(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_STRM_EVENT.REC_ID      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END REC_ID;
   FUNCTION RUN_TEMP(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.RUN_TEMP      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END RUN_TEMP;
   FUNCTION TEXT_1(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (16) ;
   BEGIN
      ret_value := EC_STRM_EVENT.TEXT_1      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END TEXT_1;
   FUNCTION TEXT_2(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_STRM_EVENT.TEXT_2      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END TEXT_2;
   FUNCTION TICKET_NO(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (30) ;
   BEGIN
      ret_value := EC_STRM_EVENT.TICKET_NO      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END TICKET_NO;
   FUNCTION VALUE_7(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.VALUE_7      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END VALUE_7;
   FUNCTION VALUE_9(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.VALUE_9      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END VALUE_9;
   FUNCTION API(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.API      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END API;
   FUNCTION BS_W(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.BS_W      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END BS_W;
   FUNCTION BS_W_WT(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.BS_W_WT      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END BS_W_WT;
   FUNCTION CORR_API(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.CORR_API      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END CORR_API;
   FUNCTION DATE_1(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_STRM_EVENT.DATE_1      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END DATE_1;
   FUNCTION DIFF_CHART_RATING(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.DIFF_CHART_RATING      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END DIFF_CHART_RATING;
   FUNCTION DIFF_CHART_SCALE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.DIFF_CHART_SCALE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END DIFF_CHART_SCALE;
   FUNCTION MATH_AVG_TEMP(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_AVG_TEMP      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_AVG_TEMP;
   FUNCTION MATH_GRS_OPENING_VOL(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_GRS_OPENING_VOL      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_GRS_OPENING_VOL;
   FUNCTION MATH_GRS_VOL(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_GRS_VOL      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_GRS_VOL;
   FUNCTION MATH_NET_VOL(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_NET_VOL      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_NET_VOL;
   FUNCTION MATH_STATIC_CHART_SCALE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_STATIC_CHART_SCALE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_STATIC_CHART_SCALE;
   FUNCTION MATH_VALUE_10(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_FROM_DAY IN DATE,
      P_TO_DAY IN DATE,
      P_METHOD IN VARCHAR2 DEFAULT 'SUM')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.MATH_VALUE_10      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_FROM_DAY,
         P_TO_DAY,
         P_METHOD );
         RETURN ret_value;
   END MATH_VALUE_10;
   FUNCTION METER_FACTOR_OVERRIDE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.METER_FACTOR_OVERRIDE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END METER_FACTOR_OVERRIDE;
   FUNCTION PRESSURE_FACTOR_OVERRIDE(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.PRESSURE_FACTOR_OVERRIDE      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END PRESSURE_FACTOR_OVERRIDE;
   FUNCTION QUANTITY(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.QUANTITY      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END QUANTITY;
   FUNCTION SALT(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.SALT      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END SALT;
   FUNCTION TEXT_10(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_STRM_EVENT.TEXT_10      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END TEXT_10;
   FUNCTION VALUE_10(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.VALUE_10      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END VALUE_10;
   FUNCTION VALUE_8(
      P_OBJECT_ID IN VARCHAR2,
      P_EVENT_TYPE IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_STRM_EVENT.VALUE_8      (
         P_OBJECT_ID,
         P_EVENT_TYPE,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END VALUE_8;

END RP_STRM_EVENT;

/
--GRANT EXECUTE ON ECKERNEL_WST.RP_STRM_EVENT TO REPORT_ROLE_XXX;



 -- FINISH PKG_GEN_PKGS.sf_get_functions at:11/15/2018 07.41.03 AM


