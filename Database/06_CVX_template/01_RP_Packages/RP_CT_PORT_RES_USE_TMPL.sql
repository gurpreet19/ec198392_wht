
 -- START PKG_GEN_PKGS.sf_get_functions at:11/15/2018 10.16.29 AM


CREATE or REPLACE PACKAGE RP_CT_PORT_RES_USE_TMPL
IS

   FUNCTION DURATION_CODE(
      P_PRODUCT_ID IN VARCHAR2,
      P_LIFTING_EVENT_CODE IN VARCHAR2,
      P_SORT_ORDER IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION APPROVAL_BY(
      P_PRODUCT_ID IN VARCHAR2,
      P_LIFTING_EVENT_CODE IN VARCHAR2,
      P_SORT_ORDER IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION APPROVAL_STATE(
      P_PRODUCT_ID IN VARCHAR2,
      P_LIFTING_EVENT_CODE IN VARCHAR2,
      P_SORT_ORDER IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION PORT_RESOURCE_TYPE(
      P_PRODUCT_ID IN VARCHAR2,
      P_LIFTING_EVENT_CODE IN VARCHAR2,
      P_SORT_ORDER IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION RECORD_STATUS(
      P_PRODUCT_ID IN VARCHAR2,
      P_LIFTING_EVENT_CODE IN VARCHAR2,
      P_SORT_ORDER IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION APPROVAL_DATE(
      P_PRODUCT_ID IN VARCHAR2,
      P_LIFTING_EVENT_CODE IN VARCHAR2,
      P_SORT_ORDER IN NUMBER)
      RETURN DATE;
   FUNCTION PORT_RESOURCE_NAME(
      P_PRODUCT_ID IN VARCHAR2,
      P_LIFTING_EVENT_CODE IN VARCHAR2,
      P_SORT_ORDER IN NUMBER)
      RETURN VARCHAR2;
      TYPE REC_ROW_BY_PK IS RECORD (
         PRODUCT_ID VARCHAR2 (32) ,
         LIFTING_EVENT_CODE VARCHAR2 (32) ,
         PORT_RESOURCE_TYPE VARCHAR2 (24) ,
         PORT_RESOURCE_NAME VARCHAR2 (2000) ,
         TIMELINE_CODE VARCHAR2 (32) ,
         DURATION_CODE VARCHAR2 (32) ,
         SORT_ORDER NUMBER ,
         RECORD_STATUS VARCHAR2 (1) ,
         CREATED_BY VARCHAR2 (30) ,
         CREATED_DATE  DATE ,
         LAST_UPDATED_BY VARCHAR2 (30) ,
         LAST_UPDATED_DATE  DATE ,
         REV_NO NUMBER ,
         REV_TEXT VARCHAR2 (240) ,
         APPROVAL_BY VARCHAR2 (30) ,
         APPROVAL_DATE  DATE ,
         APPROVAL_STATE VARCHAR2 (1) ,
         REC_ID VARCHAR2 (32)  );
   FUNCTION ROW_BY_PK(
      P_PRODUCT_ID IN VARCHAR2,
      P_LIFTING_EVENT_CODE IN VARCHAR2,
      P_SORT_ORDER IN NUMBER)
      RETURN REC_ROW_BY_PK;
   FUNCTION REC_ID(
      P_PRODUCT_ID IN VARCHAR2,
      P_LIFTING_EVENT_CODE IN VARCHAR2,
      P_SORT_ORDER IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION TIMELINE_CODE(
      P_PRODUCT_ID IN VARCHAR2,
      P_LIFTING_EVENT_CODE IN VARCHAR2,
      P_SORT_ORDER IN NUMBER)
      RETURN VARCHAR2;

END RP_CT_PORT_RES_USE_TMPL;

/



CREATE or REPLACE PACKAGE BODY RP_CT_PORT_RES_USE_TMPL
IS

   FUNCTION DURATION_CODE(
      P_PRODUCT_ID IN VARCHAR2,
      P_LIFTING_EVENT_CODE IN VARCHAR2,
      P_SORT_ORDER IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CT_PORT_RES_USE_TMPL.DURATION_CODE      (
         P_PRODUCT_ID,
         P_LIFTING_EVENT_CODE,
         P_SORT_ORDER );
         RETURN ret_value;
   END DURATION_CODE;
   FUNCTION APPROVAL_BY(
      P_PRODUCT_ID IN VARCHAR2,
      P_LIFTING_EVENT_CODE IN VARCHAR2,
      P_SORT_ORDER IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (30) ;
   BEGIN
      ret_value := EC_CT_PORT_RES_USE_TMPL.APPROVAL_BY      (
         P_PRODUCT_ID,
         P_LIFTING_EVENT_CODE,
         P_SORT_ORDER );
         RETURN ret_value;
   END APPROVAL_BY;
   FUNCTION APPROVAL_STATE(
      P_PRODUCT_ID IN VARCHAR2,
      P_LIFTING_EVENT_CODE IN VARCHAR2,
      P_SORT_ORDER IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_CT_PORT_RES_USE_TMPL.APPROVAL_STATE      (
         P_PRODUCT_ID,
         P_LIFTING_EVENT_CODE,
         P_SORT_ORDER );
         RETURN ret_value;
   END APPROVAL_STATE;
   FUNCTION PORT_RESOURCE_TYPE(
      P_PRODUCT_ID IN VARCHAR2,
      P_LIFTING_EVENT_CODE IN VARCHAR2,
      P_SORT_ORDER IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (24) ;
   BEGIN
      ret_value := EC_CT_PORT_RES_USE_TMPL.PORT_RESOURCE_TYPE      (
         P_PRODUCT_ID,
         P_LIFTING_EVENT_CODE,
         P_SORT_ORDER );
         RETURN ret_value;
   END PORT_RESOURCE_TYPE;
   FUNCTION RECORD_STATUS(
      P_PRODUCT_ID IN VARCHAR2,
      P_LIFTING_EVENT_CODE IN VARCHAR2,
      P_SORT_ORDER IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_CT_PORT_RES_USE_TMPL.RECORD_STATUS      (
         P_PRODUCT_ID,
         P_LIFTING_EVENT_CODE,
         P_SORT_ORDER );
         RETURN ret_value;
   END RECORD_STATUS;
   FUNCTION APPROVAL_DATE(
      P_PRODUCT_ID IN VARCHAR2,
      P_LIFTING_EVENT_CODE IN VARCHAR2,
      P_SORT_ORDER IN NUMBER)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CT_PORT_RES_USE_TMPL.APPROVAL_DATE      (
         P_PRODUCT_ID,
         P_LIFTING_EVENT_CODE,
         P_SORT_ORDER );
         RETURN ret_value;
   END APPROVAL_DATE;
   FUNCTION PORT_RESOURCE_NAME(
      P_PRODUCT_ID IN VARCHAR2,
      P_LIFTING_EVENT_CODE IN VARCHAR2,
      P_SORT_ORDER IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_CT_PORT_RES_USE_TMPL.PORT_RESOURCE_NAME      (
         P_PRODUCT_ID,
         P_LIFTING_EVENT_CODE,
         P_SORT_ORDER );
         RETURN ret_value;
   END PORT_RESOURCE_NAME;
   FUNCTION ROW_BY_PK(
      P_PRODUCT_ID IN VARCHAR2,
      P_LIFTING_EVENT_CODE IN VARCHAR2,
      P_SORT_ORDER IN NUMBER)
      RETURN REC_ROW_BY_PK
   IS
      ret_value    REC_ROW_BY_PK ;
   BEGIN
      ret_value := EC_CT_PORT_RES_USE_TMPL.ROW_BY_PK      (
         P_PRODUCT_ID,
         P_LIFTING_EVENT_CODE,
         P_SORT_ORDER );
         RETURN ret_value;
   END ROW_BY_PK;
   FUNCTION REC_ID(
      P_PRODUCT_ID IN VARCHAR2,
      P_LIFTING_EVENT_CODE IN VARCHAR2,
      P_SORT_ORDER IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CT_PORT_RES_USE_TMPL.REC_ID      (
         P_PRODUCT_ID,
         P_LIFTING_EVENT_CODE,
         P_SORT_ORDER );
         RETURN ret_value;
   END REC_ID;
   FUNCTION TIMELINE_CODE(
      P_PRODUCT_ID IN VARCHAR2,
      P_LIFTING_EVENT_CODE IN VARCHAR2,
      P_SORT_ORDER IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CT_PORT_RES_USE_TMPL.TIMELINE_CODE      (
         P_PRODUCT_ID,
         P_LIFTING_EVENT_CODE,
         P_SORT_ORDER );
         RETURN ret_value;
   END TIMELINE_CODE;

END RP_CT_PORT_RES_USE_TMPL;

/
--GRANT EXECUTE ON ECKERNEL_WST.RP_CT_PORT_RES_USE_TMPL TO REPORT_ROLE_XXX;



 -- FINISH PKG_GEN_PKGS.sf_get_functions at:11/15/2018 10.16.32 AM


