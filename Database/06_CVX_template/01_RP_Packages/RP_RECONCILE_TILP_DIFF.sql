
 -- START PKG_GEN_PKGS.sf_get_functions at:11/15/2018 08.06.29 AM


CREATE or REPLACE PACKAGE RP_RECONCILE_TILP_DIFF
IS

   FUNCTION APPROVAL_BY(
      P_RECON_TILP_NO IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION APPROVAL_STATE(
      P_RECON_TILP_NO IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION LINE_TAG(
      P_RECON_TILP_NO IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION RECONCILIATION_NO(
      P_RECON_TILP_NO IN NUMBER)
      RETURN NUMBER;
   FUNCTION TO_NUMBER(
      P_RECON_TILP_NO IN NUMBER)
      RETURN NUMBER;
   FUNCTION COMMENTS(
      P_RECON_TILP_NO IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION PROD_MTH(
      P_RECON_TILP_NO IN NUMBER)
      RETURN DATE;
   FUNCTION DIMENSION2(
      P_RECON_TILP_NO IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION RECON_TIP_NO(
      P_RECON_TILP_NO IN NUMBER)
      RETURN NUMBER;
   FUNCTION RECORD_STATUS(
      P_RECON_TILP_NO IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION APPROVAL_DATE(
      P_RECON_TILP_NO IN NUMBER)
      RETURN DATE;
   FUNCTION DIMENSION1(
      P_RECON_TILP_NO IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION FROM_NUMBER(
      P_RECON_TILP_NO IN NUMBER)
      RETURN NUMBER;
      TYPE REC_ROW_BY_PK IS RECORD (
         RECONCILIATION_NO NUMBER ,
         RECON_TIP_NO NUMBER ,
         RECON_TILP_NO NUMBER ,
         LINE_TAG VARCHAR2 (32) ,
         MAPPING_ID VARCHAR2 (32) ,
         SOURCE_TYPE VARCHAR2 (32) ,
         PROD_MTH  DATE ,
         DIMENSION1 VARCHAR2 (32) ,
         DIMENSION2 VARCHAR2 (32) ,
         FROM_NUMBER NUMBER ,
         TO_NUMBER NUMBER ,
         COMMENTS VARCHAR2 (2000) ,
         RECORD_STATUS VARCHAR2 (1) ,
         CREATED_BY VARCHAR2 (30) ,
         CREATED_DATE  DATE ,
         LAST_UPDATED_BY VARCHAR2 (30) ,
         LAST_UPDATED_DATE  DATE ,
         REV_NO NUMBER ,
         REV_TEXT VARCHAR2 (2000) ,
         APPROVAL_BY VARCHAR2 (30) ,
         APPROVAL_DATE  DATE ,
         APPROVAL_STATE VARCHAR2 (1) ,
         REC_ID VARCHAR2 (32) ,
         LAYER_MONTH  DATE  );
   FUNCTION ROW_BY_PK(
      P_RECON_TILP_NO IN NUMBER)
      RETURN REC_ROW_BY_PK;
   FUNCTION MAPPING_ID(
      P_RECON_TILP_NO IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION REC_ID(
      P_RECON_TILP_NO IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION LAYER_MONTH(
      P_RECON_TILP_NO IN NUMBER)
      RETURN DATE;
   FUNCTION SOURCE_TYPE(
      P_RECON_TILP_NO IN NUMBER)
      RETURN VARCHAR2;

END RP_RECONCILE_TILP_DIFF;

/



CREATE or REPLACE PACKAGE BODY RP_RECONCILE_TILP_DIFF
IS

   FUNCTION APPROVAL_BY(
      P_RECON_TILP_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (30) ;
   BEGIN
      ret_value := EC_RECONCILE_TILP_DIFF.APPROVAL_BY      (
         P_RECON_TILP_NO );
         RETURN ret_value;
   END APPROVAL_BY;
   FUNCTION APPROVAL_STATE(
      P_RECON_TILP_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_RECONCILE_TILP_DIFF.APPROVAL_STATE      (
         P_RECON_TILP_NO );
         RETURN ret_value;
   END APPROVAL_STATE;
   FUNCTION LINE_TAG(
      P_RECON_TILP_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_RECONCILE_TILP_DIFF.LINE_TAG      (
         P_RECON_TILP_NO );
         RETURN ret_value;
   END LINE_TAG;
   FUNCTION RECONCILIATION_NO(
      P_RECON_TILP_NO IN NUMBER)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_RECONCILE_TILP_DIFF.RECONCILIATION_NO      (
         P_RECON_TILP_NO );
         RETURN ret_value;
   END RECONCILIATION_NO;
   FUNCTION TO_NUMBER(
      P_RECON_TILP_NO IN NUMBER)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_RECONCILE_TILP_DIFF.TO_NUMBER      (
         P_RECON_TILP_NO );
         RETURN ret_value;
   END TO_NUMBER;
   FUNCTION COMMENTS(
      P_RECON_TILP_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_RECONCILE_TILP_DIFF.COMMENTS      (
         P_RECON_TILP_NO );
         RETURN ret_value;
   END COMMENTS;
   FUNCTION PROD_MTH(
      P_RECON_TILP_NO IN NUMBER)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_RECONCILE_TILP_DIFF.PROD_MTH      (
         P_RECON_TILP_NO );
         RETURN ret_value;
   END PROD_MTH;
   FUNCTION DIMENSION2(
      P_RECON_TILP_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_RECONCILE_TILP_DIFF.DIMENSION2      (
         P_RECON_TILP_NO );
         RETURN ret_value;
   END DIMENSION2;
   FUNCTION RECON_TIP_NO(
      P_RECON_TILP_NO IN NUMBER)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_RECONCILE_TILP_DIFF.RECON_TIP_NO      (
         P_RECON_TILP_NO );
         RETURN ret_value;
   END RECON_TIP_NO;
   FUNCTION RECORD_STATUS(
      P_RECON_TILP_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_RECONCILE_TILP_DIFF.RECORD_STATUS      (
         P_RECON_TILP_NO );
         RETURN ret_value;
   END RECORD_STATUS;
   FUNCTION APPROVAL_DATE(
      P_RECON_TILP_NO IN NUMBER)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_RECONCILE_TILP_DIFF.APPROVAL_DATE      (
         P_RECON_TILP_NO );
         RETURN ret_value;
   END APPROVAL_DATE;
   FUNCTION DIMENSION1(
      P_RECON_TILP_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_RECONCILE_TILP_DIFF.DIMENSION1      (
         P_RECON_TILP_NO );
         RETURN ret_value;
   END DIMENSION1;
   FUNCTION FROM_NUMBER(
      P_RECON_TILP_NO IN NUMBER)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_RECONCILE_TILP_DIFF.FROM_NUMBER      (
         P_RECON_TILP_NO );
         RETURN ret_value;
   END FROM_NUMBER;
   FUNCTION ROW_BY_PK(
      P_RECON_TILP_NO IN NUMBER)
      RETURN REC_ROW_BY_PK
   IS
      ret_value    REC_ROW_BY_PK ;
   BEGIN
      ret_value := EC_RECONCILE_TILP_DIFF.ROW_BY_PK      (
         P_RECON_TILP_NO );
         RETURN ret_value;
   END ROW_BY_PK;
   FUNCTION MAPPING_ID(
      P_RECON_TILP_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_RECONCILE_TILP_DIFF.MAPPING_ID      (
         P_RECON_TILP_NO );
         RETURN ret_value;
   END MAPPING_ID;
   FUNCTION REC_ID(
      P_RECON_TILP_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_RECONCILE_TILP_DIFF.REC_ID      (
         P_RECON_TILP_NO );
         RETURN ret_value;
   END REC_ID;
   FUNCTION LAYER_MONTH(
      P_RECON_TILP_NO IN NUMBER)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_RECONCILE_TILP_DIFF.LAYER_MONTH      (
         P_RECON_TILP_NO );
         RETURN ret_value;
   END LAYER_MONTH;
   FUNCTION SOURCE_TYPE(
      P_RECON_TILP_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_RECONCILE_TILP_DIFF.SOURCE_TYPE      (
         P_RECON_TILP_NO );
         RETURN ret_value;
   END SOURCE_TYPE;

END RP_RECONCILE_TILP_DIFF;

/
--GRANT EXECUTE ON ECKERNEL_WST.RP_RECONCILE_TILP_DIFF TO REPORT_ROLE_XXX;



 -- FINISH PKG_GEN_PKGS.sf_get_functions at:11/15/2018 08.06.34 AM


