
 -- START PKG_GEN_PKGS.sf_get_functions at:11/16/2018 09.20.54 AM


CREATE or REPLACE PACKAGE RPDP_RR_REVN_SUMMARY
IS

   FUNCTION GETEXTRACTMSG(
      P_SUMMARY_SET IN VARCHAR2,
      P_RECORD_STATUS IN VARCHAR2,
      P_ACCRUAL_IND IN VARCHAR2,
      P_DAYTIME IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION GETLASTSUMMARYDOCKEY(
      P_CONTRACT_ID IN VARCHAR2,
      P_SUMMARY_SETUP_ID IN VARCHAR2,
      P_SUMMARY_YEAR IN DATE,
      P_MONTH IN VARCHAR2,
      P_INVENTORY_ID IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;
   FUNCTION ISSUMMARYVALIDFORCONTRACT(
      P_CONTRACT_ID IN VARCHAR2,
      P_SUMMARY_SETUP_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION GETJOURNALENTRYHISTORY(
      P_JOURNAL_ENTRY_NO IN NUMBER)
      RETURN T_TABLE_JOURNAL_ENTRY_REF_INFO;
   FUNCTION GETLASTSUMMARYDOCSTATUS(
      P_CONTRACT_ID IN VARCHAR2,
      P_SUMMARY_SETUP_ID IN VARCHAR2,
      P_SUMMARY_YEAR IN DATE,
      P_MONTH IN VARCHAR2,
      P_INVENTORY_ID IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;
   FUNCTION ISSUMMARYSETSETUPEXIST(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_SUMMARY_SETUP_ID IN VARCHAR2,
      P_CONTRACT_ID IN VARCHAR2,
      P_INVENTORY_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION TRANSINVPRODSTREAM(
      P_PROD_STREAM_OBJECT_ID IN VARCHAR2,
      P_TRANSACTION_INVENTORY_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN VARCHAR2;
   FUNCTION GETPRESUMMARYDOCKEY(
      P_CONTRACT_ID IN VARCHAR2,
      P_SUMMARY_SETUP_ID IN VARCHAR2,
      P_SUMMARY_YEAR IN DATE,
      P_MONTH IN VARCHAR2,
      P_INVENTORY_ID IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;
   FUNCTION GETPRESUMMARYDOCSTATUS(
      P_CONTRACT_ID IN VARCHAR2,
      P_SUMMARY_SETUP_ID IN VARCHAR2,
      P_SUMMARY_YEAR IN DATE,
      P_MONTH IN VARCHAR2,
      P_INVENTORY_ID IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;
   FUNCTION GETSUMMARYDOCMONTH(
      P_DOC_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION GETLASTAPPSUMMARYDOC(
      P_CONTRACT_ID IN VARCHAR2,
      P_SUMMARY_SETUP_ID IN VARCHAR2,
      P_PERIOD IN DATE,
      P_INVENTORY_ID IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;
   FUNCTION CREATESUMMARYPROCESSLOG(
      P_STATUS IN VARCHAR2,
      P_DESCRIPTION IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VALIDATEMONTH(
      P_MONTH IN VARCHAR2)
      RETURN VARCHAR2;

END RPDP_RR_REVN_SUMMARY;

/



CREATE or REPLACE PACKAGE BODY RPDP_RR_REVN_SUMMARY
IS

   FUNCTION GETEXTRACTMSG(
      P_SUMMARY_SET IN VARCHAR2,
      P_RECORD_STATUS IN VARCHAR2,
      P_ACCRUAL_IND IN VARCHAR2,
      P_DAYTIME IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_RR_REVN_SUMMARY.GETEXTRACTMSG      (
         P_SUMMARY_SET,
         P_RECORD_STATUS,
         P_ACCRUAL_IND,
         P_DAYTIME );
         RETURN ret_value;
   END GETEXTRACTMSG;
   FUNCTION GETLASTSUMMARYDOCKEY(
      P_CONTRACT_ID IN VARCHAR2,
      P_SUMMARY_SETUP_ID IN VARCHAR2,
      P_SUMMARY_YEAR IN DATE,
      P_MONTH IN VARCHAR2,
      P_INVENTORY_ID IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_RR_REVN_SUMMARY.GETLASTSUMMARYDOCKEY      (
         P_CONTRACT_ID,
         P_SUMMARY_SETUP_ID,
         P_SUMMARY_YEAR,
         P_MONTH,
         P_INVENTORY_ID );
         RETURN ret_value;
   END GETLASTSUMMARYDOCKEY;
   FUNCTION ISSUMMARYVALIDFORCONTRACT(
      P_CONTRACT_ID IN VARCHAR2,
      P_SUMMARY_SETUP_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_RR_REVN_SUMMARY.ISSUMMARYVALIDFORCONTRACT      (
         P_CONTRACT_ID,
         P_SUMMARY_SETUP_ID );
         RETURN ret_value;
   END ISSUMMARYVALIDFORCONTRACT;
   FUNCTION GETJOURNALENTRYHISTORY(
      P_JOURNAL_ENTRY_NO IN NUMBER)
      RETURN T_TABLE_JOURNAL_ENTRY_REF_INFO
   IS
      ret_value    T_TABLE_JOURNAL_ENTRY_REF_INFO ;
   BEGIN
      ret_value := ECDP_RR_REVN_SUMMARY.GETJOURNALENTRYHISTORY      (
         P_JOURNAL_ENTRY_NO );
         RETURN ret_value;
   END GETJOURNALENTRYHISTORY;
   FUNCTION GETLASTSUMMARYDOCSTATUS(
      P_CONTRACT_ID IN VARCHAR2,
      P_SUMMARY_SETUP_ID IN VARCHAR2,
      P_SUMMARY_YEAR IN DATE,
      P_MONTH IN VARCHAR2,
      P_INVENTORY_ID IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_RR_REVN_SUMMARY.GETLASTSUMMARYDOCSTATUS      (
         P_CONTRACT_ID,
         P_SUMMARY_SETUP_ID,
         P_SUMMARY_YEAR,
         P_MONTH,
         P_INVENTORY_ID );
         RETURN ret_value;
   END GETLASTSUMMARYDOCSTATUS;
   FUNCTION ISSUMMARYSETSETUPEXIST(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_SUMMARY_SETUP_ID IN VARCHAR2,
      P_CONTRACT_ID IN VARCHAR2,
      P_INVENTORY_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECDP_RR_REVN_SUMMARY.ISSUMMARYSETSETUPEXIST      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_SUMMARY_SETUP_ID,
         P_CONTRACT_ID,
         P_INVENTORY_ID );
         RETURN ret_value;
   END ISSUMMARYSETSETUPEXIST;
   FUNCTION TRANSINVPRODSTREAM(
      P_PROD_STREAM_OBJECT_ID IN VARCHAR2,
      P_TRANSACTION_INVENTORY_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_RR_REVN_SUMMARY.TRANSINVPRODSTREAM      (
         P_PROD_STREAM_OBJECT_ID,
         P_TRANSACTION_INVENTORY_ID,
         P_DAYTIME );
         RETURN ret_value;
   END TRANSINVPRODSTREAM;
   FUNCTION GETPRESUMMARYDOCKEY(
      P_CONTRACT_ID IN VARCHAR2,
      P_SUMMARY_SETUP_ID IN VARCHAR2,
      P_SUMMARY_YEAR IN DATE,
      P_MONTH IN VARCHAR2,
      P_INVENTORY_ID IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_RR_REVN_SUMMARY.GETPRESUMMARYDOCKEY      (
         P_CONTRACT_ID,
         P_SUMMARY_SETUP_ID,
         P_SUMMARY_YEAR,
         P_MONTH,
         P_INVENTORY_ID );
         RETURN ret_value;
   END GETPRESUMMARYDOCKEY;
   FUNCTION GETPRESUMMARYDOCSTATUS(
      P_CONTRACT_ID IN VARCHAR2,
      P_SUMMARY_SETUP_ID IN VARCHAR2,
      P_SUMMARY_YEAR IN DATE,
      P_MONTH IN VARCHAR2,
      P_INVENTORY_ID IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_RR_REVN_SUMMARY.GETPRESUMMARYDOCSTATUS      (
         P_CONTRACT_ID,
         P_SUMMARY_SETUP_ID,
         P_SUMMARY_YEAR,
         P_MONTH,
         P_INVENTORY_ID );
         RETURN ret_value;
   END GETPRESUMMARYDOCSTATUS;
   FUNCTION GETSUMMARYDOCMONTH(
      P_DOC_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_RR_REVN_SUMMARY.GETSUMMARYDOCMONTH      (
         P_DOC_KEY );
         RETURN ret_value;
   END GETSUMMARYDOCMONTH;
   FUNCTION GETLASTAPPSUMMARYDOC(
      P_CONTRACT_ID IN VARCHAR2,
      P_SUMMARY_SETUP_ID IN VARCHAR2,
      P_PERIOD IN DATE,
      P_INVENTORY_ID IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_RR_REVN_SUMMARY.GETLASTAPPSUMMARYDOC      (
         P_CONTRACT_ID,
         P_SUMMARY_SETUP_ID,
         P_PERIOD,
         P_INVENTORY_ID );
         RETURN ret_value;
   END GETLASTAPPSUMMARYDOC;
   FUNCTION CREATESUMMARYPROCESSLOG(
      P_STATUS IN VARCHAR2,
      P_DESCRIPTION IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECDP_RR_REVN_SUMMARY.CREATESUMMARYPROCESSLOG      (
         P_STATUS,
         P_DESCRIPTION );
         RETURN ret_value;
   END CREATESUMMARYPROCESSLOG;
   FUNCTION VALIDATEMONTH(
      P_MONTH IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_RR_REVN_SUMMARY.VALIDATEMONTH      (
         P_MONTH );
         RETURN ret_value;
   END VALIDATEMONTH;

END RPDP_RR_REVN_SUMMARY;

/
--GRANT EXECUTE ON ECKERNEL_WST.RPDP_RR_REVN_SUMMARY TO REPORT_ROLE_XXX;



 -- FINISH PKG_GEN_PKGS.sf_get_functions at:11/16/2018 09.20.57 AM


