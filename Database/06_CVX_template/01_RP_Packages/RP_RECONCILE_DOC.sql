
 -- START PKG_GEN_PKGS.sf_get_functions at:05/07/2019 07.47.57 AM


CREATE or REPLACE PACKAGE RP_RECONCILE_DOC
IS

   FUNCTION RECONCILE_TYPE(
      P_RECONCILIATION_NO IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION APPROVAL_BY(
      P_RECONCILIATION_NO IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION APPROVAL_STATE(
      P_RECONCILIATION_NO IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION STATUS(
      P_RECONCILIATION_NO IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION NEXT_DAYTIME(
      P_RECONCILIATION_NO IN NUMBER,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE;
   FUNCTION PREV_EQUAL_DAYTIME(
      P_RECONCILIATION_NO IN NUMBER,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE;
   FUNCTION COMMENTS(
      P_RECONCILIATION_NO IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION NEXT_EQUAL_DAYTIME(
      P_RECONCILIATION_NO IN NUMBER,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE;
   FUNCTION PROD_STREAM_GROUP(
      P_RECONCILIATION_NO IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION TO_DOC(
      P_RECONCILIATION_NO IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION FROM_DOC(
      P_RECONCILIATION_NO IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION PREV_DAYTIME(
      P_RECONCILIATION_NO IN NUMBER,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE;
   FUNCTION RECORD_STATUS(
      P_RECONCILIATION_NO IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION APPROVAL_DATE(
      P_RECONCILIATION_NO IN NUMBER)
      RETURN DATE;
   FUNCTION COMPARE_TYPE(
      P_RECONCILIATION_NO IN NUMBER)
      RETURN VARCHAR2;
      TYPE REC_ROW_BY_PK IS RECORD (
         RECONCILIATION_NO NUMBER ,
         CODE VARCHAR2 (32) ,
         DAYTIME  DATE ,
         FROM_DOC VARCHAR2 (32) ,
         TO_DOC VARCHAR2 (32) ,
         COMPARE_TYPE VARCHAR2 (32) ,
         RECONCILE_TYPE VARCHAR2 (32) ,
         STATUS VARCHAR2 (32) ,
         COMMENTS VARCHAR2 (2000) ,
         RECORD_STATUS VARCHAR2 (1) ,
         CREATED_BY VARCHAR2 (30) ,
         CREATED_DATE  DATE ,
         LAST_UPDATED_BY VARCHAR2 (30) ,
         LAST_UPDATED_DATE  DATE ,
         REV_NO NUMBER ,
         REV_TEXT VARCHAR2 (2000) ,
         APPROVAL_BY VARCHAR2 (30) ,
         APPROVAL_DATE  DATE ,
         APPROVAL_STATE VARCHAR2 (1) ,
         REC_ID VARCHAR2 (32) ,
         PROD_STREAM_GROUP VARCHAR2 (32)  );
   FUNCTION ROW_BY_PK(
      P_RECONCILIATION_NO IN NUMBER)
      RETURN REC_ROW_BY_PK;
   FUNCTION CODE(
      P_RECONCILIATION_NO IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION REC_ID(
      P_RECONCILIATION_NO IN NUMBER)
      RETURN VARCHAR2;
   FUNCTION DAYTIME(
      P_RECONCILIATION_NO IN NUMBER)
      RETURN DATE;

END RP_RECONCILE_DOC;

/



CREATE or REPLACE PACKAGE BODY RP_RECONCILE_DOC
IS

   FUNCTION RECONCILE_TYPE(
      P_RECONCILIATION_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_RECONCILE_DOC.RECONCILE_TYPE      (
         P_RECONCILIATION_NO );
         RETURN ret_value;
   END RECONCILE_TYPE;
   FUNCTION APPROVAL_BY(
      P_RECONCILIATION_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (30) ;
   BEGIN
      ret_value := EC_RECONCILE_DOC.APPROVAL_BY      (
         P_RECONCILIATION_NO );
         RETURN ret_value;
   END APPROVAL_BY;
   FUNCTION APPROVAL_STATE(
      P_RECONCILIATION_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_RECONCILE_DOC.APPROVAL_STATE      (
         P_RECONCILIATION_NO );
         RETURN ret_value;
   END APPROVAL_STATE;
   FUNCTION STATUS(
      P_RECONCILIATION_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_RECONCILE_DOC.STATUS      (
         P_RECONCILIATION_NO );
         RETURN ret_value;
   END STATUS;
   FUNCTION NEXT_DAYTIME(
      P_RECONCILIATION_NO IN NUMBER,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_RECONCILE_DOC.NEXT_DAYTIME      (
         P_RECONCILIATION_NO,
         P_NUM_ROWS );
         RETURN ret_value;
   END NEXT_DAYTIME;
   FUNCTION PREV_EQUAL_DAYTIME(
      P_RECONCILIATION_NO IN NUMBER,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_RECONCILE_DOC.PREV_EQUAL_DAYTIME      (
         P_RECONCILIATION_NO,
         P_NUM_ROWS );
         RETURN ret_value;
   END PREV_EQUAL_DAYTIME;
   FUNCTION COMMENTS(
      P_RECONCILIATION_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_RECONCILE_DOC.COMMENTS      (
         P_RECONCILIATION_NO );
         RETURN ret_value;
   END COMMENTS;
   FUNCTION NEXT_EQUAL_DAYTIME(
      P_RECONCILIATION_NO IN NUMBER,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_RECONCILE_DOC.NEXT_EQUAL_DAYTIME      (
         P_RECONCILIATION_NO,
         P_NUM_ROWS );
         RETURN ret_value;
   END NEXT_EQUAL_DAYTIME;
   FUNCTION PROD_STREAM_GROUP(
      P_RECONCILIATION_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_RECONCILE_DOC.PROD_STREAM_GROUP      (
         P_RECONCILIATION_NO );
         RETURN ret_value;
   END PROD_STREAM_GROUP;
   FUNCTION TO_DOC(
      P_RECONCILIATION_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_RECONCILE_DOC.TO_DOC      (
         P_RECONCILIATION_NO );
         RETURN ret_value;
   END TO_DOC;
   FUNCTION FROM_DOC(
      P_RECONCILIATION_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_RECONCILE_DOC.FROM_DOC      (
         P_RECONCILIATION_NO );
         RETURN ret_value;
   END FROM_DOC;
   FUNCTION PREV_DAYTIME(
      P_RECONCILIATION_NO IN NUMBER,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_RECONCILE_DOC.PREV_DAYTIME      (
         P_RECONCILIATION_NO,
         P_NUM_ROWS );
         RETURN ret_value;
   END PREV_DAYTIME;
   FUNCTION RECORD_STATUS(
      P_RECONCILIATION_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_RECONCILE_DOC.RECORD_STATUS      (
         P_RECONCILIATION_NO );
         RETURN ret_value;
   END RECORD_STATUS;
   FUNCTION APPROVAL_DATE(
      P_RECONCILIATION_NO IN NUMBER)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_RECONCILE_DOC.APPROVAL_DATE      (
         P_RECONCILIATION_NO );
         RETURN ret_value;
   END APPROVAL_DATE;
   FUNCTION COMPARE_TYPE(
      P_RECONCILIATION_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_RECONCILE_DOC.COMPARE_TYPE      (
         P_RECONCILIATION_NO );
         RETURN ret_value;
   END COMPARE_TYPE;
   FUNCTION ROW_BY_PK(
      P_RECONCILIATION_NO IN NUMBER)
      RETURN REC_ROW_BY_PK
   IS
      ret_value    REC_ROW_BY_PK ;
   BEGIN
      ret_value := EC_RECONCILE_DOC.ROW_BY_PK      (
         P_RECONCILIATION_NO );
         RETURN ret_value;
   END ROW_BY_PK;
   FUNCTION CODE(
      P_RECONCILIATION_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_RECONCILE_DOC.CODE      (
         P_RECONCILIATION_NO );
         RETURN ret_value;
   END CODE;
   FUNCTION REC_ID(
      P_RECONCILIATION_NO IN NUMBER)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_RECONCILE_DOC.REC_ID      (
         P_RECONCILIATION_NO );
         RETURN ret_value;
   END REC_ID;
   FUNCTION DAYTIME(
      P_RECONCILIATION_NO IN NUMBER)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_RECONCILE_DOC.DAYTIME      (
         P_RECONCILIATION_NO );
         RETURN ret_value;
   END DAYTIME;

END RP_RECONCILE_DOC;

/
--GRANT EXECUTE ON ECKERNEL_WST.RP_RECONCILE_DOC TO REPORT_ROLE_XXX;



 -- FINISH PKG_GEN_PKGS.sf_get_functions at:05/07/2019 07.48.04 AM


