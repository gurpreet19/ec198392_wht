
 -- START PKG_GEN_PKGS.sf_get_functions at:11/15/2018 10.12.23 AM


CREATE or REPLACE PACKAGE RP_DATASET_FLOW_DOCUMENT
IS

   FUNCTION COMMENTS(
      P_TYPE IN VARCHAR2,
      P_REFERENCE_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION RECOMMENDED_ACTION(
      P_TYPE IN VARCHAR2,
      P_REFERENCE_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION APPROVAL_BY(
      P_TYPE IN VARCHAR2,
      P_REFERENCE_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION APPROVAL_STATE(
      P_TYPE IN VARCHAR2,
      P_REFERENCE_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION DATASET(
      P_TYPE IN VARCHAR2,
      P_REFERENCE_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION ACCRUAL(
      P_TYPE IN VARCHAR2,
      P_REFERENCE_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION PREV_REF_ID(
      P_TYPE IN VARCHAR2,
      P_REFERENCE_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION STATUS(
      P_TYPE IN VARCHAR2,
      P_REFERENCE_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION MAX_IND(
      P_TYPE IN VARCHAR2,
      P_REFERENCE_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION RECORD_STATUS(
      P_TYPE IN VARCHAR2,
      P_REFERENCE_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION APPROVAL_DATE(
      P_TYPE IN VARCHAR2,
      P_REFERENCE_ID IN VARCHAR2)
      RETURN DATE;
   FUNCTION REPORT_DATE(
      P_TYPE IN VARCHAR2,
      P_REFERENCE_ID IN VARCHAR2)
      RETURN DATE;
      TYPE REC_ROW_BY_PK IS RECORD (
         TYPE VARCHAR2 (32) ,
         PROCESS_DATE  DATE ,
         REPORT_DATE  DATE ,
         OBJECT VARCHAR2 (250) ,
         REFERENCE_ID VARCHAR2 (100) ,
         PREV_REF_ID VARCHAR2 (100) ,
         COMMENTS VARCHAR2 (4000) ,
         STATUS VARCHAR2 (12) ,
         ACCRUAL VARCHAR2 (1) ,
         RECOMMENDED_ACTION VARCHAR2 (32) ,
         MAX_IND VARCHAR2 (1) ,
         AMENDMENT_NUMBER NUMBER ,
         DATASET VARCHAR2 (32) ,
         SCREEN_DOC_TYPE VARCHAR2 (32) ,
         RECORD_STATUS VARCHAR2 (1) ,
         CREATED_BY VARCHAR2 (30) ,
         CREATED_DATE  DATE ,
         LAST_UPDATED_BY VARCHAR2 (30) ,
         LAST_UPDATED_DATE  DATE ,
         REV_NO NUMBER ,
         REV_TEXT VARCHAR2 (2000) ,
         APPROVAL_STATE VARCHAR2 (1) ,
         APPROVAL_BY VARCHAR2 (30) ,
         APPROVAL_DATE  DATE ,
         REC_ID VARCHAR2 (32)  );
   FUNCTION ROW_BY_PK(
      P_TYPE IN VARCHAR2,
      P_REFERENCE_ID IN VARCHAR2)
      RETURN REC_ROW_BY_PK;
   FUNCTION SCREEN_DOC_TYPE(
      P_TYPE IN VARCHAR2,
      P_REFERENCE_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION AMENDMENT_NUMBER(
      P_TYPE IN VARCHAR2,
      P_REFERENCE_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION REC_ID(
      P_TYPE IN VARCHAR2,
      P_REFERENCE_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION OBJECT(
      P_TYPE IN VARCHAR2,
      P_REFERENCE_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION PROCESS_DATE(
      P_TYPE IN VARCHAR2,
      P_REFERENCE_ID IN VARCHAR2)
      RETURN DATE;

END RP_DATASET_FLOW_DOCUMENT;

/



CREATE or REPLACE PACKAGE BODY RP_DATASET_FLOW_DOCUMENT
IS

   FUNCTION COMMENTS(
      P_TYPE IN VARCHAR2,
      P_REFERENCE_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (4000) ;
   BEGIN
      ret_value := EC_DATASET_FLOW_DOCUMENT.COMMENTS      (
         P_TYPE,
         P_REFERENCE_ID );
         RETURN ret_value;
   END COMMENTS;
   FUNCTION RECOMMENDED_ACTION(
      P_TYPE IN VARCHAR2,
      P_REFERENCE_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_DATASET_FLOW_DOCUMENT.RECOMMENDED_ACTION      (
         P_TYPE,
         P_REFERENCE_ID );
         RETURN ret_value;
   END RECOMMENDED_ACTION;
   FUNCTION APPROVAL_BY(
      P_TYPE IN VARCHAR2,
      P_REFERENCE_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (30) ;
   BEGIN
      ret_value := EC_DATASET_FLOW_DOCUMENT.APPROVAL_BY      (
         P_TYPE,
         P_REFERENCE_ID );
         RETURN ret_value;
   END APPROVAL_BY;
   FUNCTION APPROVAL_STATE(
      P_TYPE IN VARCHAR2,
      P_REFERENCE_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_DATASET_FLOW_DOCUMENT.APPROVAL_STATE      (
         P_TYPE,
         P_REFERENCE_ID );
         RETURN ret_value;
   END APPROVAL_STATE;
   FUNCTION DATASET(
      P_TYPE IN VARCHAR2,
      P_REFERENCE_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_DATASET_FLOW_DOCUMENT.DATASET      (
         P_TYPE,
         P_REFERENCE_ID );
         RETURN ret_value;
   END DATASET;
   FUNCTION ACCRUAL(
      P_TYPE IN VARCHAR2,
      P_REFERENCE_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_DATASET_FLOW_DOCUMENT.ACCRUAL      (
         P_TYPE,
         P_REFERENCE_ID );
         RETURN ret_value;
   END ACCRUAL;
   FUNCTION PREV_REF_ID(
      P_TYPE IN VARCHAR2,
      P_REFERENCE_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (100) ;
   BEGIN
      ret_value := EC_DATASET_FLOW_DOCUMENT.PREV_REF_ID      (
         P_TYPE,
         P_REFERENCE_ID );
         RETURN ret_value;
   END PREV_REF_ID;
   FUNCTION STATUS(
      P_TYPE IN VARCHAR2,
      P_REFERENCE_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (12) ;
   BEGIN
      ret_value := EC_DATASET_FLOW_DOCUMENT.STATUS      (
         P_TYPE,
         P_REFERENCE_ID );
         RETURN ret_value;
   END STATUS;
   FUNCTION MAX_IND(
      P_TYPE IN VARCHAR2,
      P_REFERENCE_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_DATASET_FLOW_DOCUMENT.MAX_IND      (
         P_TYPE,
         P_REFERENCE_ID );
         RETURN ret_value;
   END MAX_IND;
   FUNCTION RECORD_STATUS(
      P_TYPE IN VARCHAR2,
      P_REFERENCE_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_DATASET_FLOW_DOCUMENT.RECORD_STATUS      (
         P_TYPE,
         P_REFERENCE_ID );
         RETURN ret_value;
   END RECORD_STATUS;
   FUNCTION APPROVAL_DATE(
      P_TYPE IN VARCHAR2,
      P_REFERENCE_ID IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_DATASET_FLOW_DOCUMENT.APPROVAL_DATE      (
         P_TYPE,
         P_REFERENCE_ID );
         RETURN ret_value;
   END APPROVAL_DATE;
   FUNCTION REPORT_DATE(
      P_TYPE IN VARCHAR2,
      P_REFERENCE_ID IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_DATASET_FLOW_DOCUMENT.REPORT_DATE      (
         P_TYPE,
         P_REFERENCE_ID );
         RETURN ret_value;
   END REPORT_DATE;
   FUNCTION ROW_BY_PK(
      P_TYPE IN VARCHAR2,
      P_REFERENCE_ID IN VARCHAR2)
      RETURN REC_ROW_BY_PK
   IS
      ret_value    REC_ROW_BY_PK ;
   BEGIN
      ret_value := EC_DATASET_FLOW_DOCUMENT.ROW_BY_PK      (
         P_TYPE,
         P_REFERENCE_ID );
         RETURN ret_value;
   END ROW_BY_PK;
   FUNCTION SCREEN_DOC_TYPE(
      P_TYPE IN VARCHAR2,
      P_REFERENCE_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_DATASET_FLOW_DOCUMENT.SCREEN_DOC_TYPE      (
         P_TYPE,
         P_REFERENCE_ID );
         RETURN ret_value;
   END SCREEN_DOC_TYPE;
   FUNCTION AMENDMENT_NUMBER(
      P_TYPE IN VARCHAR2,
      P_REFERENCE_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_DATASET_FLOW_DOCUMENT.AMENDMENT_NUMBER      (
         P_TYPE,
         P_REFERENCE_ID );
         RETURN ret_value;
   END AMENDMENT_NUMBER;
   FUNCTION REC_ID(
      P_TYPE IN VARCHAR2,
      P_REFERENCE_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_DATASET_FLOW_DOCUMENT.REC_ID      (
         P_TYPE,
         P_REFERENCE_ID );
         RETURN ret_value;
   END REC_ID;
   FUNCTION OBJECT(
      P_TYPE IN VARCHAR2,
      P_REFERENCE_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (250) ;
   BEGIN
      ret_value := EC_DATASET_FLOW_DOCUMENT.OBJECT      (
         P_TYPE,
         P_REFERENCE_ID );
         RETURN ret_value;
   END OBJECT;
   FUNCTION PROCESS_DATE(
      P_TYPE IN VARCHAR2,
      P_REFERENCE_ID IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_DATASET_FLOW_DOCUMENT.PROCESS_DATE      (
         P_TYPE,
         P_REFERENCE_ID );
         RETURN ret_value;
   END PROCESS_DATE;

END RP_DATASET_FLOW_DOCUMENT;

/
--GRANT EXECUTE ON ECKERNEL_WST.RP_DATASET_FLOW_DOCUMENT TO REPORT_ROLE_XXX;



 -- FINISH PKG_GEN_PKGS.sf_get_functions at:11/15/2018 10.12.27 AM


