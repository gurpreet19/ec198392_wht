
 -- START PKG_GEN_PKGS.sf_get_functions at:05/07/2019 10.35.11 AM


CREATE or REPLACE PACKAGE RP_CONT_TRANSACTION
IS

   FUNCTION CONTRACT_ACCOUNT(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION DESTINATION_COUNTRY_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION DIST_TYPE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION EX_PRICING_BOOKING_TS(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION EX_PRICING_MEMO(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION OTHER_BOOKING_VALUE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION OTHER_BOOKING_VAT(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION OTHER_PRICING_VALUE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION PARCEL_NO(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION PRICING_BOOKING_LABEL_2(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION QTY_NON_ADJ_VALUE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION SORT_ORDER(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION SUPPLY_TO_DATE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE;
   FUNCTION TEXT_3(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TOT_PRICE_NOT_ROUNDED(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION UOM1_PRINT_DECIMALS(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION UOM2_PRINT_DECIMALS(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION APPROVAL_BY(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION APPROVAL_STATE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION BL_DATE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE;
   FUNCTION CARRIER_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION DESTINATION_COUNTRY_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION DISCHARGE_PORT_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION DIST_OBJECT_TYPE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION DOCUMENT_KEY(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION EX_INV_BOOKING_GROUP(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION EX_PRICING_MEMO_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION IFAC_TT_CONN_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION LOADING_DATE_COMPLETED(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE;
   FUNCTION LOADING_PORT_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION OTHER_MEMO_VALUE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION POSD_BASE_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION PPA_TRANS_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION PRICING_CURRENCY_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION PRODUCT_DESCRIPTION(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION SALES_ORDER(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TRANSACTION_DATE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE;
   FUNCTION TRANSACTION_TYPE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TRANS_GROUP_VALUE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION TRANS_MEMO_TOTAL(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VALUE_5(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VALUE_ADJUSTMENT(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VAT_LEGAL_TEXT(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION WOBBE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION BOOKING_LOCAL_LABEL_2(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION ENTRY_POINT_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION EX_BOOKING_LOCAL_DATE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE;
   FUNCTION EX_BOOKING_LOCAL_TS(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION EX_INV_BOOKING_LOCAL(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION IFAC_UNIQUE_KEY_1(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION IFAC_UNIQUE_KEY_2(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION LOADING_DATE_COMMENCED(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE;
   FUNCTION LOADING_PORT_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION NEXT_DAYTIME(
      P_TRANSACTION_KEY IN VARCHAR2,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE;
   FUNCTION OBJECT_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION ORIGIN_COUNTRY_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION PREV_EQUAL_DAYTIME(
      P_TRANSACTION_KEY IN VARCHAR2,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE;
   FUNCTION PRICE_OBJECT_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION PRICING_BOOKING_LABEL_1(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION PRICING_PERIOD_TO_DATE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE;
   FUNCTION PRODUCT_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION QTY_BOOKING_TOTAL(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION QTY_MEMO_VAT(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION RVP(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION TEXT_7(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TEXT_8(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TRANS_BOOKING_TOTAL(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION TRANS_BOOKING_VALUE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION TRANS_PRICING_VAT(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION TRANS_TEMPLATE_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION VAT_RATE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION BL_DATE_BASE_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION BOOKING_TO_LOCAL_IND(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION COMMENTS(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION DATE_3(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE;
   FUNCTION DATE_5(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE;
   FUNCTION DELIVERY_DATE_COMMENCED(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE;
   FUNCTION DELIVERY_POINT_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION DIST_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION EX_BOOKING_LOCAL_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION EX_INV_PRICING_BOOKING(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION EX_PRICING_BOOKING(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION GCV(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION NEXT_EQUAL_DAYTIME(
      P_TRANSACTION_KEY IN VARCHAR2,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE;
   FUNCTION OTHER_PRICING_TOTAL(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION PARCEL_NAME(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION PRECEDING_TRANS_KEY(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION PRICE_DATE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE;
   FUNCTION PRICING_MEMO_LABEL_2(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION PRICING_TO_BOOKING_IND(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION QTY_BOOKING_VAT(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION QTY_MEMO_VALUE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION REVERSED_TRANS_KEY(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION SOURCE_SPLIT_METHOD(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION SUPPLY_FROM_DATE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE;
   FUNCTION TEXT_1(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TEXT_6(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TEXT_9(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TRANS_LOCAL_TOTAL(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION TRANS_MEMO_VALUE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION UNIT_PRICE_BOOKING(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VALUE_6(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION BOOKING_TO_GROUP_IND(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION CARGO_NO(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION CARRIER_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION CONSIGNOR(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION DATE_2(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE;
   FUNCTION DELIVERY_PLANT_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION DELIVERY_POINT_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION DISCHARGE_PORT_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION DIST_SPLIT_TYPE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION OTHER_BOOKING_TOTAL(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION OTHER_MEMO_VAT(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION OTHER_PRICING_VAT(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION PREV_DAYTIME(
      P_TRANSACTION_KEY IN VARCHAR2,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE;
   FUNCTION PRICE_SRC_TYPE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION QTY_MEMO_TOTAL(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION QTY_PRICING_VAT(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION RECORD_STATUS(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION REVERSAL_IND(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TRANSACTION_SCOPE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TRANS_LOCAL_VAT(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION UOM4_PRINT_DECIMALS(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VALUE_1(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VAT_DESCRIPTION(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION APPROVAL_DATE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE;
   FUNCTION BOOKING_LOCAL_LABEL_1(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION CALC_RUN_NO(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION CARGO_NAME(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION CONTRACT_ACCOUNT_CLASS(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION DESCRIPTION(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION EX_BOOKING_GROUP(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION EX_BOOKING_GROUP_DATE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE;
   FUNCTION EX_BOOKING_GROUP_DBC(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION EX_BOOKING_GROUP_TS(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION EX_BOOKING_LOCAL_DBC(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION EX_PRICING_MEMO_TS(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION NAME(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION OTHER_MEMO_TOTAL(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION PRICING_CURRENCY_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION PRODUCT_NODE_ITEM_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION QTY_PRICING_TOTAL(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION QTY_TYPE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
      TYPE REC_ROW_BY_PK IS RECORD (
         OBJECT_ID VARCHAR2 (32) ,
         DAYTIME  DATE ,
         TRANSACTION_KEY VARCHAR2 (32) ,
         DOCUMENT_KEY VARCHAR2 (32) ,
         TRANS_TEMPLATE_ID VARCHAR2 (32) ,
         PRECEDING_TRANS_KEY VARCHAR2 (32) ,
         REVERSED_TRANS_KEY VARCHAR2 (32) ,
         REVERSAL_IND VARCHAR2 (1) ,
         NAME VARCHAR2 (240) ,
         PRODUCT_ID VARCHAR2 (32) ,
         PRODUCT_CODE VARCHAR2 (32) ,
         PRODUCT_DESCRIPTION VARCHAR2 (240) ,
         STREAM_ITEM_ID VARCHAR2 (32) ,
         PRICE_CONCEPT_CODE VARCHAR2 (32) ,
         PRICE_SRC_TYPE VARCHAR2 (32) ,
         ENTRY_POINT_ID VARCHAR2 (32) ,
         ENTRY_POINT_CODE VARCHAR2 (32) ,
         LOADING_DATE_COMMENCED  DATE ,
         LOADING_DATE_COMPLETED  DATE ,
         LOADING_PORT_CODE VARCHAR2 (32) ,
         LOADING_PORT_ID VARCHAR2 (32) ,
         DELIVERY_POINT_ID VARCHAR2 (32) ,
         DELIVERY_POINT_CODE VARCHAR2 (32) ,
         DELIVERY_PLANT_ID VARCHAR2 (32) ,
         DELIVERY_PLANT_CODE VARCHAR2 (32) ,
         DELIVERY_DATE_COMMENCED  DATE ,
         DELIVERY_DATE_COMPLETED  DATE ,
         DISCHARGE_PORT_CODE VARCHAR2 (32) ,
         DISCHARGE_PORT_ID VARCHAR2 (32) ,
         CONSIGNEE VARCHAR2 (240) ,
         CONSIGNOR VARCHAR2 (240) ,
         DESTINATION_COUNTRY_ID VARCHAR2 (32) ,
         DESTINATION_COUNTRY_CODE VARCHAR2 (32) ,
         VALUE_ADJUSTMENT NUMBER ,
         CARGO_NO NUMBER ,
         PARCEL_NO NUMBER ,
         CARGO_NAME VARCHAR2 (240) ,
         PARCEL_NAME VARCHAR2 (240) ,
         CARRIER_ID VARCHAR2 (32) ,
         CARRIER_CODE VARCHAR2 (32) ,
         QTY_TYPE VARCHAR2 (32) ,
         SALES_ORDER VARCHAR2 (240) ,
         API NUMBER ,
         RVP NUMBER ,
         BS_W NUMBER ,
         SALT NUMBER ,
         GCV NUMBER ,
         WOBBE NUMBER ,
         EX_PRICING_BOOKING NUMBER ,
         EX_PRICING_MEMO NUMBER ,
         EX_INV_PRICING_BOOKING NUMBER ,
         EX_INV_PRICING_MEMO NUMBER ,
         EX_BOOKING_GROUP NUMBER ,
         EX_BOOKING_GROUP_DATE  DATE ,
         EX_BOOKING_GROUP_DBC VARCHAR2 (32) ,
         EX_BOOKING_GROUP_ID VARCHAR2 (32) ,
         BOOKING_TO_GROUP_IND VARCHAR2 (1) ,
         EX_BOOKING_GROUP_TS VARCHAR2 (32) ,
         EX_BOOKING_LOCAL NUMBER ,
         EX_BOOKING_LOCAL_DATE  DATE ,
         EX_BOOKING_LOCAL_ID VARCHAR2 (32) ,
         EX_BOOKING_LOCAL_TS VARCHAR2 (32) ,
         EX_INV_BOOKING_GROUP NUMBER ,
         EX_INV_BOOKING_LOCAL NUMBER ,
         EX_PRICING_BOOKING_DATE  DATE ,
         EX_PRICING_BOOKING_DBC VARCHAR2 (32) ,
         EX_PRICING_BOOKING_ID VARCHAR2 (32) ,
         EX_PRICING_BOOKING_TS VARCHAR2 (32) ,
         EX_PRICING_MEMO_DATE  DATE ,
         EX_PRICING_MEMO_DBC VARCHAR2 (32) ,
         EX_PRICING_MEMO_ID VARCHAR2 (32) ,
         EX_PRICING_MEMO_TS VARCHAR2 (32) ,
         EX_BOOKING_LOCAL_DBC VARCHAR2 (32) ,
         QTY_PRICING_VALUE NUMBER ,
         QTY_PRICING_VAT NUMBER ,
         QTY_PRICING_TOTAL NUMBER ,
         QTY_BOOKING_VALUE NUMBER ,
         QTY_BOOKING_VAT NUMBER ,
         QTY_BOOKING_TOTAL NUMBER ,
         QTY_MEMO_VALUE NUMBER ,
         QTY_MEMO_VAT NUMBER ,
         QTY_MEMO_TOTAL NUMBER ,
         OTHER_PRICING_VALUE NUMBER ,
         OTHER_PRICING_VAT NUMBER ,
         OTHER_PRICING_TOTAL NUMBER ,
         OTHER_BOOKING_VALUE NUMBER ,
         OTHER_BOOKING_VAT NUMBER ,
         OTHER_BOOKING_TOTAL NUMBER ,
         OTHER_MEMO_VALUE NUMBER ,
         OTHER_MEMO_VAT NUMBER ,
         OTHER_MEMO_TOTAL NUMBER ,
         TRANS_PRICING_VALUE NUMBER ,
         TRANS_PRICING_VAT NUMBER ,
         TRANS_PRICING_TOTAL NUMBER ,
         TRANS_BOOKING_VALUE NUMBER ,
         TRANS_BOOKING_VAT NUMBER ,
         TRANS_BOOKING_TOTAL NUMBER ,
         TRANS_MEMO_VALUE NUMBER ,
         TRANS_MEMO_VAT NUMBER ,
         TRANS_MEMO_TOTAL NUMBER ,
         TRANS_GROUP_TOTAL NUMBER ,
         TRANS_GROUP_VALUE NUMBER ,
         TRANS_GROUP_VAT NUMBER ,
         TRANS_LOCAL_TOTAL NUMBER ,
         TRANS_LOCAL_VALUE NUMBER ,
         TRANS_LOCAL_VAT NUMBER ,
         UNIT_PRICE_BOOKING NUMBER ,
         SUPPLY_FROM_DATE  DATE ,
         SUPPLY_TO_DATE  DATE ,
         BL_DATE  DATE ,
         BL_DATE_BASE_CODE VARCHAR2 (32) ,
         PRICE_DATE  DATE ,
         PRICE_DATE_BASE_CODE VARCHAR2 (32) ,
         PRICE_OBJECT_ID VARCHAR2 (32) ,
         VAT_CODE VARCHAR2 (32) ,
         VAT_RATE NUMBER ,
         VAT_DESCRIPTION VARCHAR2 (240) ,
         VAT_LEGAL_TEXT VARCHAR2 (2000) ,
         QTY_NON_ADJ_VALUE NUMBER ,
         TRANSACTION_DATE  DATE ,
         TRANSACTION_TYPE VARCHAR2 (32) ,
         DIST_SPLIT_TYPE VARCHAR2 (32) ,
         PRODUCT_NODE_ITEM_ID VARCHAR2 (32) ,
         PRICING_PERIOD_FROM_DATE  DATE ,
         PRICING_PERIOD_TO_DATE  DATE ,
         CONTRACT_DATE  DATE ,
         CNTR_DURATION_FROM_DATE  DATE ,
         CNTR_DURATION_TO_DATE  DATE ,
         TRANSACTION_SCOPE VARCHAR2 (32) ,
         POSD_BASE_CODE VARCHAR2 (32) ,
         PRICING_CURRENCY_CODE VARCHAR2 (32) ,
         PRICING_CURRENCY_ID VARCHAR2 (32) ,
         SPLIT_METHOD VARCHAR2 (32) ,
         SOURCE_SPLIT_METHOD VARCHAR2 (32) ,
         UOM1_PRINT_DECIMALS NUMBER ,
         UOM2_PRINT_DECIMALS NUMBER ,
         UOM3_PRINT_DECIMALS NUMBER ,
         UOM4_PRINT_DECIMALS NUMBER ,
         BOOKING_TO_LOCAL_IND VARCHAR2 (1) ,
         IFAC_UNIQUE_KEY_1 VARCHAR2 (240) ,
         IFAC_UNIQUE_KEY_2 VARCHAR2 (240) ,
         PRICING_TO_BOOKING_IND VARCHAR2 (1) ,
         PRICING_TO_MEMO_IND VARCHAR2 (1) ,
         IFAC_TT_CONN_CODE VARCHAR2 (32) ,
         SORT_ORDER NUMBER ,
         PPA_TRANS_CODE VARCHAR2 (32) ,
         ORIGIN_COUNTRY_ID VARCHAR2 (32) ,
         ORIGIN_COUNTRY_CODE VARCHAR2 (32) ,
         DIST_CODE VARCHAR2 (240) ,
         DIST_OBJECT_TYPE VARCHAR2 (32) ,
         DIST_TYPE VARCHAR2 (32) ,
         DESCRIPTION VARCHAR2 (240) ,
         COMMENTS VARCHAR2 (2000) ,
         PRICING_BOOKING_LABEL_1 VARCHAR2 (240) ,
         PRICING_MEMO_LABEL_1 VARCHAR2 (240) ,
         BOOKING_LOCAL_LABEL_1 VARCHAR2 (240) ,
         BOOKING_GROUP_LABEL_1 VARCHAR2 (240) ,
         PRICING_BOOKING_LABEL_2 VARCHAR2 (240) ,
         PRICING_MEMO_LABEL_2 VARCHAR2 (240) ,
         BOOKING_LOCAL_LABEL_2 VARCHAR2 (240) ,
         BOOKING_GROUP_LABEL_2 VARCHAR2 (240) ,
         VALUE_1 NUMBER ,
         VALUE_2 NUMBER ,
         VALUE_3 NUMBER ,
         VALUE_4 NUMBER ,
         VALUE_5 NUMBER ,
         VALUE_6 NUMBER ,
         VALUE_7 NUMBER ,
         VALUE_8 NUMBER ,
         VALUE_9 NUMBER ,
         VALUE_10 NUMBER ,
         TEXT_1 VARCHAR2 (240) ,
         TEXT_2 VARCHAR2 (240) ,
         TEXT_3 VARCHAR2 (240) ,
         TEXT_4 VARCHAR2 (240) ,
         TEXT_5 VARCHAR2 (240) ,
         TEXT_6 VARCHAR2 (240) ,
         TEXT_7 VARCHAR2 (240) ,
         TEXT_8 VARCHAR2 (240) ,
         TEXT_9 VARCHAR2 (240) ,
         TEXT_10 VARCHAR2 (240) ,
         DATE_1  DATE ,
         DATE_2  DATE ,
         DATE_3  DATE ,
         DATE_4  DATE ,
         DATE_5  DATE ,
         CALC_RUN_NO NUMBER ,
         CONTRACT_ACCOUNT_CLASS VARCHAR2 (240) ,
         CONTRACT_ACCOUNT VARCHAR2 (240) ,
         TOT_PRICE_NOT_ROUNDED NUMBER ,
         RECORD_STATUS VARCHAR2 (1) ,
         CREATED_BY VARCHAR2 (30) ,
         CREATED_DATE  DATE ,
         LAST_UPDATED_BY VARCHAR2 (30) ,
         LAST_UPDATED_DATE  DATE ,
         REV_NO NUMBER ,
         REV_TEXT VARCHAR2 (2000) ,
         APPROVAL_BY VARCHAR2 (30) ,
         APPROVAL_DATE  DATE ,
         APPROVAL_STATE VARCHAR2 (1) ,
         REC_ID VARCHAR2 (32)  );
   FUNCTION ROW_BY_PK(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN REC_ROW_BY_PK;
   FUNCTION TEXT_2(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TEXT_4(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TEXT_5(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TRANS_PRICING_TOTAL(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VALUE_2(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VALUE_3(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VALUE_4(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION CNTR_DURATION_FROM_DATE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE;
   FUNCTION CONSIGNEE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION DATE_4(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE;
   FUNCTION EX_BOOKING_GROUP_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION EX_INV_PRICING_MEMO(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION EX_PRICING_BOOKING_DBC(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION EX_PRICING_BOOKING_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION PRICE_DATE_BASE_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION PRICING_PERIOD_FROM_DATE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE;
   FUNCTION PRODUCT_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION QTY_PRICING_VALUE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION REC_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION SPLIT_METHOD(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TRANS_BOOKING_VAT(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION TRANS_GROUP_TOTAL(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION TRANS_LOCAL_VALUE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION TRANS_PRICING_VALUE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VALUE_7(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VALUE_9(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION API(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION BOOKING_GROUP_LABEL_1(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION BOOKING_GROUP_LABEL_2(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION BS_W(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION CNTR_DURATION_TO_DATE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE;
   FUNCTION CONTRACT_DATE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE;
   FUNCTION DATE_1(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE;
   FUNCTION DAYTIME(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE;
   FUNCTION DELIVERY_DATE_COMPLETED(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE;
   FUNCTION DELIVERY_PLANT_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION ENTRY_POINT_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION EX_BOOKING_LOCAL(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION EX_PRICING_BOOKING_DATE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE;
   FUNCTION EX_PRICING_MEMO_DATE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE;
   FUNCTION EX_PRICING_MEMO_DBC(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION ORIGIN_COUNTRY_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION PRICE_CONCEPT_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION PRICING_MEMO_LABEL_1(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION PRICING_TO_MEMO_IND(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION QTY_BOOKING_VALUE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION SALT(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION STREAM_ITEM_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TEXT_10(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION TRANS_GROUP_VAT(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION TRANS_MEMO_VAT(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION UOM3_PRINT_DECIMALS(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VALUE_10(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VALUE_8(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION VAT_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2;

END RP_CONT_TRANSACTION;

/



CREATE or REPLACE PACKAGE BODY RP_CONT_TRANSACTION
IS

   FUNCTION CONTRACT_ACCOUNT(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.CONTRACT_ACCOUNT      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END CONTRACT_ACCOUNT;
   FUNCTION DESTINATION_COUNTRY_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.DESTINATION_COUNTRY_ID      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END DESTINATION_COUNTRY_ID;
   FUNCTION DIST_TYPE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.DIST_TYPE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END DIST_TYPE;
   FUNCTION EX_PRICING_BOOKING_TS(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.EX_PRICING_BOOKING_TS      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END EX_PRICING_BOOKING_TS;
   FUNCTION EX_PRICING_MEMO(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.EX_PRICING_MEMO      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END EX_PRICING_MEMO;
   FUNCTION OTHER_BOOKING_VALUE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.OTHER_BOOKING_VALUE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END OTHER_BOOKING_VALUE;
   FUNCTION OTHER_BOOKING_VAT(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.OTHER_BOOKING_VAT      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END OTHER_BOOKING_VAT;
   FUNCTION OTHER_PRICING_VALUE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.OTHER_PRICING_VALUE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END OTHER_PRICING_VALUE;
   FUNCTION PARCEL_NO(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.PARCEL_NO      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END PARCEL_NO;
   FUNCTION PRICING_BOOKING_LABEL_2(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.PRICING_BOOKING_LABEL_2      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END PRICING_BOOKING_LABEL_2;
   FUNCTION QTY_NON_ADJ_VALUE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.QTY_NON_ADJ_VALUE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END QTY_NON_ADJ_VALUE;
   FUNCTION SORT_ORDER(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.SORT_ORDER      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END SORT_ORDER;
   FUNCTION SUPPLY_TO_DATE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.SUPPLY_TO_DATE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END SUPPLY_TO_DATE;
   FUNCTION TEXT_3(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.TEXT_3      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END TEXT_3;
   FUNCTION TOT_PRICE_NOT_ROUNDED(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.TOT_PRICE_NOT_ROUNDED      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END TOT_PRICE_NOT_ROUNDED;
   FUNCTION UOM1_PRINT_DECIMALS(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.UOM1_PRINT_DECIMALS      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END UOM1_PRINT_DECIMALS;
   FUNCTION UOM2_PRINT_DECIMALS(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.UOM2_PRINT_DECIMALS      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END UOM2_PRINT_DECIMALS;
   FUNCTION APPROVAL_BY(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (30) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.APPROVAL_BY      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END APPROVAL_BY;
   FUNCTION APPROVAL_STATE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.APPROVAL_STATE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END APPROVAL_STATE;
   FUNCTION BL_DATE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.BL_DATE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END BL_DATE;
   FUNCTION CARRIER_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.CARRIER_ID      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END CARRIER_ID;
   FUNCTION DESTINATION_COUNTRY_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.DESTINATION_COUNTRY_CODE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END DESTINATION_COUNTRY_CODE;
   FUNCTION DISCHARGE_PORT_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.DISCHARGE_PORT_ID      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END DISCHARGE_PORT_ID;
   FUNCTION DIST_OBJECT_TYPE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.DIST_OBJECT_TYPE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END DIST_OBJECT_TYPE;
   FUNCTION DOCUMENT_KEY(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.DOCUMENT_KEY      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END DOCUMENT_KEY;
   FUNCTION EX_INV_BOOKING_GROUP(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.EX_INV_BOOKING_GROUP      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END EX_INV_BOOKING_GROUP;
   FUNCTION EX_PRICING_MEMO_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.EX_PRICING_MEMO_ID      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END EX_PRICING_MEMO_ID;
   FUNCTION IFAC_TT_CONN_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.IFAC_TT_CONN_CODE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END IFAC_TT_CONN_CODE;
   FUNCTION LOADING_DATE_COMPLETED(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.LOADING_DATE_COMPLETED      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END LOADING_DATE_COMPLETED;
   FUNCTION LOADING_PORT_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.LOADING_PORT_ID      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END LOADING_PORT_ID;
   FUNCTION OTHER_MEMO_VALUE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.OTHER_MEMO_VALUE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END OTHER_MEMO_VALUE;
   FUNCTION POSD_BASE_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.POSD_BASE_CODE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END POSD_BASE_CODE;
   FUNCTION PPA_TRANS_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.PPA_TRANS_CODE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END PPA_TRANS_CODE;
   FUNCTION PRICING_CURRENCY_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.PRICING_CURRENCY_ID      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END PRICING_CURRENCY_ID;
   FUNCTION PRODUCT_DESCRIPTION(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.PRODUCT_DESCRIPTION      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END PRODUCT_DESCRIPTION;
   FUNCTION SALES_ORDER(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.SALES_ORDER      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END SALES_ORDER;
   FUNCTION TRANSACTION_DATE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.TRANSACTION_DATE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END TRANSACTION_DATE;
   FUNCTION TRANSACTION_TYPE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.TRANSACTION_TYPE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END TRANSACTION_TYPE;
   FUNCTION TRANS_GROUP_VALUE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.TRANS_GROUP_VALUE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END TRANS_GROUP_VALUE;
   FUNCTION TRANS_MEMO_TOTAL(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.TRANS_MEMO_TOTAL      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END TRANS_MEMO_TOTAL;
   FUNCTION VALUE_5(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.VALUE_5      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END VALUE_5;
   FUNCTION VALUE_ADJUSTMENT(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.VALUE_ADJUSTMENT      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END VALUE_ADJUSTMENT;
   FUNCTION VAT_LEGAL_TEXT(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.VAT_LEGAL_TEXT      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END VAT_LEGAL_TEXT;
   FUNCTION WOBBE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.WOBBE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END WOBBE;
   FUNCTION BOOKING_LOCAL_LABEL_2(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.BOOKING_LOCAL_LABEL_2      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END BOOKING_LOCAL_LABEL_2;
   FUNCTION ENTRY_POINT_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.ENTRY_POINT_CODE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END ENTRY_POINT_CODE;
   FUNCTION EX_BOOKING_LOCAL_DATE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.EX_BOOKING_LOCAL_DATE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END EX_BOOKING_LOCAL_DATE;
   FUNCTION EX_BOOKING_LOCAL_TS(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.EX_BOOKING_LOCAL_TS      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END EX_BOOKING_LOCAL_TS;
   FUNCTION EX_INV_BOOKING_LOCAL(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.EX_INV_BOOKING_LOCAL      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END EX_INV_BOOKING_LOCAL;
   FUNCTION IFAC_UNIQUE_KEY_1(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.IFAC_UNIQUE_KEY_1      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END IFAC_UNIQUE_KEY_1;
   FUNCTION IFAC_UNIQUE_KEY_2(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.IFAC_UNIQUE_KEY_2      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END IFAC_UNIQUE_KEY_2;
   FUNCTION LOADING_DATE_COMMENCED(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.LOADING_DATE_COMMENCED      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END LOADING_DATE_COMMENCED;
   FUNCTION LOADING_PORT_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.LOADING_PORT_CODE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END LOADING_PORT_CODE;
   FUNCTION NEXT_DAYTIME(
      P_TRANSACTION_KEY IN VARCHAR2,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.NEXT_DAYTIME      (
         P_TRANSACTION_KEY,
         P_NUM_ROWS );
         RETURN ret_value;
   END NEXT_DAYTIME;
   FUNCTION OBJECT_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.OBJECT_ID      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END OBJECT_ID;
   FUNCTION ORIGIN_COUNTRY_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.ORIGIN_COUNTRY_ID      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END ORIGIN_COUNTRY_ID;
   FUNCTION PREV_EQUAL_DAYTIME(
      P_TRANSACTION_KEY IN VARCHAR2,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.PREV_EQUAL_DAYTIME      (
         P_TRANSACTION_KEY,
         P_NUM_ROWS );
         RETURN ret_value;
   END PREV_EQUAL_DAYTIME;
   FUNCTION PRICE_OBJECT_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.PRICE_OBJECT_ID      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END PRICE_OBJECT_ID;
   FUNCTION PRICING_BOOKING_LABEL_1(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.PRICING_BOOKING_LABEL_1      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END PRICING_BOOKING_LABEL_1;
   FUNCTION PRICING_PERIOD_TO_DATE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.PRICING_PERIOD_TO_DATE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END PRICING_PERIOD_TO_DATE;
   FUNCTION PRODUCT_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.PRODUCT_ID      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END PRODUCT_ID;
   FUNCTION QTY_BOOKING_TOTAL(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.QTY_BOOKING_TOTAL      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END QTY_BOOKING_TOTAL;
   FUNCTION QTY_MEMO_VAT(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.QTY_MEMO_VAT      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END QTY_MEMO_VAT;
   FUNCTION RVP(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.RVP      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END RVP;
   FUNCTION TEXT_7(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.TEXT_7      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END TEXT_7;
   FUNCTION TEXT_8(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.TEXT_8      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END TEXT_8;
   FUNCTION TRANS_BOOKING_TOTAL(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.TRANS_BOOKING_TOTAL      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END TRANS_BOOKING_TOTAL;
   FUNCTION TRANS_BOOKING_VALUE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.TRANS_BOOKING_VALUE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END TRANS_BOOKING_VALUE;
   FUNCTION TRANS_PRICING_VAT(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.TRANS_PRICING_VAT      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END TRANS_PRICING_VAT;
   FUNCTION TRANS_TEMPLATE_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.TRANS_TEMPLATE_ID      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END TRANS_TEMPLATE_ID;
   FUNCTION VAT_RATE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.VAT_RATE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END VAT_RATE;
   FUNCTION BL_DATE_BASE_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.BL_DATE_BASE_CODE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END BL_DATE_BASE_CODE;
   FUNCTION BOOKING_TO_LOCAL_IND(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.BOOKING_TO_LOCAL_IND      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END BOOKING_TO_LOCAL_IND;
   FUNCTION COMMENTS(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.COMMENTS      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END COMMENTS;
   FUNCTION DATE_3(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.DATE_3      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END DATE_3;
   FUNCTION DATE_5(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.DATE_5      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END DATE_5;
   FUNCTION DELIVERY_DATE_COMMENCED(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.DELIVERY_DATE_COMMENCED      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END DELIVERY_DATE_COMMENCED;
   FUNCTION DELIVERY_POINT_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.DELIVERY_POINT_CODE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END DELIVERY_POINT_CODE;
   FUNCTION DIST_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.DIST_CODE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END DIST_CODE;
   FUNCTION EX_BOOKING_LOCAL_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.EX_BOOKING_LOCAL_ID      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END EX_BOOKING_LOCAL_ID;
   FUNCTION EX_INV_PRICING_BOOKING(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.EX_INV_PRICING_BOOKING      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END EX_INV_PRICING_BOOKING;
   FUNCTION EX_PRICING_BOOKING(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.EX_PRICING_BOOKING      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END EX_PRICING_BOOKING;
   FUNCTION GCV(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.GCV      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END GCV;
   FUNCTION NEXT_EQUAL_DAYTIME(
      P_TRANSACTION_KEY IN VARCHAR2,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.NEXT_EQUAL_DAYTIME      (
         P_TRANSACTION_KEY,
         P_NUM_ROWS );
         RETURN ret_value;
   END NEXT_EQUAL_DAYTIME;
   FUNCTION OTHER_PRICING_TOTAL(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.OTHER_PRICING_TOTAL      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END OTHER_PRICING_TOTAL;
   FUNCTION PARCEL_NAME(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.PARCEL_NAME      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END PARCEL_NAME;
   FUNCTION PRECEDING_TRANS_KEY(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.PRECEDING_TRANS_KEY      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END PRECEDING_TRANS_KEY;
   FUNCTION PRICE_DATE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.PRICE_DATE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END PRICE_DATE;
   FUNCTION PRICING_MEMO_LABEL_2(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.PRICING_MEMO_LABEL_2      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END PRICING_MEMO_LABEL_2;
   FUNCTION PRICING_TO_BOOKING_IND(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.PRICING_TO_BOOKING_IND      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END PRICING_TO_BOOKING_IND;
   FUNCTION QTY_BOOKING_VAT(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.QTY_BOOKING_VAT      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END QTY_BOOKING_VAT;
   FUNCTION QTY_MEMO_VALUE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.QTY_MEMO_VALUE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END QTY_MEMO_VALUE;
   FUNCTION REVERSED_TRANS_KEY(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.REVERSED_TRANS_KEY      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END REVERSED_TRANS_KEY;
   FUNCTION SOURCE_SPLIT_METHOD(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.SOURCE_SPLIT_METHOD      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END SOURCE_SPLIT_METHOD;
   FUNCTION SUPPLY_FROM_DATE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.SUPPLY_FROM_DATE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END SUPPLY_FROM_DATE;
   FUNCTION TEXT_1(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.TEXT_1      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END TEXT_1;
   FUNCTION TEXT_6(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.TEXT_6      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END TEXT_6;
   FUNCTION TEXT_9(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.TEXT_9      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END TEXT_9;
   FUNCTION TRANS_LOCAL_TOTAL(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.TRANS_LOCAL_TOTAL      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END TRANS_LOCAL_TOTAL;
   FUNCTION TRANS_MEMO_VALUE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.TRANS_MEMO_VALUE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END TRANS_MEMO_VALUE;
   FUNCTION UNIT_PRICE_BOOKING(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.UNIT_PRICE_BOOKING      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END UNIT_PRICE_BOOKING;
   FUNCTION VALUE_6(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.VALUE_6      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END VALUE_6;
   FUNCTION BOOKING_TO_GROUP_IND(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.BOOKING_TO_GROUP_IND      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END BOOKING_TO_GROUP_IND;
   FUNCTION CARGO_NO(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.CARGO_NO      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END CARGO_NO;
   FUNCTION CARRIER_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.CARRIER_CODE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END CARRIER_CODE;
   FUNCTION CONSIGNOR(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.CONSIGNOR      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END CONSIGNOR;
   FUNCTION DATE_2(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.DATE_2      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END DATE_2;
   FUNCTION DELIVERY_PLANT_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.DELIVERY_PLANT_CODE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END DELIVERY_PLANT_CODE;
   FUNCTION DELIVERY_POINT_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.DELIVERY_POINT_ID      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END DELIVERY_POINT_ID;
   FUNCTION DISCHARGE_PORT_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.DISCHARGE_PORT_CODE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END DISCHARGE_PORT_CODE;
   FUNCTION DIST_SPLIT_TYPE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.DIST_SPLIT_TYPE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END DIST_SPLIT_TYPE;
   FUNCTION OTHER_BOOKING_TOTAL(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.OTHER_BOOKING_TOTAL      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END OTHER_BOOKING_TOTAL;
   FUNCTION OTHER_MEMO_VAT(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.OTHER_MEMO_VAT      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END OTHER_MEMO_VAT;
   FUNCTION OTHER_PRICING_VAT(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.OTHER_PRICING_VAT      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END OTHER_PRICING_VAT;
   FUNCTION PREV_DAYTIME(
      P_TRANSACTION_KEY IN VARCHAR2,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.PREV_DAYTIME      (
         P_TRANSACTION_KEY,
         P_NUM_ROWS );
         RETURN ret_value;
   END PREV_DAYTIME;
   FUNCTION PRICE_SRC_TYPE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.PRICE_SRC_TYPE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END PRICE_SRC_TYPE;
   FUNCTION QTY_MEMO_TOTAL(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.QTY_MEMO_TOTAL      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END QTY_MEMO_TOTAL;
   FUNCTION QTY_PRICING_VAT(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.QTY_PRICING_VAT      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END QTY_PRICING_VAT;
   FUNCTION RECORD_STATUS(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.RECORD_STATUS      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END RECORD_STATUS;
   FUNCTION REVERSAL_IND(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.REVERSAL_IND      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END REVERSAL_IND;
   FUNCTION TRANSACTION_SCOPE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.TRANSACTION_SCOPE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END TRANSACTION_SCOPE;
   FUNCTION TRANS_LOCAL_VAT(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.TRANS_LOCAL_VAT      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END TRANS_LOCAL_VAT;
   FUNCTION UOM4_PRINT_DECIMALS(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.UOM4_PRINT_DECIMALS      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END UOM4_PRINT_DECIMALS;
   FUNCTION VALUE_1(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.VALUE_1      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END VALUE_1;
   FUNCTION VAT_DESCRIPTION(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.VAT_DESCRIPTION      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END VAT_DESCRIPTION;
   FUNCTION APPROVAL_DATE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.APPROVAL_DATE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END APPROVAL_DATE;
   FUNCTION BOOKING_LOCAL_LABEL_1(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.BOOKING_LOCAL_LABEL_1      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END BOOKING_LOCAL_LABEL_1;
   FUNCTION CALC_RUN_NO(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.CALC_RUN_NO      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END CALC_RUN_NO;
   FUNCTION CARGO_NAME(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.CARGO_NAME      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END CARGO_NAME;
   FUNCTION CONTRACT_ACCOUNT_CLASS(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.CONTRACT_ACCOUNT_CLASS      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END CONTRACT_ACCOUNT_CLASS;
   FUNCTION DESCRIPTION(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.DESCRIPTION      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END DESCRIPTION;
   FUNCTION EX_BOOKING_GROUP(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.EX_BOOKING_GROUP      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END EX_BOOKING_GROUP;
   FUNCTION EX_BOOKING_GROUP_DATE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.EX_BOOKING_GROUP_DATE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END EX_BOOKING_GROUP_DATE;
   FUNCTION EX_BOOKING_GROUP_DBC(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.EX_BOOKING_GROUP_DBC      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END EX_BOOKING_GROUP_DBC;
   FUNCTION EX_BOOKING_GROUP_TS(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.EX_BOOKING_GROUP_TS      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END EX_BOOKING_GROUP_TS;
   FUNCTION EX_BOOKING_LOCAL_DBC(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.EX_BOOKING_LOCAL_DBC      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END EX_BOOKING_LOCAL_DBC;
   FUNCTION EX_PRICING_MEMO_TS(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.EX_PRICING_MEMO_TS      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END EX_PRICING_MEMO_TS;
   FUNCTION NAME(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.NAME      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END NAME;
   FUNCTION OTHER_MEMO_TOTAL(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.OTHER_MEMO_TOTAL      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END OTHER_MEMO_TOTAL;
   FUNCTION PRICING_CURRENCY_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.PRICING_CURRENCY_CODE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END PRICING_CURRENCY_CODE;
   FUNCTION PRODUCT_NODE_ITEM_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.PRODUCT_NODE_ITEM_ID      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END PRODUCT_NODE_ITEM_ID;
   FUNCTION QTY_PRICING_TOTAL(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.QTY_PRICING_TOTAL      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END QTY_PRICING_TOTAL;
   FUNCTION QTY_TYPE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.QTY_TYPE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END QTY_TYPE;
   FUNCTION ROW_BY_PK(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN REC_ROW_BY_PK
   IS
      ret_value    REC_ROW_BY_PK ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.ROW_BY_PK      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END ROW_BY_PK;
   FUNCTION TEXT_2(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.TEXT_2      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END TEXT_2;
   FUNCTION TEXT_4(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.TEXT_4      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END TEXT_4;
   FUNCTION TEXT_5(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.TEXT_5      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END TEXT_5;
   FUNCTION TRANS_PRICING_TOTAL(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.TRANS_PRICING_TOTAL      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END TRANS_PRICING_TOTAL;
   FUNCTION VALUE_2(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.VALUE_2      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END VALUE_2;
   FUNCTION VALUE_3(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.VALUE_3      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END VALUE_3;
   FUNCTION VALUE_4(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.VALUE_4      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END VALUE_4;
   FUNCTION CNTR_DURATION_FROM_DATE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.CNTR_DURATION_FROM_DATE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END CNTR_DURATION_FROM_DATE;
   FUNCTION CONSIGNEE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.CONSIGNEE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END CONSIGNEE;
   FUNCTION DATE_4(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.DATE_4      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END DATE_4;
   FUNCTION EX_BOOKING_GROUP_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.EX_BOOKING_GROUP_ID      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END EX_BOOKING_GROUP_ID;
   FUNCTION EX_INV_PRICING_MEMO(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.EX_INV_PRICING_MEMO      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END EX_INV_PRICING_MEMO;
   FUNCTION EX_PRICING_BOOKING_DBC(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.EX_PRICING_BOOKING_DBC      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END EX_PRICING_BOOKING_DBC;
   FUNCTION EX_PRICING_BOOKING_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.EX_PRICING_BOOKING_ID      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END EX_PRICING_BOOKING_ID;
   FUNCTION PRICE_DATE_BASE_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.PRICE_DATE_BASE_CODE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END PRICE_DATE_BASE_CODE;
   FUNCTION PRICING_PERIOD_FROM_DATE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.PRICING_PERIOD_FROM_DATE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END PRICING_PERIOD_FROM_DATE;
   FUNCTION PRODUCT_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.PRODUCT_CODE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END PRODUCT_CODE;
   FUNCTION QTY_PRICING_VALUE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.QTY_PRICING_VALUE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END QTY_PRICING_VALUE;
   FUNCTION REC_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.REC_ID      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END REC_ID;
   FUNCTION SPLIT_METHOD(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.SPLIT_METHOD      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END SPLIT_METHOD;
   FUNCTION TRANS_BOOKING_VAT(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.TRANS_BOOKING_VAT      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END TRANS_BOOKING_VAT;
   FUNCTION TRANS_GROUP_TOTAL(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.TRANS_GROUP_TOTAL      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END TRANS_GROUP_TOTAL;
   FUNCTION TRANS_LOCAL_VALUE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.TRANS_LOCAL_VALUE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END TRANS_LOCAL_VALUE;
   FUNCTION TRANS_PRICING_VALUE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.TRANS_PRICING_VALUE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END TRANS_PRICING_VALUE;
   FUNCTION VALUE_7(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.VALUE_7      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END VALUE_7;
   FUNCTION VALUE_9(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.VALUE_9      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END VALUE_9;
   FUNCTION API(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.API      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END API;
   FUNCTION BOOKING_GROUP_LABEL_1(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.BOOKING_GROUP_LABEL_1      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END BOOKING_GROUP_LABEL_1;
   FUNCTION BOOKING_GROUP_LABEL_2(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.BOOKING_GROUP_LABEL_2      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END BOOKING_GROUP_LABEL_2;
   FUNCTION BS_W(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.BS_W      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END BS_W;
   FUNCTION CNTR_DURATION_TO_DATE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.CNTR_DURATION_TO_DATE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END CNTR_DURATION_TO_DATE;
   FUNCTION CONTRACT_DATE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.CONTRACT_DATE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END CONTRACT_DATE;
   FUNCTION DATE_1(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.DATE_1      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END DATE_1;
   FUNCTION DAYTIME(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.DAYTIME      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END DAYTIME;
   FUNCTION DELIVERY_DATE_COMPLETED(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.DELIVERY_DATE_COMPLETED      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END DELIVERY_DATE_COMPLETED;
   FUNCTION DELIVERY_PLANT_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.DELIVERY_PLANT_ID      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END DELIVERY_PLANT_ID;
   FUNCTION ENTRY_POINT_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.ENTRY_POINT_ID      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END ENTRY_POINT_ID;
   FUNCTION EX_BOOKING_LOCAL(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.EX_BOOKING_LOCAL      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END EX_BOOKING_LOCAL;
   FUNCTION EX_PRICING_BOOKING_DATE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.EX_PRICING_BOOKING_DATE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END EX_PRICING_BOOKING_DATE;
   FUNCTION EX_PRICING_MEMO_DATE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.EX_PRICING_MEMO_DATE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END EX_PRICING_MEMO_DATE;
   FUNCTION EX_PRICING_MEMO_DBC(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.EX_PRICING_MEMO_DBC      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END EX_PRICING_MEMO_DBC;
   FUNCTION ORIGIN_COUNTRY_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.ORIGIN_COUNTRY_CODE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END ORIGIN_COUNTRY_CODE;
   FUNCTION PRICE_CONCEPT_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.PRICE_CONCEPT_CODE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END PRICE_CONCEPT_CODE;
   FUNCTION PRICING_MEMO_LABEL_1(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.PRICING_MEMO_LABEL_1      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END PRICING_MEMO_LABEL_1;
   FUNCTION PRICING_TO_MEMO_IND(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.PRICING_TO_MEMO_IND      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END PRICING_TO_MEMO_IND;
   FUNCTION QTY_BOOKING_VALUE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.QTY_BOOKING_VALUE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END QTY_BOOKING_VALUE;
   FUNCTION SALT(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.SALT      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END SALT;
   FUNCTION STREAM_ITEM_ID(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.STREAM_ITEM_ID      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END STREAM_ITEM_ID;
   FUNCTION TEXT_10(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.TEXT_10      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END TEXT_10;
   FUNCTION TRANS_GROUP_VAT(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.TRANS_GROUP_VAT      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END TRANS_GROUP_VAT;
   FUNCTION TRANS_MEMO_VAT(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.TRANS_MEMO_VAT      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END TRANS_MEMO_VAT;
   FUNCTION UOM3_PRINT_DECIMALS(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.UOM3_PRINT_DECIMALS      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END UOM3_PRINT_DECIMALS;
   FUNCTION VALUE_10(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.VALUE_10      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END VALUE_10;
   FUNCTION VALUE_8(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.VALUE_8      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END VALUE_8;
   FUNCTION VAT_CODE(
      P_TRANSACTION_KEY IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_CONT_TRANSACTION.VAT_CODE      (
         P_TRANSACTION_KEY );
         RETURN ret_value;
   END VAT_CODE;

END RP_CONT_TRANSACTION;

/
--GRANT EXECUTE ON ECKERNEL_WST.RP_CONT_TRANSACTION TO REPORT_ROLE_XXX;



 -- FINISH PKG_GEN_PKGS.sf_get_functions at:05/07/2019 10.35.51 AM


