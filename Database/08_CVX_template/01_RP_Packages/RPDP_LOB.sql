
 -- START PKG_GEN_PKGS.sf_get_functions at:05/07/2019 11.48.31 AM


CREATE or REPLACE PACKAGE RPDP_LOB
IS

   FUNCTION GETCLOBTEMPLATE(
      P_TEMPLATE_TYPE IN VARCHAR2,
      P_TEMPLATE_CODE IN VARCHAR2)
      RETURN CLOB;
   FUNCTION HEXENCODEBLOB(
      P_BINARY_DATA IN BLOB)
      RETURN CLOB;
   FUNCTION CREATEBLOBTEMPLATEINSERTSCRIPT(
      P_TEMPLATE_TYPE IN VARCHAR2,
      P_TEMPLATE_CODE IN VARCHAR2)
      RETURN CLOB;
   FUNCTION CREATEBLOBINSERTSCRIPT(
      P_BINARY_DATA IN BLOB,
      P_TABLE_NAME IN VARCHAR2,
      P_COLUMN_NAME IN VARCHAR2,
      P_WHERE_CLAUSE IN VARCHAR2)
      RETURN CLOB;
   FUNCTION GETBLOBTEMPLATE(
      P_TEMPLATE_TYPE IN VARCHAR2,
      P_TEMPLATE_CODE IN VARCHAR2)
      RETURN BLOB;
   FUNCTION HEXDECODEBLOB(
      P_HEX_ENCODED_DATA IN CLOB)
      RETURN BLOB;

END RPDP_LOB;

/



CREATE or REPLACE PACKAGE BODY RPDP_LOB
IS

   FUNCTION GETCLOBTEMPLATE(
      P_TEMPLATE_TYPE IN VARCHAR2,
      P_TEMPLATE_CODE IN VARCHAR2)
      RETURN CLOB
   IS
      ret_value    CLOB ;
   BEGIN
      ret_value := ECDP_LOB.GETCLOBTEMPLATE      (
         P_TEMPLATE_TYPE,
         P_TEMPLATE_CODE );
         RETURN ret_value;
   END GETCLOBTEMPLATE;
   FUNCTION HEXENCODEBLOB(
      P_BINARY_DATA IN BLOB)
      RETURN CLOB
   IS
      ret_value    CLOB ;
   BEGIN
      ret_value := ECDP_LOB.HEXENCODEBLOB      (
         P_BINARY_DATA );
         RETURN ret_value;
   END HEXENCODEBLOB;
   FUNCTION CREATEBLOBTEMPLATEINSERTSCRIPT(
      P_TEMPLATE_TYPE IN VARCHAR2,
      P_TEMPLATE_CODE IN VARCHAR2)
      RETURN CLOB
   IS
      ret_value    CLOB ;
   BEGIN
      ret_value := ECDP_LOB.CREATEBLOBTEMPLATEINSERTSCRIPT      (
         P_TEMPLATE_TYPE,
         P_TEMPLATE_CODE );
         RETURN ret_value;
   END CREATEBLOBTEMPLATEINSERTSCRIPT;
   FUNCTION CREATEBLOBINSERTSCRIPT(
      P_BINARY_DATA IN BLOB,
      P_TABLE_NAME IN VARCHAR2,
      P_COLUMN_NAME IN VARCHAR2,
      P_WHERE_CLAUSE IN VARCHAR2)
      RETURN CLOB
   IS
      ret_value    CLOB ;
   BEGIN
      ret_value := ECDP_LOB.CREATEBLOBINSERTSCRIPT      (
         P_BINARY_DATA,
         P_TABLE_NAME,
         P_COLUMN_NAME,
         P_WHERE_CLAUSE );
         RETURN ret_value;
   END CREATEBLOBINSERTSCRIPT;
   FUNCTION GETBLOBTEMPLATE(
      P_TEMPLATE_TYPE IN VARCHAR2,
      P_TEMPLATE_CODE IN VARCHAR2)
      RETURN BLOB
   IS
      ret_value    BLOB ;
   BEGIN
      ret_value := ECDP_LOB.GETBLOBTEMPLATE      (
         P_TEMPLATE_TYPE,
         P_TEMPLATE_CODE );
         RETURN ret_value;
   END GETBLOBTEMPLATE;
   FUNCTION HEXDECODEBLOB(
      P_HEX_ENCODED_DATA IN CLOB)
      RETURN BLOB
   IS
      ret_value    BLOB ;
   BEGIN
      ret_value := ECDP_LOB.HEXDECODEBLOB      (
         P_HEX_ENCODED_DATA );
         RETURN ret_value;
   END HEXDECODEBLOB;

END RPDP_LOB;

/
--GRANT EXECUTE ON ECKERNEL_WST.RPDP_LOB TO REPORT_ROLE_XXX;



 -- FINISH PKG_GEN_PKGS.sf_get_functions at:05/07/2019 11.48.32 AM


