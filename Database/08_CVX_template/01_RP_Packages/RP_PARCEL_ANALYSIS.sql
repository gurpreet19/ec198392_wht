
 -- START PKG_GEN_PKGS.sf_get_functions at:05/07/2019 08.33.18 AM


CREATE or REPLACE PACKAGE RP_PARCEL_ANALYSIS
IS

   FUNCTION BATCH_NO(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION NGPA_LPG_CORR(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION TEXT_3(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION TEXT_4(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION TVP_PSI(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION WATER(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION APPROVAL_BY(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION APPROVAL_STATE(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION C4_WT_FRAC(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION MEET_SPEC(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION S2_WT_FRAC(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION VALUE_5(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION NEXT_DAYTIME(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE;
   FUNCTION PREV_EQUAL_DAYTIME(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE;
   FUNCTION RVP(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION SAMPLING_METHOD(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION SP_GRAV(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION TVP(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION WATER_WT_FRAC(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION BS(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION COMMENTS(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION GRS_VOL_DENSITY(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION NEXT_EQUAL_DAYTIME(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE;
   FUNCTION VALUE_6(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION PREV_DAYTIME(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE;
   FUNCTION RECORD_STATUS(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION VALUE_1(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION WATER_DENSITY(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION APPROVAL_DATE(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN DATE;
   FUNCTION CO2(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION DENSITY(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION FREE_H2O(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION H2S_PPM(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
      TYPE REC_ROW_BY_PK IS RECORD (
         CARGO_NO NUMBER ,
         PARCEL_LOAD_NO NUMBER ,
         ANALYSIS_NO NUMBER ,
         DAYTIME  DATE ,
         ANALYSIS_TYPE VARCHAR2 (20) ,
         SAMPLING_METHOD VARCHAR2 (16) ,
         BATCH_NO NUMBER ,
         DENSITY NUMBER ,
         SP_GRAV NUMBER ,
         API NUMBER ,
         RVP NUMBER ,
         WATER NUMBER ,
         WATER_DENSITY NUMBER ,
         BS NUMBER ,
         SALT NUMBER ,
         S2_WT_FRAC NUMBER ,
         WATER_WT_FRAC NUMBER ,
         BSW NUMBER ,
         TVP NUMBER ,
         CO2 NUMBER ,
         H2S_PPM NUMBER ,
         MAIN_COMP_VOL_FRAC NUMBER ,
         PARENT_COMP_VOL_FRAC NUMBER ,
         FREE_H2O VARCHAR2 (32) ,
         NGPA_LPG_CORR VARCHAR2 (32) ,
         NGPA_DRY VARCHAR2 (32) ,
         NGPA_RESIDUE VARCHAR2 (32) ,
         MEET_SPEC VARCHAR2 (2000) ,
         SPOT_NO NUMBER ,
         SPOT_VOL NUMBER ,
         SP_GRAV_INTERMED NUMBER ,
         SP_GRAV_15C NUMBER ,
         C4_WT_FRAC NUMBER ,
         RVP_PSI NUMBER ,
         TVP_PSI NUMBER ,
         GRS_VOL_DENSITY NUMBER ,
         COMMENTS VARCHAR2 (2000) ,
         VALUE_1 NUMBER ,
         VALUE_2 NUMBER ,
         VALUE_3 NUMBER ,
         VALUE_4 NUMBER ,
         VALUE_5 NUMBER ,
         VALUE_6 NUMBER ,
         VALUE_7 NUMBER ,
         VALUE_8 NUMBER ,
         VALUE_9 NUMBER ,
         VALUE_10 NUMBER ,
         TEXT_1 VARCHAR2 (16) ,
         TEXT_2 VARCHAR2 (32) ,
         TEXT_3 VARCHAR2 (240) ,
         TEXT_4 VARCHAR2 (2000) ,
         RECORD_STATUS VARCHAR2 (1) ,
         CREATED_BY VARCHAR2 (30) ,
         CREATED_DATE  DATE ,
         LAST_UPDATED_BY VARCHAR2 (30) ,
         LAST_UPDATED_DATE  DATE ,
         REV_NO NUMBER ,
         REV_TEXT VARCHAR2 (2000) ,
         APPROVAL_BY VARCHAR2 (30) ,
         APPROVAL_DATE  DATE ,
         APPROVAL_STATE VARCHAR2 (1) ,
         REC_ID VARCHAR2 (32)  );
   FUNCTION ROW_BY_PK(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN REC_ROW_BY_PK;
      TYPE REC_ROW_BY_REL_OPERATOR IS RECORD (
         CARGO_NO NUMBER ,
         PARCEL_LOAD_NO NUMBER ,
         ANALYSIS_NO NUMBER ,
         DAYTIME  DATE ,
         ANALYSIS_TYPE VARCHAR2 (20) ,
         SAMPLING_METHOD VARCHAR2 (16) ,
         BATCH_NO NUMBER ,
         DENSITY NUMBER ,
         SP_GRAV NUMBER ,
         API NUMBER ,
         RVP NUMBER ,
         WATER NUMBER ,
         WATER_DENSITY NUMBER ,
         BS NUMBER ,
         SALT NUMBER ,
         S2_WT_FRAC NUMBER ,
         WATER_WT_FRAC NUMBER ,
         BSW NUMBER ,
         TVP NUMBER ,
         CO2 NUMBER ,
         H2S_PPM NUMBER ,
         MAIN_COMP_VOL_FRAC NUMBER ,
         PARENT_COMP_VOL_FRAC NUMBER ,
         FREE_H2O VARCHAR2 (32) ,
         NGPA_LPG_CORR VARCHAR2 (32) ,
         NGPA_DRY VARCHAR2 (32) ,
         NGPA_RESIDUE VARCHAR2 (32) ,
         MEET_SPEC VARCHAR2 (2000) ,
         SPOT_NO NUMBER ,
         SPOT_VOL NUMBER ,
         SP_GRAV_INTERMED NUMBER ,
         SP_GRAV_15C NUMBER ,
         C4_WT_FRAC NUMBER ,
         RVP_PSI NUMBER ,
         TVP_PSI NUMBER ,
         GRS_VOL_DENSITY NUMBER ,
         COMMENTS VARCHAR2 (2000) ,
         VALUE_1 NUMBER ,
         VALUE_2 NUMBER ,
         VALUE_3 NUMBER ,
         VALUE_4 NUMBER ,
         VALUE_5 NUMBER ,
         VALUE_6 NUMBER ,
         VALUE_7 NUMBER ,
         VALUE_8 NUMBER ,
         VALUE_9 NUMBER ,
         VALUE_10 NUMBER ,
         TEXT_1 VARCHAR2 (16) ,
         TEXT_2 VARCHAR2 (32) ,
         TEXT_3 VARCHAR2 (240) ,
         TEXT_4 VARCHAR2 (2000) ,
         RECORD_STATUS VARCHAR2 (1) ,
         CREATED_BY VARCHAR2 (30) ,
         CREATED_DATE  DATE ,
         LAST_UPDATED_BY VARCHAR2 (30) ,
         LAST_UPDATED_DATE  DATE ,
         REV_NO NUMBER ,
         REV_TEXT VARCHAR2 (2000) ,
         APPROVAL_BY VARCHAR2 (30) ,
         APPROVAL_DATE  DATE ,
         APPROVAL_STATE VARCHAR2 (1) ,
         REC_ID VARCHAR2 (32)  );
   FUNCTION ROW_BY_REL_OPERATOR(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN REC_ROW_BY_REL_OPERATOR;
   FUNCTION SPOT_NO(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION VALUE_2(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION VALUE_3(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION VALUE_4(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION ANALYSIS_TYPE(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION BSW(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION MAIN_COMP_VOL_FRAC(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION NGPA_DRY(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION NGPA_RESIDUE(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION PARENT_COMP_VOL_FRAC(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION REC_ID(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION RVP_PSI(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION SPOT_VOL(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION SP_GRAV_INTERMED(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION TEXT_1(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION TEXT_2(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2;
   FUNCTION VALUE_7(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION VALUE_9(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION API(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION SALT(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION SP_GRAV_15C(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION VALUE_10(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;
   FUNCTION VALUE_8(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER;

END RP_PARCEL_ANALYSIS;

/



CREATE or REPLACE PACKAGE BODY RP_PARCEL_ANALYSIS
IS

   FUNCTION BATCH_NO(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.BATCH_NO      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END BATCH_NO;
   FUNCTION NGPA_LPG_CORR(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.NGPA_LPG_CORR      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END NGPA_LPG_CORR;
   FUNCTION TEXT_3(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (240) ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.TEXT_3      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END TEXT_3;
   FUNCTION TEXT_4(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.TEXT_4      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END TEXT_4;
   FUNCTION TVP_PSI(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.TVP_PSI      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END TVP_PSI;
   FUNCTION WATER(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.WATER      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END WATER;
   FUNCTION APPROVAL_BY(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (30) ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.APPROVAL_BY      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END APPROVAL_BY;
   FUNCTION APPROVAL_STATE(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.APPROVAL_STATE      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END APPROVAL_STATE;
   FUNCTION C4_WT_FRAC(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.C4_WT_FRAC      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END C4_WT_FRAC;
   FUNCTION MEET_SPEC(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.MEET_SPEC      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END MEET_SPEC;
   FUNCTION S2_WT_FRAC(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.S2_WT_FRAC      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END S2_WT_FRAC;
   FUNCTION VALUE_5(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.VALUE_5      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END VALUE_5;
   FUNCTION NEXT_DAYTIME(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.NEXT_DAYTIME      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_NUM_ROWS );
         RETURN ret_value;
   END NEXT_DAYTIME;
   FUNCTION PREV_EQUAL_DAYTIME(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.PREV_EQUAL_DAYTIME      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_NUM_ROWS );
         RETURN ret_value;
   END PREV_EQUAL_DAYTIME;
   FUNCTION RVP(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.RVP      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END RVP;
   FUNCTION SAMPLING_METHOD(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (16) ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.SAMPLING_METHOD      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END SAMPLING_METHOD;
   FUNCTION SP_GRAV(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.SP_GRAV      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END SP_GRAV;
   FUNCTION TVP(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.TVP      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END TVP;
   FUNCTION WATER_WT_FRAC(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.WATER_WT_FRAC      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END WATER_WT_FRAC;
   FUNCTION BS(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.BS      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END BS;
   FUNCTION COMMENTS(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (2000) ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.COMMENTS      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END COMMENTS;
   FUNCTION GRS_VOL_DENSITY(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.GRS_VOL_DENSITY      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END GRS_VOL_DENSITY;
   FUNCTION NEXT_EQUAL_DAYTIME(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.NEXT_EQUAL_DAYTIME      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_NUM_ROWS );
         RETURN ret_value;
   END NEXT_EQUAL_DAYTIME;
   FUNCTION VALUE_6(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.VALUE_6      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END VALUE_6;
   FUNCTION PREV_DAYTIME(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.PREV_DAYTIME      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_NUM_ROWS );
         RETURN ret_value;
   END PREV_DAYTIME;
   FUNCTION RECORD_STATUS(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (1) ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.RECORD_STATUS      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END RECORD_STATUS;
   FUNCTION VALUE_1(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.VALUE_1      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END VALUE_1;
   FUNCTION WATER_DENSITY(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.WATER_DENSITY      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END WATER_DENSITY;
   FUNCTION APPROVAL_DATE(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.APPROVAL_DATE      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END APPROVAL_DATE;
   FUNCTION CO2(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.CO2      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END CO2;
   FUNCTION DENSITY(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.DENSITY      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END DENSITY;
   FUNCTION FREE_H2O(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.FREE_H2O      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END FREE_H2O;
   FUNCTION H2S_PPM(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.H2S_PPM      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END H2S_PPM;
   FUNCTION ROW_BY_PK(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN REC_ROW_BY_PK
   IS
      ret_value    REC_ROW_BY_PK ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.ROW_BY_PK      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END ROW_BY_PK;
   FUNCTION ROW_BY_REL_OPERATOR(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN REC_ROW_BY_REL_OPERATOR
   IS
      ret_value    REC_ROW_BY_REL_OPERATOR ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.ROW_BY_REL_OPERATOR      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END ROW_BY_REL_OPERATOR;
   FUNCTION SPOT_NO(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.SPOT_NO      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END SPOT_NO;
   FUNCTION VALUE_2(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.VALUE_2      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END VALUE_2;
   FUNCTION VALUE_3(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.VALUE_3      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END VALUE_3;
   FUNCTION VALUE_4(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.VALUE_4      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END VALUE_4;
   FUNCTION ANALYSIS_TYPE(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (20) ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.ANALYSIS_TYPE      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END ANALYSIS_TYPE;
   FUNCTION BSW(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.BSW      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END BSW;
   FUNCTION MAIN_COMP_VOL_FRAC(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.MAIN_COMP_VOL_FRAC      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END MAIN_COMP_VOL_FRAC;
   FUNCTION NGPA_DRY(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.NGPA_DRY      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END NGPA_DRY;
   FUNCTION NGPA_RESIDUE(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.NGPA_RESIDUE      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END NGPA_RESIDUE;
   FUNCTION PARENT_COMP_VOL_FRAC(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.PARENT_COMP_VOL_FRAC      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END PARENT_COMP_VOL_FRAC;
   FUNCTION REC_ID(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.REC_ID      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END REC_ID;
   FUNCTION RVP_PSI(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.RVP_PSI      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END RVP_PSI;
   FUNCTION SPOT_VOL(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.SPOT_VOL      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END SPOT_VOL;
   FUNCTION SP_GRAV_INTERMED(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.SP_GRAV_INTERMED      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END SP_GRAV_INTERMED;
   FUNCTION TEXT_1(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (16) ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.TEXT_1      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END TEXT_1;
   FUNCTION TEXT_2(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2 (32) ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.TEXT_2      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END TEXT_2;
   FUNCTION VALUE_7(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.VALUE_7      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END VALUE_7;
   FUNCTION VALUE_9(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.VALUE_9      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END VALUE_9;
   FUNCTION API(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.API      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END API;
   FUNCTION SALT(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.SALT      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END SALT;
   FUNCTION SP_GRAV_15C(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.SP_GRAV_15C      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END SP_GRAV_15C;
   FUNCTION VALUE_10(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.VALUE_10      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END VALUE_10;
   FUNCTION VALUE_8(
      P_CARGO_NO IN NUMBER,
      P_PARCEL_LOAD_NO IN NUMBER,
      P_ANALYSIS_NO IN NUMBER,
      P_DAYTIME IN DATE,
      P_COMPARE_OPER IN VARCHAR2 DEFAULT '=')
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := EC_PARCEL_ANALYSIS.VALUE_8      (
         P_CARGO_NO,
         P_PARCEL_LOAD_NO,
         P_ANALYSIS_NO,
         P_DAYTIME,
         P_COMPARE_OPER );
         RETURN ret_value;
   END VALUE_8;

END RP_PARCEL_ANALYSIS;

/
--GRANT EXECUTE ON ECKERNEL_WST.RP_PARCEL_ANALYSIS TO REPORT_ROLE_XXX;



 -- FINISH PKG_GEN_PKGS.sf_get_functions at:05/07/2019 08.33.37 AM


