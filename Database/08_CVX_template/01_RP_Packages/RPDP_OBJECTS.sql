
 -- START PKG_GEN_PKGS.sf_get_functions at:05/07/2019 11.47.46 AM


CREATE or REPLACE PACKAGE RPDP_OBJECTS
IS

   FUNCTION GETFIRSTCLASSDAYTIMEREF(
      P_CLASS_NAME IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_RECURSIVE IN BOOLEAN DEFAULT FALSE,
      P_MIN_DATE IN DATE DEFAULT NULL)
      RETURN DATE;
   FUNCTION GETLASTCLASSDAYTIMEREF(
      P_CLASS_NAME IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_RECURSIVE IN BOOLEAN DEFAULT FALSE,
      P_MAX_DATE IN DATE DEFAULT NULL)
      RETURN DATE;
      TYPE OBJECT_VERSION_PK_REC IS RECORD (
         OBJECT_ID VARCHAR2 (32) ,
         DAYTIME  DATE  );
   FUNCTION RESOLVECASCADEDOBJECT(
      P_CASCADED_CLASS_NAME IN VARCHAR2,
      P_CLASS_NAME IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN ECDP_OBJECTS.OBJECT_VERSION_PK_REC;
   FUNCTION GETINSERTEDDAYTIME(
      P_OBJECT_START_DATE IN DATE,
      P_DAYTIME IN DATE,
      P_OBJECT_END_DATE IN DATE)
      RETURN DATE;
   FUNCTION GETNONVALIDRELATION(
      P_CLASS_NAME IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN VARCHAR2;
   FUNCTION GETOBJDAYTIME(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN DATE;
   FUNCTION GETOBJIDFROMCODE(
      P_CLASS_NAME IN VARCHAR2,
      P_CODE IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION RESOLVEPRODUCTIONDAYID(
      P_CLASS_NAME IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN VARCHAR2;
   FUNCTION GETINSERTEDRELATIONID(
      P_ROLE_NAME IN VARCHAR2,
      P_REL_CLASS_NAME IN VARCHAR2,
      P_NEW_REL_OBJECT_ID IN VARCHAR2,
      P_NEW_OBJECT_CODE IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN VARCHAR2;
   FUNCTION GETOBJCLASSNAME(
      P_OBJECT_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION CHECKOBJECTACCESS(
      P_OBJECT_ID IN VARCHAR2,
      P_OBJECT_CLASS_NAME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;
   FUNCTION GETNONVALIDRELATIONENDDATE(
      P_CLASS_NAME IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_END_DATE IN DATE)
      RETURN VARCHAR2;
   FUNCTION RESOLVEDOMAINOBJECTNAME(
      P_DOMAIN_CLASS_NAME IN VARCHAR2,
      P_CLASS_NAME IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN VARCHAR2;
   FUNCTION GETINSERTEDOBJECTID(
      P_NEW_REL_OBJECT_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION GETUPDATELISTVALUE(
      P_UPDATE_COLUMN IN ECDP_OBJECTS.UPDATE_COLUMN)
      RETURN VARCHAR2;
   FUNCTION ISVALIDCLASSREFERENCE(
      P_CLASS_NAME IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION GETOBJENDDATE(
      P_OBJECT_ID IN VARCHAR2)
      RETURN DATE;
   FUNCTION GETOBJSTARTDATE(
      P_OBJECT_ID IN VARCHAR2)
      RETURN DATE;
   FUNCTION GETOBJCODE(
      P_OBJECT_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION GETOBJNAME(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN VARCHAR2;
   FUNCTION GETUPDATEDRELATIONID(
      P_UPD_ID IN BOOLEAN,
      P_UPD_CODE IN BOOLEAN,
      P_ROLE_NAME IN VARCHAR2,
      P_REL_CLASS_NAME IN VARCHAR2,
      P_NEW_REL_OBJECT_ID IN VARCHAR2,
      P_NEW_OBJECT_CODE IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN VARCHAR2;
   FUNCTION IFDOLLARSTR(
      P_CONDITION IN VARCHAR2,
      P1 IN VARCHAR2,
      P2 IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION ISVALIDOBJENDDATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN VARCHAR2;
   FUNCTION ISVALIDOBJSTARTDATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN VARCHAR2;
   FUNCTION ISVALIDOWNERREFERENCE(
      P_CLASS_NAME IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2)
      RETURN VARCHAR2;

END RPDP_OBJECTS;

/



CREATE or REPLACE PACKAGE BODY RPDP_OBJECTS
IS

   FUNCTION GETFIRSTCLASSDAYTIMEREF(
      P_CLASS_NAME IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_RECURSIVE IN BOOLEAN DEFAULT FALSE,
      P_MIN_DATE IN DATE DEFAULT NULL)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := ECDP_OBJECTS.GETFIRSTCLASSDAYTIMEREF      (
         P_CLASS_NAME,
         P_OBJECT_ID,
         P_RECURSIVE,
         P_MIN_DATE );
         RETURN ret_value;
   END GETFIRSTCLASSDAYTIMEREF;
   FUNCTION GETLASTCLASSDAYTIMEREF(
      P_CLASS_NAME IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_RECURSIVE IN BOOLEAN DEFAULT FALSE,
      P_MAX_DATE IN DATE DEFAULT NULL)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := ECDP_OBJECTS.GETLASTCLASSDAYTIMEREF      (
         P_CLASS_NAME,
         P_OBJECT_ID,
         P_RECURSIVE,
         P_MAX_DATE );
         RETURN ret_value;
   END GETLASTCLASSDAYTIMEREF;
   FUNCTION RESOLVECASCADEDOBJECT(
      P_CASCADED_CLASS_NAME IN VARCHAR2,
      P_CLASS_NAME IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN ECDP_OBJECTS.OBJECT_VERSION_PK_REC
   IS
      ret_value    ECDP_OBJECTS.OBJECT_VERSION_PK_REC ;
   BEGIN
      ret_value := ECDP_OBJECTS.RESOLVECASCADEDOBJECT      (
         P_CASCADED_CLASS_NAME,
         P_CLASS_NAME,
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END RESOLVECASCADEDOBJECT;
   FUNCTION GETINSERTEDDAYTIME(
      P_OBJECT_START_DATE IN DATE,
      P_DAYTIME IN DATE,
      P_OBJECT_END_DATE IN DATE)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := ECDP_OBJECTS.GETINSERTEDDAYTIME      (
         P_OBJECT_START_DATE,
         P_DAYTIME,
         P_OBJECT_END_DATE );
         RETURN ret_value;
   END GETINSERTEDDAYTIME;
   FUNCTION GETNONVALIDRELATION(
      P_CLASS_NAME IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_OBJECTS.GETNONVALIDRELATION      (
         P_CLASS_NAME,
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END GETNONVALIDRELATION;
   FUNCTION GETOBJDAYTIME(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := ECDP_OBJECTS.GETOBJDAYTIME      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END GETOBJDAYTIME;
   FUNCTION GETOBJIDFROMCODE(
      P_CLASS_NAME IN VARCHAR2,
      P_CODE IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_OBJECTS.GETOBJIDFROMCODE      (
         P_CLASS_NAME,
         P_CODE );
         RETURN ret_value;
   END GETOBJIDFROMCODE;
   FUNCTION RESOLVEPRODUCTIONDAYID(
      P_CLASS_NAME IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_OBJECTS.RESOLVEPRODUCTIONDAYID      (
         P_CLASS_NAME,
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END RESOLVEPRODUCTIONDAYID;
   FUNCTION GETINSERTEDRELATIONID(
      P_ROLE_NAME IN VARCHAR2,
      P_REL_CLASS_NAME IN VARCHAR2,
      P_NEW_REL_OBJECT_ID IN VARCHAR2,
      P_NEW_OBJECT_CODE IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_OBJECTS.GETINSERTEDRELATIONID      (
         P_ROLE_NAME,
         P_REL_CLASS_NAME,
         P_NEW_REL_OBJECT_ID,
         P_NEW_OBJECT_CODE,
         P_DAYTIME );
         RETURN ret_value;
   END GETINSERTEDRELATIONID;
   FUNCTION GETOBJCLASSNAME(
      P_OBJECT_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_OBJECTS.GETOBJCLASSNAME      (
         P_OBJECT_ID );
         RETURN ret_value;
   END GETOBJCLASSNAME;
   FUNCTION CHECKOBJECTACCESS(
      P_OBJECT_ID IN VARCHAR2,
      P_OBJECT_CLASS_NAME IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_OBJECTS.CHECKOBJECTACCESS      (
         P_OBJECT_ID,
         P_OBJECT_CLASS_NAME );
         RETURN ret_value;
   END CHECKOBJECTACCESS;
   FUNCTION GETNONVALIDRELATIONENDDATE(
      P_CLASS_NAME IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_END_DATE IN DATE)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_OBJECTS.GETNONVALIDRELATIONENDDATE      (
         P_CLASS_NAME,
         P_OBJECT_ID,
         P_END_DATE );
         RETURN ret_value;
   END GETNONVALIDRELATIONENDDATE;
   FUNCTION RESOLVEDOMAINOBJECTNAME(
      P_DOMAIN_CLASS_NAME IN VARCHAR2,
      P_CLASS_NAME IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_OBJECTS.RESOLVEDOMAINOBJECTNAME      (
         P_DOMAIN_CLASS_NAME,
         P_CLASS_NAME,
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END RESOLVEDOMAINOBJECTNAME;
   FUNCTION GETINSERTEDOBJECTID(
      P_NEW_REL_OBJECT_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_OBJECTS.GETINSERTEDOBJECTID      (
         P_NEW_REL_OBJECT_ID );
         RETURN ret_value;
   END GETINSERTEDOBJECTID;
   FUNCTION GETUPDATELISTVALUE(
      P_UPDATE_COLUMN IN ECDP_OBJECTS.UPDATE_COLUMN)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_OBJECTS.GETUPDATELISTVALUE      (
         P_UPDATE_COLUMN );
         RETURN ret_value;
   END GETUPDATELISTVALUE;
   FUNCTION ISVALIDCLASSREFERENCE(
      P_CLASS_NAME IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_OBJECTS.ISVALIDCLASSREFERENCE      (
         P_CLASS_NAME,
         P_OBJECT_ID );
         RETURN ret_value;
   END ISVALIDCLASSREFERENCE;
   FUNCTION GETOBJENDDATE(
      P_OBJECT_ID IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := ECDP_OBJECTS.GETOBJENDDATE      (
         P_OBJECT_ID );
         RETURN ret_value;
   END GETOBJENDDATE;
   FUNCTION GETOBJSTARTDATE(
      P_OBJECT_ID IN VARCHAR2)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := ECDP_OBJECTS.GETOBJSTARTDATE      (
         P_OBJECT_ID );
         RETURN ret_value;
   END GETOBJSTARTDATE;
   FUNCTION GETOBJCODE(
      P_OBJECT_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_OBJECTS.GETOBJCODE      (
         P_OBJECT_ID );
         RETURN ret_value;
   END GETOBJCODE;
   FUNCTION GETOBJNAME(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_OBJECTS.GETOBJNAME      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END GETOBJNAME;
   FUNCTION GETUPDATEDRELATIONID(
      P_UPD_ID IN BOOLEAN,
      P_UPD_CODE IN BOOLEAN,
      P_ROLE_NAME IN VARCHAR2,
      P_REL_CLASS_NAME IN VARCHAR2,
      P_NEW_REL_OBJECT_ID IN VARCHAR2,
      P_NEW_OBJECT_CODE IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_OBJECTS.GETUPDATEDRELATIONID      (
         P_UPD_ID,
         P_UPD_CODE,
         P_ROLE_NAME,
         P_REL_CLASS_NAME,
         P_NEW_REL_OBJECT_ID,
         P_NEW_OBJECT_CODE,
         P_DAYTIME );
         RETURN ret_value;
   END GETUPDATEDRELATIONID;
   FUNCTION IFDOLLARSTR(
      P_CONDITION IN VARCHAR2,
      P1 IN VARCHAR2,
      P2 IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_OBJECTS.IFDOLLARSTR      (
         P_CONDITION,
         P1,
         P2 );
         RETURN ret_value;
   END IFDOLLARSTR;
   FUNCTION ISVALIDOBJENDDATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_OBJECTS.ISVALIDOBJENDDATE      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END ISVALIDOBJENDDATE;
   FUNCTION ISVALIDOBJSTARTDATE(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_OBJECTS.ISVALIDOBJSTARTDATE      (
         P_OBJECT_ID,
         P_DAYTIME );
         RETURN ret_value;
   END ISVALIDOBJSTARTDATE;
   FUNCTION ISVALIDOWNERREFERENCE(
      P_CLASS_NAME IN VARCHAR2,
      P_OBJECT_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_OBJECTS.ISVALIDOWNERREFERENCE      (
         P_CLASS_NAME,
         P_OBJECT_ID );
         RETURN ret_value;
   END ISVALIDOWNERREFERENCE;

END RPDP_OBJECTS;

/
--GRANT EXECUTE ON ECKERNEL_WST.RPDP_OBJECTS TO REPORT_ROLE_XXX;



 -- FINISH PKG_GEN_PKGS.sf_get_functions at:05/07/2019 11.47.52 AM


