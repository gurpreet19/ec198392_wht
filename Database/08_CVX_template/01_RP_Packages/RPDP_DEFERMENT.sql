
 -- START PKG_GEN_PKGS.sf_get_functions at:05/07/2019 11.50.08 AM


CREATE or REPLACE PACKAGE RPDP_DEFERMENT
IS

   FUNCTION CHECKSWINGWELL(
      P_SWING IN VARCHAR2,
      P_EVENT IN VARCHAR2,
      P_WELL IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_FCTY_ID IN VARCHAR2,
      P_GROUP_TYPE IN VARCHAR2,
      P_CLASS_NAME IN VARCHAR2,
      P_PARENT_TYPE IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2;
   FUNCTION FINDCONSTRAINTHRS(
      CP_DAY IN DATE,
      CP_START_DAYTIME IN DATE,
      P_OBJECT_ID IN VARCHAR2,
      P_TEMP_END_DATE IN DATE,
      P_TEMP_START_DATE IN DATE,
      P_OPEN_END_EVENT IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION PREV_EQUAL_EVENTDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE;
   FUNCTION GETSUMLOSSMASSDEFDAY(
      P_ATTRIBUTE IN VARCHAR2,
      P_EVENT_NO IN NUMBER)
      RETURN NUMBER;

END RPDP_DEFERMENT;

/



CREATE or REPLACE PACKAGE BODY RPDP_DEFERMENT
IS

   FUNCTION CHECKSWINGWELL(
      P_SWING IN VARCHAR2,
      P_EVENT IN VARCHAR2,
      P_WELL IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_FCTY_ID IN VARCHAR2,
      P_GROUP_TYPE IN VARCHAR2,
      P_CLASS_NAME IN VARCHAR2,
      P_PARENT_TYPE IN VARCHAR2 DEFAULT NULL)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := ECDP_DEFERMENT.CHECKSWINGWELL      (
         P_SWING,
         P_EVENT,
         P_WELL,
         P_DAYTIME,
         P_FCTY_ID,
         P_GROUP_TYPE,
         P_CLASS_NAME,
         P_PARENT_TYPE );
         RETURN ret_value;
   END CHECKSWINGWELL;
   FUNCTION FINDCONSTRAINTHRS(
      CP_DAY IN DATE,
      CP_START_DAYTIME IN DATE,
      P_OBJECT_ID IN VARCHAR2,
      P_TEMP_END_DATE IN DATE,
      P_TEMP_START_DATE IN DATE,
      P_OPEN_END_EVENT IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECDP_DEFERMENT.FINDCONSTRAINTHRS      (
         CP_DAY,
         CP_START_DAYTIME,
         P_OBJECT_ID,
         P_TEMP_END_DATE,
         P_TEMP_START_DATE,
         P_OPEN_END_EVENT );
         RETURN ret_value;
   END FINDCONSTRAINTHRS;
   FUNCTION PREV_EQUAL_EVENTDAY(
      P_OBJECT_ID IN VARCHAR2,
      P_DAYTIME IN DATE,
      P_NUM_ROWS IN NUMBER DEFAULT 1)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := ECDP_DEFERMENT.PREV_EQUAL_EVENTDAY      (
         P_OBJECT_ID,
         P_DAYTIME,
         P_NUM_ROWS );
         RETURN ret_value;
   END PREV_EQUAL_EVENTDAY;
   FUNCTION GETSUMLOSSMASSDEFDAY(
      P_ATTRIBUTE IN VARCHAR2,
      P_EVENT_NO IN NUMBER)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := ECDP_DEFERMENT.GETSUMLOSSMASSDEFDAY      (
         P_ATTRIBUTE,
         P_EVENT_NO );
         RETURN ret_value;
   END GETSUMLOSSMASSDEFDAY;

END RPDP_DEFERMENT;

/
--GRANT EXECUTE ON ECKERNEL_WST.RPDP_DEFERMENT TO REPORT_ROLE_XXX;



 -- FINISH PKG_GEN_PKGS.sf_get_functions at:05/07/2019 11.50.09 AM


