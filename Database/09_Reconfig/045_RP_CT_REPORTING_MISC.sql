create or replace PACKAGE RP_CT_REPORTING_MISC
IS

   FUNCTION CP_EVENT_COUNT(
      PEVENTCODE IN VARCHAR2,
      PSTARTDATE IN DATE,
      PENDDATE IN DATE,
      PLIFTINGACCOUNTID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION CP_GET_ADJ_RE_EN(
      PLIFTINGACCOUNTID IN VARCHAR2,
      PPRODFCSTID IN VARCHAR2,
      PSTARTDATE IN DATE,
      PENDDATE IN DATE)
      RETURN NUMBER;
   FUNCTION CP_GET_CARGO_LOADED_VOL(
      PCARGONO IN NUMBER)
      RETURN NUMBER;
   FUNCTION CP_GET_LIFTED_EN(
      PLIFTINGACCOUNTID IN VARCHAR2,
      PSTARTDATE IN DATE,
      PENDDATE IN DATE,
      PEVENTCODE IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION CP_GET_NACPT_EN(
      PLIFTINGACCOUNTID IN VARCHAR2,
      PSTARTDATE IN DATE,
      PENDDATE IN DATE,
      PEVENTCODE IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION CP_GET_NOM_CARGO_SIZE(
      PCARGO_NO IN NUMBER)
      RETURN NUMBER;
   FUNCTION CP_GET_REF_ENT_VOL(
      PLIFTINGACCOUNTID IN VARCHAR2,
      PPRODFCSTID IN VARCHAR2,
      PSTARTDATE IN DATE,
      PENDDATE IN DATE)
      RETURN NUMBER;
   FUNCTION CP_GET_EVENRATABLE_RATIO(
      PLIFTING_ACCOUNT_ID IN VARCHAR2,
      PSCENARIO_ID IN VARCHAR2,
      PFORECAST_OBJECT_ID IN VARCHAR2,
      PMONTH IN DATE)
      RETURN NUMBER;
   FUNCTION CP_GET_FCST_PRD_VOL(
      PSTORAGEID IN VARCHAR2,
      PPROFITCENTREID IN VARCHAR2,
      PPRODFCSTID IN VARCHAR2,
      PSTARTDATE IN DATE,
      PENDDATE IN DATE)
      RETURN NUMBER;
   FUNCTION CP_GET_LA_NOM_EN(
      PLIFTINGACCOUNTID IN VARCHAR2,
      PSTARTDATE IN DATE,
      PENDDATE IN DATE)
      RETURN NUMBER;
   FUNCTION CP_GET_LA_NOM_VOL(
      PLIFTINGACCOUNTID IN VARCHAR2,
      PSTARTDATE IN DATE,
      PENDDATE IN DATE)
      RETURN NUMBER;
   FUNCTION CP_GET_LA_UO_LIFT_EN(
      PLIFTINGACCOUNTID IN VARCHAR2,
      PDAYTIME IN DATE,
      PENDDATE IN DATE DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION CP_APPROVEDPRODFCSTID(
      PSTORAGEID IN VARCHAR2,
      PPROFITCENTREID IN VARCHAR2,
      PSTARTDATE IN DATE,
      PENDDATE IN DATE)
      RETURN VARCHAR2;
   FUNCTION CP_GET_LA_EXCESS_UNDERLIFT(
      PLIFTINGACCOUNTID IN VARCHAR2,
      PPERIODSTART IN DATE,
      PVALUE IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION CP_GET_LA_XSL_UO_VOL(
      PLIFTINGACCOUNTID IN VARCHAR2,
      PENDDATE IN DATE)
      RETURN NUMBER;
   FUNCTION CP_GET_LIFTERS_PNC_ALLOWANCE(
      PLIFTING_ACCOUNT_ID IN VARCHAR2,
      PSCENARIO_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION CP_GET_MTH_REQ_VOL(
      PLIFTING_ACCOUNT_ID IN VARCHAR2,
      PSCENARIO_ID IN VARCHAR2,
      PMONTH IN DATE)
      RETURN NUMBER;
   FUNCTION CP_GET_NACPT_VOL(
      PLIFTINGACCOUNTID IN VARCHAR2,
      PSTARTDATE IN DATE,
      PENDDATE IN DATE,
      PEVENTCODE IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION CP_LY_START(
      PDAYTIME IN DATE)
      RETURN DATE;
   FUNCTION CP_VARIANCE_NOM_STATUS(
      PORIGINALCODE IN VARCHAR2,
      PCOMPARISONCODE IN VARCHAR2,
      PLIFTINGNO IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION FTLLIFTERSCHEDQTYMMBTU(
      PPARCEL_NO IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION CP_GET_ACTUAL_CARGO_EN(
      PCARGONO IN NUMBER)
      RETURN NUMBER;
   FUNCTION CP_GET_ADJ_RE_VOL(
      PLIFTINGACCOUNTID IN VARCHAR2,
      PPRODFCSTID IN VARCHAR2,
      PSTARTDATE IN DATE,
      PENDDATE IN DATE)
      RETURN NUMBER;
   FUNCTION CP_GET_COND_LIFT_OCCURANCES(
      PSCENARIO_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION CP_GET_MTH_RE_VOL(
      PLIFTING_ACCOUNT_ID IN VARCHAR2,
      PFORECAST_OBJECT_ID IN VARCHAR2,
      PMONTH IN DATE)
      RETURN NUMBER;
   FUNCTION CP_GET_SYSTEM_PNC_ALLOWANCE(
      PLIFTING_ACCOUNT_ID IN VARCHAR2,
      PSCENARIO_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION CP_GET_VALIDATION_TEXT(
      PREFERENCE_LIFTING_NO IN VARCHAR2,
      PLIFTING_ACCOUNT_ID IN VARCHAR2,
      PFORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2;
   FUNCTION FAILEDTOLIFTLIFTERINTEREST(
      PCARGO_NO IN VARCHAR2,
      PPARCEL_NO IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION CP_GET_LA_UO_LIFT_VOL(
      PLIFTINGACCOUNTID IN VARCHAR2,
      PDAYTIME IN DATE,
      PENDDATE IN DATE DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION CP_GET_LIFTED_VOL(
      PLIFTINGACCOUNTID IN VARCHAR2,
      PSTARTDATE IN DATE,
      PENDDATE IN DATE,
      PEVENTCODE IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER;
   FUNCTION CP_GET_LA_XSL_UO_EN(
      PLIFTINGACCOUNTID IN VARCHAR2,
      PENDDATE IN DATE)
      RETURN NUMBER;
   FUNCTION CP_GET_PNC_ALLOWANCES_USED(
      PLIFTING_ACCOUNT_ID IN VARCHAR2,
      PSCENARIO_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION CP_GET_AVG_CARGO_SIZE(
      PLIFTING_ACCOUNT_ID IN VARCHAR2,
      PSCENARIO_ID IN VARCHAR2,
      POBJECT_CODE IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION CP_GET_FCST_PRD_EN(
      PSTORAGEID IN VARCHAR2,
      PPROFITCENTREID IN VARCHAR2,
      PPRODFCSTID IN VARCHAR2,
      PSTARTDATE IN DATE,
      PENDDATE IN DATE)
      RETURN NUMBER;
   FUNCTION CP_GET_MAX_LNG_CARRIER_VOL(
      PSCENARIO_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION CP_GET_PNC_TRADE(
      PLIFTING_ACCOUNT_ID IN VARCHAR2,
      PSCENARIO_ID IN VARCHAR2)
      RETURN NUMBER;
   FUNCTION CP_GET_REF_ENT_EN(
      PLIFTINGACCOUNTID IN VARCHAR2,
      PPRODFCSTID IN VARCHAR2,
      PSTARTDATE IN DATE,
      PENDDATE IN DATE)
      RETURN NUMBER;
   FUNCTION CP_GET_YR_REQ_VOL(
      PLIFTING_ACCOUNT_ID IN VARCHAR2,
      PSCENARIO_ID IN VARCHAR2)
      RETURN NUMBER;

END RP_CT_REPORTING_MISC;
/
create or replace PACKAGE BODY RP_CT_REPORTING_MISC
IS

   FUNCTION CP_EVENT_COUNT(
      PEVENTCODE IN VARCHAR2,
      PSTARTDATE IN DATE,
      PENDDATE IN DATE,
      PLIFTINGACCOUNTID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := UE_CT_REPORTING_MISC.CP_EVENT_COUNT      (
         PEVENTCODE,
         PSTARTDATE,
         PENDDATE,
         PLIFTINGACCOUNTID );
         RETURN ret_value;
   END CP_EVENT_COUNT;
   FUNCTION CP_GET_ADJ_RE_EN(
      PLIFTINGACCOUNTID IN VARCHAR2,
      PPRODFCSTID IN VARCHAR2,
      PSTARTDATE IN DATE,
      PENDDATE IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := UE_CT_REPORTING_MISC.CP_GET_ADJ_RE_EN      (
         PLIFTINGACCOUNTID,
         PPRODFCSTID,
         PSTARTDATE,
         PENDDATE );
         RETURN ret_value;
   END CP_GET_ADJ_RE_EN;
   FUNCTION CP_GET_CARGO_LOADED_VOL(
      PCARGONO IN NUMBER)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := UE_CT_REPORTING_MISC.CP_GET_CARGO_LOADED_VOL      (
         PCARGONO );
         RETURN ret_value;
   END CP_GET_CARGO_LOADED_VOL;
   FUNCTION CP_GET_LIFTED_EN(
      PLIFTINGACCOUNTID IN VARCHAR2,
      PSTARTDATE IN DATE,
      PENDDATE IN DATE,
      PEVENTCODE IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := UE_CT_REPORTING_MISC.CP_GET_LIFTED_EN      (
         PLIFTINGACCOUNTID,
         PSTARTDATE,
         PENDDATE,
         PEVENTCODE );
         RETURN ret_value;
   END CP_GET_LIFTED_EN;
   FUNCTION CP_GET_NACPT_EN(
      PLIFTINGACCOUNTID IN VARCHAR2,
      PSTARTDATE IN DATE,
      PENDDATE IN DATE,
      PEVENTCODE IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := UE_CT_REPORTING_MISC.CP_GET_NACPT_EN      (
         PLIFTINGACCOUNTID,
         PSTARTDATE,
         PENDDATE,
         PEVENTCODE );
         RETURN ret_value;
   END CP_GET_NACPT_EN;
   FUNCTION CP_GET_NOM_CARGO_SIZE(
      PCARGO_NO IN NUMBER)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := UE_CT_REPORTING_MISC.CP_GET_NOM_CARGO_SIZE      (
         PCARGO_NO );
         RETURN ret_value;
   END CP_GET_NOM_CARGO_SIZE;
   FUNCTION CP_GET_REF_ENT_VOL(
      PLIFTINGACCOUNTID IN VARCHAR2,
      PPRODFCSTID IN VARCHAR2,
      PSTARTDATE IN DATE,
      PENDDATE IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := UE_CT_REPORTING_MISC.CP_GET_REF_ENT_VOL      (
         PLIFTINGACCOUNTID,
         PPRODFCSTID,
         PSTARTDATE,
         PENDDATE );
         RETURN ret_value;
   END CP_GET_REF_ENT_VOL;
   FUNCTION CP_GET_EVENRATABLE_RATIO(
      PLIFTING_ACCOUNT_ID IN VARCHAR2,
      PSCENARIO_ID IN VARCHAR2,
      PFORECAST_OBJECT_ID IN VARCHAR2,
      PMONTH IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := UE_CT_REPORTING_MISC.CP_GET_EVENRATABLE_RATIO      (
         PLIFTING_ACCOUNT_ID,
         PSCENARIO_ID,
         PFORECAST_OBJECT_ID,
         PMONTH );
         RETURN ret_value;
   END CP_GET_EVENRATABLE_RATIO;
   FUNCTION CP_GET_FCST_PRD_VOL(
      PSTORAGEID IN VARCHAR2,
      PPROFITCENTREID IN VARCHAR2,
      PPRODFCSTID IN VARCHAR2,
      PSTARTDATE IN DATE,
      PENDDATE IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := UE_CT_REPORTING_MISC.CP_GET_FCST_PRD_VOL      (
         PSTORAGEID,
         PPROFITCENTREID,
         PPRODFCSTID,
         PSTARTDATE,
         PENDDATE );
         RETURN ret_value;
   END CP_GET_FCST_PRD_VOL;
   FUNCTION CP_GET_LA_NOM_EN(
      PLIFTINGACCOUNTID IN VARCHAR2,
      PSTARTDATE IN DATE,
      PENDDATE IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := UE_CT_REPORTING_MISC.CP_GET_LA_NOM_EN      (
         PLIFTINGACCOUNTID,
         PSTARTDATE,
         PENDDATE );
         RETURN ret_value;
   END CP_GET_LA_NOM_EN;
   FUNCTION CP_GET_LA_NOM_VOL(
      PLIFTINGACCOUNTID IN VARCHAR2,
      PSTARTDATE IN DATE,
      PENDDATE IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := UE_CT_REPORTING_MISC.CP_GET_LA_NOM_VOL      (
         PLIFTINGACCOUNTID,
         PSTARTDATE,
         PENDDATE );
         RETURN ret_value;
   END CP_GET_LA_NOM_VOL;
   FUNCTION CP_GET_LA_UO_LIFT_EN(
      PLIFTINGACCOUNTID IN VARCHAR2,
      PDAYTIME IN DATE,
      PENDDATE IN DATE DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := UE_CT_REPORTING_MISC.CP_GET_LA_UO_LIFT_EN      (
         PLIFTINGACCOUNTID,
         PDAYTIME,
         PENDDATE );
         RETURN ret_value;
   END CP_GET_LA_UO_LIFT_EN;
   FUNCTION CP_APPROVEDPRODFCSTID(
      PSTORAGEID IN VARCHAR2,
      PPROFITCENTREID IN VARCHAR2,
      PSTARTDATE IN DATE,
      PENDDATE IN DATE)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := UE_CT_REPORTING_MISC.CP_APPROVEDPRODFCSTID      (
         PSTORAGEID,
         PPROFITCENTREID,
         PSTARTDATE,
         PENDDATE );
         RETURN ret_value;
   END CP_APPROVEDPRODFCSTID;
   FUNCTION CP_GET_LA_EXCESS_UNDERLIFT(
      PLIFTINGACCOUNTID IN VARCHAR2,
      PPERIODSTART IN DATE,
      PVALUE IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := UE_CT_REPORTING_MISC.CP_GET_LA_EXCESS_UNDERLIFT      (
         PLIFTINGACCOUNTID,
         PPERIODSTART,
         PVALUE );
         RETURN ret_value;
   END CP_GET_LA_EXCESS_UNDERLIFT;
   FUNCTION CP_GET_LA_XSL_UO_VOL(
      PLIFTINGACCOUNTID IN VARCHAR2,
      PENDDATE IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := UE_CT_REPORTING_MISC.CP_GET_LA_XSL_UO_VOL      (
         PLIFTINGACCOUNTID,
         PENDDATE );
         RETURN ret_value;
   END CP_GET_LA_XSL_UO_VOL;
   FUNCTION CP_GET_LIFTERS_PNC_ALLOWANCE(
      PLIFTING_ACCOUNT_ID IN VARCHAR2,
      PSCENARIO_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := UE_CT_REPORTING_MISC.CP_GET_LIFTERS_PNC_ALLOWANCE      (
         PLIFTING_ACCOUNT_ID,
         PSCENARIO_ID );
         RETURN ret_value;
   END CP_GET_LIFTERS_PNC_ALLOWANCE;
   FUNCTION CP_GET_MTH_REQ_VOL(
      PLIFTING_ACCOUNT_ID IN VARCHAR2,
      PSCENARIO_ID IN VARCHAR2,
      PMONTH IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := UE_CT_REPORTING_MISC.CP_GET_MTH_REQ_VOL      (
         PLIFTING_ACCOUNT_ID,
         PSCENARIO_ID,
         PMONTH );
         RETURN ret_value;
   END CP_GET_MTH_REQ_VOL;
   FUNCTION CP_GET_NACPT_VOL(
      PLIFTINGACCOUNTID IN VARCHAR2,
      PSTARTDATE IN DATE,
      PENDDATE IN DATE,
      PEVENTCODE IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := UE_CT_REPORTING_MISC.CP_GET_NACPT_VOL      (
         PLIFTINGACCOUNTID,
         PSTARTDATE,
         PENDDATE,
         PEVENTCODE );
         RETURN ret_value;
   END CP_GET_NACPT_VOL;
   FUNCTION CP_LY_START(
      PDAYTIME IN DATE)
      RETURN DATE
   IS
      ret_value    DATE ;
   BEGIN
      ret_value := UE_CT_REPORTING_MISC.CP_LY_START      (
         PDAYTIME );
         RETURN ret_value;
   END CP_LY_START;
   FUNCTION CP_VARIANCE_NOM_STATUS(
      PORIGINALCODE IN VARCHAR2,
      PCOMPARISONCODE IN VARCHAR2,
      PLIFTINGNO IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := UE_CT_REPORTING_MISC.CP_VARIANCE_NOM_STATUS      (
         PORIGINALCODE,
         PCOMPARISONCODE,
         PLIFTINGNO );
         RETURN ret_value;
   END CP_VARIANCE_NOM_STATUS;
   FUNCTION FTLLIFTERSCHEDQTYMMBTU(
      PPARCEL_NO IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := UE_CT_REPORTING_MISC.FTLLIFTERSCHEDQTYMMBTU      (
         PPARCEL_NO );
         RETURN ret_value;
   END FTLLIFTERSCHEDQTYMMBTU;
   FUNCTION CP_GET_ACTUAL_CARGO_EN(
      PCARGONO IN NUMBER)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := UE_CT_REPORTING_MISC.CP_GET_ACTUAL_CARGO_EN      (
         PCARGONO );
         RETURN ret_value;
   END CP_GET_ACTUAL_CARGO_EN;
   FUNCTION CP_GET_ADJ_RE_VOL(
      PLIFTINGACCOUNTID IN VARCHAR2,
      PPRODFCSTID IN VARCHAR2,
      PSTARTDATE IN DATE,
      PENDDATE IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := UE_CT_REPORTING_MISC.CP_GET_ADJ_RE_VOL      (
         PLIFTINGACCOUNTID,
         PPRODFCSTID,
         PSTARTDATE,
         PENDDATE );
         RETURN ret_value;
   END CP_GET_ADJ_RE_VOL;
   FUNCTION CP_GET_COND_LIFT_OCCURANCES(
      PSCENARIO_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := UE_CT_REPORTING_MISC.CP_GET_COND_LIFT_OCCURANCES      (
         PSCENARIO_ID );
         RETURN ret_value;
   END CP_GET_COND_LIFT_OCCURANCES;
   FUNCTION CP_GET_MTH_RE_VOL(
      PLIFTING_ACCOUNT_ID IN VARCHAR2,
      PFORECAST_OBJECT_ID IN VARCHAR2,
      PMONTH IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := UE_CT_REPORTING_MISC.CP_GET_MTH_RE_VOL      (
         PLIFTING_ACCOUNT_ID,
         PFORECAST_OBJECT_ID,
         PMONTH );
         RETURN ret_value;
   END CP_GET_MTH_RE_VOL;
   FUNCTION CP_GET_SYSTEM_PNC_ALLOWANCE(
      PLIFTING_ACCOUNT_ID IN VARCHAR2,
      PSCENARIO_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := UE_CT_REPORTING_MISC.CP_GET_SYSTEM_PNC_ALLOWANCE      (
         PLIFTING_ACCOUNT_ID,
         PSCENARIO_ID );
         RETURN ret_value;
   END CP_GET_SYSTEM_PNC_ALLOWANCE;
   FUNCTION CP_GET_VALIDATION_TEXT(
      PREFERENCE_LIFTING_NO IN VARCHAR2,
      PLIFTING_ACCOUNT_ID IN VARCHAR2,
      PFORECAST_ID IN VARCHAR2)
      RETURN VARCHAR2
   IS
      ret_value   VARCHAR2(4000) ;
   BEGIN
      ret_value := UE_CT_REPORTING_MISC.CP_GET_VALIDATION_TEXT      (
         PREFERENCE_LIFTING_NO,
         PLIFTING_ACCOUNT_ID,
         PFORECAST_ID );
         RETURN ret_value;
   END CP_GET_VALIDATION_TEXT;
   FUNCTION FAILEDTOLIFTLIFTERINTEREST(
      PCARGO_NO IN VARCHAR2,
      PPARCEL_NO IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := UE_CT_REPORTING_MISC.FAILEDTOLIFTLIFTERINTEREST      (
         PCARGO_NO,
         PPARCEL_NO );
         RETURN ret_value;
   END FAILEDTOLIFTLIFTERINTEREST;
   FUNCTION CP_GET_LA_UO_LIFT_VOL(
      PLIFTINGACCOUNTID IN VARCHAR2,
      PDAYTIME IN DATE,
      PENDDATE IN DATE DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := UE_CT_REPORTING_MISC.CP_GET_LA_UO_LIFT_VOL      (
         PLIFTINGACCOUNTID,
         PDAYTIME,
         PENDDATE );
         RETURN ret_value;
   END CP_GET_LA_UO_LIFT_VOL;
   FUNCTION CP_GET_LIFTED_VOL(
      PLIFTINGACCOUNTID IN VARCHAR2,
      PSTARTDATE IN DATE,
      PENDDATE IN DATE,
      PEVENTCODE IN VARCHAR2 DEFAULT NULL)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := UE_CT_REPORTING_MISC.CP_GET_LIFTED_VOL      (
         PLIFTINGACCOUNTID,
         PSTARTDATE,
         PENDDATE,
         PEVENTCODE );
         RETURN ret_value;
   END CP_GET_LIFTED_VOL;
   FUNCTION CP_GET_LA_XSL_UO_EN(
      PLIFTINGACCOUNTID IN VARCHAR2,
      PENDDATE IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := UE_CT_REPORTING_MISC.CP_GET_LA_XSL_UO_EN      (
         PLIFTINGACCOUNTID,
         PENDDATE );
         RETURN ret_value;
   END CP_GET_LA_XSL_UO_EN;
   FUNCTION CP_GET_PNC_ALLOWANCES_USED(
      PLIFTING_ACCOUNT_ID IN VARCHAR2,
      PSCENARIO_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := UE_CT_REPORTING_MISC.CP_GET_PNC_ALLOWANCES_USED      (
         PLIFTING_ACCOUNT_ID,
         PSCENARIO_ID );
         RETURN ret_value;
   END CP_GET_PNC_ALLOWANCES_USED;
   FUNCTION CP_GET_AVG_CARGO_SIZE(
      PLIFTING_ACCOUNT_ID IN VARCHAR2,
      PSCENARIO_ID IN VARCHAR2,
      POBJECT_CODE IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := UE_CT_REPORTING_MISC.CP_GET_AVG_CARGO_SIZE      (
         PLIFTING_ACCOUNT_ID,
         PSCENARIO_ID,
         POBJECT_CODE );
         RETURN ret_value;
   END CP_GET_AVG_CARGO_SIZE;
   FUNCTION CP_GET_FCST_PRD_EN(
      PSTORAGEID IN VARCHAR2,
      PPROFITCENTREID IN VARCHAR2,
      PPRODFCSTID IN VARCHAR2,
      PSTARTDATE IN DATE,
      PENDDATE IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := UE_CT_REPORTING_MISC.CP_GET_FCST_PRD_EN      (
         PSTORAGEID,
         PPROFITCENTREID,
         PPRODFCSTID,
         PSTARTDATE,
         PENDDATE );
         RETURN ret_value;
   END CP_GET_FCST_PRD_EN;
   FUNCTION CP_GET_MAX_LNG_CARRIER_VOL(
      PSCENARIO_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := UE_CT_REPORTING_MISC.CP_GET_MAX_LNG_CARRIER_VOL      (
         PSCENARIO_ID );
         RETURN ret_value;
   END CP_GET_MAX_LNG_CARRIER_VOL;
   FUNCTION CP_GET_PNC_TRADE(
      PLIFTING_ACCOUNT_ID IN VARCHAR2,
      PSCENARIO_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := UE_CT_REPORTING_MISC.CP_GET_PNC_TRADE      (
         PLIFTING_ACCOUNT_ID,
         PSCENARIO_ID );
         RETURN ret_value;
   END CP_GET_PNC_TRADE;
   FUNCTION CP_GET_REF_ENT_EN(
      PLIFTINGACCOUNTID IN VARCHAR2,
      PPRODFCSTID IN VARCHAR2,
      PSTARTDATE IN DATE,
      PENDDATE IN DATE)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := UE_CT_REPORTING_MISC.CP_GET_REF_ENT_EN      (
         PLIFTINGACCOUNTID,
         PPRODFCSTID,
         PSTARTDATE,
         PENDDATE );
         RETURN ret_value;
   END CP_GET_REF_ENT_EN;
   FUNCTION CP_GET_YR_REQ_VOL(
      PLIFTING_ACCOUNT_ID IN VARCHAR2,
      PSCENARIO_ID IN VARCHAR2)
      RETURN NUMBER
   IS
      ret_value   NUMBER ;
   BEGIN
      ret_value := UE_CT_REPORTING_MISC.CP_GET_YR_REQ_VOL      (
         PLIFTING_ACCOUNT_ID,
         PSCENARIO_ID );
         RETURN ret_value;
   END CP_GET_YR_REQ_VOL;

END RP_CT_REPORTING_MISC;
/